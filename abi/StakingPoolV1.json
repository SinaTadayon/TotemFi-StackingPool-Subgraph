{
  "contractName": "StakingPool",
  "sourceName": "contracts/Staking/StakingPool.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract TotemToken",
          "name": "_totemToken",
          "type": "address"
        },
        {
          "internalType": "contract RewardManager",
          "name": "_rewardManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_swapRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_btcToken",
          "type": "address"
        },
        {
          "internalType": "uint256[9]",
          "name": "_variables",
          "type": "uint256[9]"
        },
        {
          "internalType": "bool",
          "name": "_isEnhancedEnabled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ApproveTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DistributedBTC",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolMatured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolSorted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePrediction",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "btcAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "_getIndexedStakingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "_getStakingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "btcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collaborativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deletePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAveragePricePrediction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBTCBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getEstimatedBTCForUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "getIndexedPrizeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "getIndexedReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "getIndexedStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "getIndexedStakingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPathForUSDToBTC",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrizeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "hasUnStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "indexedClaimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEnhancedEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMatured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDecimal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialCollabReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "predictions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePrediction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "difference",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "prizeRewardWithdrawn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "didUnstake",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prizeRewardRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "purchaseBTC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardManager",
      "outputs": [
        {
          "internalType": "contract RewardManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[25]",
          "name": "addrArray",
          "type": "address[25]"
        },
        {
          "internalType": "uint256[25]",
          "name": "indexArray",
          "type": "uint256[25]"
        }
      ],
      "name": "setSortedStakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeLimitRangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedStakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePrediction",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeApr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totemToken",
      "outputs": [
        {
          "internalType": "contract TotemToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateMaturingPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdPrizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stuckToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawStuckTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getEstimatedBTCForUSD(uint256)": {
        "params": {
          "_amount": "Amount"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x240 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4D0F CODESIZE SUB DUP1 PUSH3 0x4D0F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x220 DUP2 LT ISZERO PUSH3 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH2 0x200 DUP9 ADD MLOAD SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xE0 ADD SWAP1 DUP6 DUP5 DUP5 DUP8 PUSH1 0x0 PUSH3 0x82 PUSH3 0x311 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP6 DUP4 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP5 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP12 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x80 MSTORE SWAP1 DUP12 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP10 AND OR SWAP1 SSTORE PUSH3 0x162 DUP5 PUSH3 0x315 JUMP JUMPDEST PUSH1 0x60 SWAP3 DUP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0xE0 SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x120 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH2 0x100 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH2 0x140 MSTORE SWAP7 DUP7 ADD MLOAD PUSH2 0x160 MSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x180 MSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH2 0x1A0 MSTORE SWAP3 DUP6 ADD MLOAD PUSH2 0x200 MSTORE SWAP1 DUP5 ADD MLOAD PUSH2 0x1C0 MSTORE SWAP3 ADD MLOAD PUSH2 0x1E0 MSTORE ISZERO ISZERO PUSH1 0xF8 SHL PUSH2 0x220 MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH2 0xEA6 DUP3 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0xD DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE SWAP5 MLOAD PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 PUSH1 0x2 SWAP3 DUP4 MUL DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP4 MLOAD PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB6 SWAP2 DUP3 ADD SSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE DUP3 DUP2 MSTORE PUSH2 0x7D0 DUP2 DUP10 ADD SWAP1 DUP2 MSTORE DUP5 SLOAD DUP1 DUP9 ADD DUP7 SSTORE DUP6 DUP10 MSTORE SWAP2 MLOAD SWAP2 DUP5 MUL DUP1 DUP8 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD SWAP1 DUP3 ADD SSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH2 0x3E8 DUP2 DUP10 ADD SWAP1 DUP2 MSTORE DUP5 SLOAD DUP1 DUP9 ADD DUP7 SSTORE DUP6 DUP10 MSTORE SWAP2 MLOAD SWAP2 DUP5 MUL DUP1 DUP8 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD SWAP1 DUP3 ADD SSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0xFA DUP2 DUP10 ADD SWAP1 DUP2 MSTORE DUP5 SLOAD DUP1 DUP9 ADD DUP7 SSTORE DUP6 DUP10 MSTORE SWAP2 MLOAD SWAP2 DUP5 MUL DUP1 DUP8 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD SWAP1 DUP3 ADD SSTORE DUP8 MLOAD DUP1 DUP10 ADD SWAP1 SWAP9 MSTORE PUSH1 0x19 DUP9 MSTORE PUSH1 0x64 SWAP7 DUP9 ADD SWAP7 DUP8 MSTORE DUP3 SLOAD SWAP5 DUP6 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP5 MSTORE SWAP5 MLOAD SWAP2 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP1 MLOAD SWAP2 ADD SSTORE POP PUSH3 0x337 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH1 0xF8 SHR PUSH2 0x484C PUSH3 0x4C3 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x13E7 MSTORE DUP1 PUSH2 0x4334 MSTORE POP DUP1 PUSH2 0xD45 MSTORE DUP1 PUSH2 0xD89 MSTORE DUP1 PUSH2 0x2FAE MSTORE POP DUP1 PUSH2 0x17E6 MSTORE DUP1 PUSH2 0x1A79 MSTORE POP DUP1 PUSH2 0x17C2 MSTORE DUP1 PUSH2 0x35F2 MSTORE DUP1 PUSH2 0x3622 MSTORE POP DUP1 PUSH2 0xC71 MSTORE DUP1 PUSH2 0x18C8 MSTORE DUP1 PUSH2 0x21E0 MSTORE DUP1 PUSH2 0x26F6 MSTORE DUP1 PUSH2 0x2B1F MSTORE DUP1 PUSH2 0x3A30 MSTORE DUP1 PUSH2 0x426B MSTORE POP DUP1 PUSH2 0x1A00 MSTORE DUP1 PUSH2 0x3AB2 MSTORE DUP1 PUSH2 0x42B4 MSTORE POP DUP1 PUSH2 0x2540 MSTORE DUP1 PUSH2 0x33F9 MSTORE POP DUP1 PUSH2 0x142F MSTORE DUP1 PUSH2 0x1AE2 MSTORE DUP1 PUSH2 0x1C59 MSTORE DUP1 PUSH2 0x2060 MSTORE POP DUP1 PUSH2 0xBCE MSTORE DUP1 PUSH2 0x140B MSTORE DUP1 PUSH2 0x1712 MSTORE DUP1 PUSH2 0x33AC MSTORE POP DUP1 PUSH2 0xB14 MSTORE DUP1 PUSH2 0xBEF MSTORE DUP1 PUSH2 0x1733 MSTORE DUP1 PUSH2 0x338A MSTORE DUP1 PUSH2 0x4387 MSTORE POP DUP1 PUSH2 0xAF0 MSTORE DUP1 PUSH2 0xC10 MSTORE DUP1 PUSH2 0x1754 MSTORE DUP1 PUSH2 0x3369 MSTORE DUP1 PUSH2 0x4366 MSTORE POP DUP1 PUSH2 0x94B MSTORE DUP1 PUSH2 0xEBA MSTORE DUP1 PUSH2 0x2722 MSTORE DUP1 PUSH2 0x2B4B MSTORE POP DUP1 PUSH2 0xB38 MSTORE DUP1 PUSH2 0x25AD MSTORE DUP1 PUSH2 0x263C MSTORE DUP1 PUSH2 0x29D7 MSTORE DUP1 PUSH2 0x2A66 MSTORE POP DUP1 PUSH2 0x15C3 MSTORE DUP1 PUSH2 0x1B15 MSTORE DUP1 PUSH2 0x1BA6 MSTORE DUP1 PUSH2 0x1CF2 MSTORE DUP1 PUSH2 0x1DB5 MSTORE DUP1 PUSH2 0x1DE4 MSTORE DUP1 PUSH2 0x257E MSTORE DUP1 PUSH2 0x2832 MSTORE DUP1 PUSH2 0x29A8 MSTORE DUP1 PUSH2 0x2C59 MSTORE DUP1 PUSH2 0x2FD2 MSTORE POP PUSH2 0x484C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3AF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x857B21EE GT PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC6C1DECD GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xEEE39403 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF3D9DC0D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x924 JUMPI DUP1 PUSH4 0xFD8FD47F EQ PUSH2 0x941 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xEEE39403 EQ PUSH2 0x896 JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8EE JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x83E JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xEDA2D424 EQ PUSH2 0x88E JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0xD83DB49F EQ PUSH2 0x821 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xA150194B GT PUSH2 0x192 JUMPI DUP1 PUSH4 0xB1B1E1C0 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0xB1B1E1C0 EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xBF852196 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x801 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xA150194B EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xA508BC71 EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x7CC JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x8E15F473 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0x9234A39A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9D9A62DF EQ PUSH2 0x747 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x857B21EE EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x727 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x73F31703 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x7D1FCBFA GT PUSH2 0x246 JUMPI DUP1 PUSH4 0x7D1FCBFA EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x685 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x73F31703 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x765E14D8 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x631 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x5E2E2FFC GT PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x5E2E2FFC EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5ED JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x5B9F4F90 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x59F JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x2E577D07 GT PUSH2 0x351 JUMPI DUP1 PUSH4 0x444A4902 GT PUSH2 0x320 JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x569 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x31769EF7 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x45E JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xD668087 GT PUSH2 0x38D JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x1898A1A7 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x43C JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x74BC101 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x9082C29 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB97BC86 EQ PUSH2 0x407 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BC PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x444 PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BC PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x444 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x466 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x492 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x18C6 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x20FF JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x6B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2183 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x232C JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x246C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x247F JUMP JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2484 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x54D PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x77C PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7A0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x298C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2DB1 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2EF1 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2F3C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2F4B JUMP JUMPDEST PUSH2 0x54D PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2F61 JUMP JUMPDEST PUSH2 0x85B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x300B JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x301F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x30A2 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x31E4 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x85B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x3209 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x98C PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAA9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xADD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH2 0xB67 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB87 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x46B6 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xCEE JUMPI PUSH2 0xC9D PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xCEE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333631204254432052657761726473206E6F7420617661696C61626C650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xD43 JUMPI PUSH1 0x8 SLOAD PUSH2 0xD43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 PUSH2 0xD73 PUSH2 0x2DB1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD83 DUP2 PUSH4 0x9502F900 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0xDAC JUMPI PUSH32 0x0 PUSH1 0xB SSTORE JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xDC3 JUMPI PUSH1 0x8 SLOAD PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE57 JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x6 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDE8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xE1F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xDCB JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF6A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB7 PUSH2 0x3284 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1004 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x104E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x106B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1096 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10E1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1054 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1112 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x1171 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x11AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x11D4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x115A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1286 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x478C PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x13B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13BF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x13DB JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1484 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1560 JUMPI PUSH1 0x0 PUSH2 0x1549 DUP7 DUP4 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1555 DUP4 DUP3 PUSH2 0x345A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1534 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x157C PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x15C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4708 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1699 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16CB PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x47E1 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BB PUSH2 0x23D2 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1810 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1821 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x187C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x19AF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x191D JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x19DB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19E8 DUP7 DUP7 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F4 DUP3 DUP3 PUSH2 0x345A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x47B7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B0E PUSH1 0x64 PUSH2 0x1B08 PUSH32 0x0 PUSH1 0x5 PUSH2 0x34BB JUMP JUMPDEST SWAP1 PUSH2 0x3514 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x1BD3 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1C4F JUMPI PUSH2 0x1C4A DUP7 DUP4 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x1C7E PUSH32 0x0 DUP6 PUSH2 0x345A JUMP JUMPDEST PUSH2 0x1C9D DUP3 PUSH2 0x1C97 DUP10 PUSH1 0x9 SLOAD PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x358D JUMP JUMPDEST GT ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x46E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CE4 DUP7 DUP4 PUSH2 0x35EA JUMP JUMPDEST SWAP7 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x1D1F PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP8 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DAB SWAP1 POP DUP7 DUP3 PUSH2 0x358D JUMP JUMPDEST SWAP6 POP DUP3 ISZERO PUSH2 0x1EE2 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EEF SWAP1 DUP8 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F0A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0x0 PUSH2 0x1F24 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x6 SWAP1 PUSH2 0x1F85 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH32 0x0 GT PUSH2 0x208C JUMPI PUSH2 0x208C PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x2094 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH2 0x20F2 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3686 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2197 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x223B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x476B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2290 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x22DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220646561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22E6 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x22F2 DUP2 DUP5 PUSH2 0x36BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2317 PUSH2 0x2310 DUP4 PUSH2 0x12C PUSH2 0x357B JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0x2325 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x3782 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2340 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2437 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2464 JUMPI PUSH1 0x0 PUSH2 0x2466 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH2 0x247A PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x391B JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2498 PUSH2 0x2492 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x24F6 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2521 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2570 PUSH2 0x2492 PUSH2 0x3212 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x26D1 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x26D1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2671 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DC PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3B70 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2937 JUMPI PUSH32 0x0 ISZERO PUSH2 0x2815 JUMPI DUP1 ISZERO PUSH2 0x2804 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2757 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x279E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2804 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033333 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2815 PUSH2 0x280F PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3C2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2828 PUSH2 0x2822 PUSH2 0x3212 JUMP JUMPDEST DUP6 PUSH2 0x3CB1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2935 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2867 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28EC SWAP1 POP PUSH2 0x28E6 PUSH2 0x3212 JUMP JUMPDEST DUP6 PUSH2 0x3DF6 JUMP JUMPDEST PUSH2 0x28F4 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x293F PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x299A PUSH2 0x20F2 PUSH2 0x3212 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2AFB JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2AFB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2A9B PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2B0B PUSH2 0x2B06 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3E63 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D5D JUMPI PUSH32 0x0 ISZERO PUSH2 0x2C3D JUMPI DUP1 ISZERO PUSH2 0x2C2D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2B80 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2C2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2C3D PUSH2 0x2C38 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4F PUSH2 0x2C4A PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3F6A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D5B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2C8E PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D12 SWAP1 POP PUSH2 0x2D0D PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x40A8 JUMP JUMPDEST PUSH2 0x2D1A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x2D65 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2DC6 JUMPI POP PUSH1 0x0 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2EE2 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2DE7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x7 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x2E1E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2E3A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x2ED7 SWAP2 PUSH2 0x2ED0 SWAP2 SWAP1 PUSH2 0x34BB JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x2DCA JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2466 SWAP1 DUP3 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH2 0x2F6E PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH2 0x3CB1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH2 0x3001 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2498 PUSH2 0x3019 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x4117 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3084 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x30B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x30D8 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30E9 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3144 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH2 0x2C4A JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD DUP4 GT ISZERO PUSH2 0x3254 JUMPI PUSH1 0xA SLOAD PUSH2 0x322F DUP5 DUP5 PUSH2 0x358D JUMP JUMPDEST GT PUSH2 0x323C JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x324D SWAP1 PUSH2 0x1C97 DUP6 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3261 DUP5 DUP5 PUSH2 0x345A JUMP JUMPDEST LT PUSH2 0x326E JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x324D PUSH2 0x327B DUP5 DUP5 PUSH2 0x345A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x32E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x33DA JUMPI TIMESTAMP PUSH2 0x33DC JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33ED DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x4330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3435 PUSH2 0x341E PUSH32 0x0 DUP5 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x342E SWAP1 DUP7 SWAP1 PUSH2 0x358D JUMP JUMPDEST DUP8 MLOAD PUSH2 0x4437 JUMP JUMPDEST SWAP1 POP PUSH2 0x344E DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x358D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x34B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x34CA JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x34D7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x34B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x474A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x356A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3573 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B4 PUSH2 0x2710 PUSH2 0x1B08 DUP6 DUP6 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x35E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x361D JUMPI PUSH1 0x0 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x3647 PUSH32 0x0 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x365B JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST PUSH2 0x3665 DUP6 DUP3 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x3679 PUSH2 0x3672 DUP8 DUP5 PUSH2 0x357B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3697 DUP7 PUSH2 0x1451 JUMP JUMPDEST SWAP1 POP PUSH2 0x36A2 DUP7 PUSH2 0x391B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x36B1 DUP2 DUP5 PUSH2 0x345A JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3727 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x37B0 PUSH2 0x24B7 JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3822 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x380A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x38A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x38DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3907 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x38EF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x393C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3A04 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3972 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3A21 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x249D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3A59 SWAP1 PUSH2 0x1B08 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3AF9 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3A76 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x3AF1 JUMPI PUSH1 0x0 PUSH2 0x3AA8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x4540 JUMP JUMPDEST SWAP1 POP PUSH2 0x3ADE PUSH2 0x3AD7 PUSH32 0x0 DUP4 PUSH2 0x357B JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP4 POP PUSH2 0x3AED PUSH2 0x2ED0 DUP7 DUP4 PUSH2 0x357B JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3A61 JUMP JUMPDEST POP PUSH1 0xB SLOAD ISZERO PUSH2 0x3B2A JUMPI PUSH1 0xB SLOAD PUSH2 0x3B10 SWAP1 DUP4 SWAP1 PUSH2 0x4667 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B27 PUSH1 0xB SLOAD DUP3 PUSH2 0x4667 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3B48 DUP8 DUP8 PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP PUSH2 0x3B54 DUP8 DUP8 PUSH2 0x4117 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3B63 DUP2 DUP5 PUSH2 0x345A JUMP JUMPDEST SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3B94 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x3BA2 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAE DUP5 DUP5 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BBD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3C02 DUP2 DUP4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3BE2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3C0E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3C4E JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3C5A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3C7C JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3C8A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3D76 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3CE4 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3D90 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x3DA2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3DB0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x3DEE JUMPI PUSH2 0x3DEB DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3DD0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E1A JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x3E28 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E36 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E87 JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x0 PUSH2 0x3E9F DUP5 DUP4 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EAE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3ED3 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BE2 JUMPI INVALID JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EDF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x3E8A JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3F26 JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F40 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x402F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3F9D JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x4049 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1560 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4062 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x40A0 JUMPI PUSH2 0x409D DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4082 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x404D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x40CC JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x40E6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x40CF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4138 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4200 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x416E JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x421D JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST DUP1 MLOAD DUP5 LT PUSH2 0x4232 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST DUP1 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x423E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD ISZERO PUSH2 0x425C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4294 SWAP1 PUSH2 0x1B08 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x42AA DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x3A97 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x42D9 PUSH2 0x2ED0 PUSH32 0x0 DUP4 PUSH2 0x357B JUMP JUMPDEST SWAP3 POP PUSH2 0x42EF PUSH2 0x42E8 DUP6 DUP4 PUSH2 0x357B JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x345A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x4322 JUMPI PUSH1 0xB SLOAD PUSH2 0x4308 SWAP1 DUP5 SWAP1 PUSH2 0x4667 JUMP JUMPDEST SWAP3 POP PUSH2 0x431F PUSH1 0xB SLOAD DUP4 PUSH2 0x4667 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x435F JUMPI POP PUSH1 0x0 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43AB PUSH32 0x0 PUSH32 0x0 PUSH2 0x345A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43B9 DUP3 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x43D1 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x43E7 JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x43FD JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x4414 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x442B JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x4454 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4470 PUSH2 0x1388 PUSH2 0x446A DUP6 DUP2 DUP11 DUP13 PUSH2 0x34BB JUMP JUMPDEST SWAP1 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4487 PUSH2 0x1388 PUSH2 0x446A DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44A0 PUSH1 0x6 PUSH2 0x1B08 PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44C3 PUSH1 0x2 PUSH2 0x1B08 DUP9 PUSH2 0x446A PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x34BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44DC PUSH1 0x3 PUSH2 0x1B08 PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44F6 DUP3 PUSH2 0x44F0 DUP7 DUP2 DUP12 DUP12 PUSH2 0x345A JUMP JUMPDEST SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP1 POP PUSH2 0x4506 DUP4 PUSH2 0x1C97 DUP4 DUP9 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0x4516 DUP12 PUSH2 0x446A DUP4 DUP16 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH2 0x4530 PUSH5 0xE8D4A51000 PUSH2 0x1B08 PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x34BB JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x4550 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x458F JUMPI PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x459D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x45C3 JUMPI PUSH1 0xD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x45D1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x45F7 JUMPI PUSH1 0xD PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x4605 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x462B JUMPI PUSH1 0xD PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x4 DUP2 SLOAD DUP2 LT PUSH2 0x4639 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x465F JUMPI PUSH1 0xD PUSH1 0x4 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST POP PUSH1 0x0 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4676 JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST DUP2 PUSH2 0x4682 JUMPI POP DUP2 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x34B4 PUSH2 0x2ED0 DUP5 DUP5 PUSH2 0x357B JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303334302054 PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH15 0x6F7420425443207265776172646572 ADDRESS CALLER CODESIZE ADDRESS KECCAK256 PUSH21 0x6869732061646472657373206469646E2774207374 PUSH2 0x6B65 KECCAK256 PUSH10 0x6E207468697320706F6F PUSH13 0x3033313120416D6F756E742063 PUSH2 0x6E27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333530204361 PUSH15 0x277420736574206D61747572696E67 KECCAK256 PUSH17 0x72696365206265666F726520746865206D PUSH2 0x7475 PUSH19 0x6974792074696D65A2646970667358221220E0 STATICCALL SWAP10 SDIV PUSH22 0xA081896FAA6534672F6D4AE226D59C2DA44A6BA0C70 JUMP CREATE 0xE7 0x5D 0xE7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
      "sourceMap": "219:29877:31:-:0;;;2711:1425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2711:1425:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:17:1;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:1;-1:-1:-1;;;;;909:18:1;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:1;942:43;;909:6;;942:43;-1:-1:-1;;;;;;353:21:23;;345:30;;;;;;385:9;:42;;-1:-1:-1;;;;;;385:42:23;;;-1:-1:-1;;;;;385:42:23;;;;;;;531:10:19;:48;;;;;;;;;;;;;;589:21;:43;;;;;;;;;;;;;;642:21;:43;;;;;;;;;;;;;3127:24:31::2;::::0;;;-1:-1:-1;;3127:24:31;;;::::2;::::0;3161:30;;;;;-1:-1:-1;3161:30:31;3202:11:::2;:26:::0;;;;::::2;::::0;;::::2;;::::0;;3239:22:::2;3251:9:::0;3239:11:::2;:22::i;:::-;-1:-1:-1::0;;3271:28:31::2;::::0;;;;::::2;::::0;;;3322:15:::2;3310:27;::::0;;;3362:13;;3347:28:::2;::::0;3362:13:::2;3396::::0;;::::2;::::0;3385:24:::2;::::0;;;3437:13;;;::::2;::::0;3420:30:::2;::::0;3471:13;;::::2;::::0;3460:24:::2;::::0;3508:13;;::::2;::::0;3494:27:::2;::::0;3548:13;;::::2;::::0;3531:30:::2;::::0;3595:13;;::::2;::::0;3571:37:::2;::::0;3633:13;;::::2;::::0;3618:28:::2;::::0;3677:13;::::2;::::0;3656:34:::2;::::0;3704:38:::2;;;;;::::0;3776:44;;;;::::2;::::0;;-1:-1:-1;3776:44:31;;;3814:4:::2;3776:44:::0;;::::2;::::0;;;3754:16:::2;:67:::0;;;;::::2;::::0;;-1:-1:-1;3754:67:31;;;;;3448:1:::2;3754:67:::0;;::::2;::::0;;;::::2;::::0;;;;;;;;;;;3853:44;;;;::::2;::::0;;;;;3891:4:::2;3853:44:::0;;::::2;::::0;;;3831:67;;;;::::2;::::0;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;3930:44;;;;::::2;::::0;;3482:1:::2;3930:44:::0;;3968:4:::2;3930:44:::0;;::::2;::::0;;;3908:67;;;;::::2;::::0;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;4007:44;;;;::::2;::::0;;4030:2:::2;4007:44:::0;;4046:3:::2;4007:44:::0;;::::2;::::0;;;3985:67;;;;::::2;::::0;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;;;;4084:44;;;;::::2;::::0;;;4107:2:::2;4084:44:::0;;4123:3:::2;4084:44:::0;;::::2;::::0;;;4062:67;;;;::::2;::::0;;;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;-1:-1:-1;219:29877:31;;-1:-1:-1;;;;;219:29877:31;598:104:13;685:10;598:104;:::o;372:118:20:-;441:12;:42;;-1:-1:-1;;;;;;441:42:20;-1:-1:-1;;;;;441:42:20;;;;;;;;;;372:118::o;219:29877:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {
        "5407": [
          {
            "length": 32,
            "start": 5571
          },
          {
            "length": 32,
            "start": 6933
          },
          {
            "length": 32,
            "start": 7078
          },
          {
            "length": 32,
            "start": 7410
          },
          {
            "length": 32,
            "start": 7605
          },
          {
            "length": 32,
            "start": 7652
          },
          {
            "length": 32,
            "start": 9598
          },
          {
            "length": 32,
            "start": 10290
          },
          {
            "length": 32,
            "start": 10664
          },
          {
            "length": 32,
            "start": 11353
          },
          {
            "length": 32,
            "start": 12242
          }
        ],
        "5409": [
          {
            "length": 32,
            "start": 2872
          },
          {
            "length": 32,
            "start": 9645
          },
          {
            "length": 32,
            "start": 9788
          },
          {
            "length": 32,
            "start": 10711
          },
          {
            "length": 32,
            "start": 10854
          }
        ],
        "5411": [
          {
            "length": 32,
            "start": 2379
          },
          {
            "length": 32,
            "start": 3770
          },
          {
            "length": 32,
            "start": 10018
          },
          {
            "length": 32,
            "start": 11083
          }
        ],
        "5413": [
          {
            "length": 32,
            "start": 2800
          },
          {
            "length": 32,
            "start": 3088
          },
          {
            "length": 32,
            "start": 5972
          },
          {
            "length": 32,
            "start": 13161
          },
          {
            "length": 32,
            "start": 17254
          }
        ],
        "5415": [
          {
            "length": 32,
            "start": 2836
          },
          {
            "length": 32,
            "start": 3055
          },
          {
            "length": 32,
            "start": 5939
          },
          {
            "length": 32,
            "start": 13194
          },
          {
            "length": 32,
            "start": 17287
          }
        ],
        "5417": [
          {
            "length": 32,
            "start": 3022
          },
          {
            "length": 32,
            "start": 5131
          },
          {
            "length": 32,
            "start": 5906
          },
          {
            "length": 32,
            "start": 13228
          }
        ],
        "5419": [
          {
            "length": 32,
            "start": 5167
          },
          {
            "length": 32,
            "start": 6882
          },
          {
            "length": 32,
            "start": 7257
          },
          {
            "length": 32,
            "start": 8288
          }
        ],
        "5421": [
          {
            "length": 32,
            "start": 9536
          },
          {
            "length": 32,
            "start": 13305
          }
        ],
        "5423": [
          {
            "length": 32,
            "start": 6656
          },
          {
            "length": 32,
            "start": 15026
          },
          {
            "length": 32,
            "start": 17076
          }
        ],
        "5425": [
          {
            "length": 32,
            "start": 3185
          },
          {
            "length": 32,
            "start": 6344
          },
          {
            "length": 32,
            "start": 8672
          },
          {
            "length": 32,
            "start": 9974
          },
          {
            "length": 32,
            "start": 11039
          },
          {
            "length": 32,
            "start": 14896
          },
          {
            "length": 32,
            "start": 17003
          }
        ],
        "5427": [
          {
            "length": 32,
            "start": 6082
          },
          {
            "length": 32,
            "start": 13810
          },
          {
            "length": 32,
            "start": 13858
          }
        ],
        "5429": [
          {
            "length": 32,
            "start": 6118
          },
          {
            "length": 32,
            "start": 6777
          }
        ],
        "5452": [
          {
            "length": 32,
            "start": 3397
          },
          {
            "length": 32,
            "start": 3465
          },
          {
            "length": 32,
            "start": 12206
          }
        ],
        "5458": [
          {
            "length": 32,
            "start": 5095
          },
          {
            "length": 32,
            "start": 17204
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3AF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x857B21EE GT PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC6C1DECD GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xEEE39403 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF3D9DC0D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x924 JUMPI DUP1 PUSH4 0xFD8FD47F EQ PUSH2 0x941 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xEEE39403 EQ PUSH2 0x896 JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8EE JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x83E JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xEDA2D424 EQ PUSH2 0x88E JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0xD83DB49F EQ PUSH2 0x821 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xA150194B GT PUSH2 0x192 JUMPI DUP1 PUSH4 0xB1B1E1C0 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0xB1B1E1C0 EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0xBF852196 EQ PUSH2 0x7F9 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x801 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xA150194B EQ PUSH2 0x764 JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0xA508BC71 EQ PUSH2 0x774 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x7CC JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x8E15F473 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0x9234A39A EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x73F JUMPI DUP1 PUSH4 0x9D9A62DF EQ PUSH2 0x747 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x857B21EE EQ PUSH2 0x6FC JUMPI DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x727 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x73F31703 GT PUSH2 0x277 JUMPI DUP1 PUSH4 0x7D1FCBFA GT PUSH2 0x246 JUMPI DUP1 PUSH4 0x7D1FCBFA EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x685 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x73F31703 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x765E14D8 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x631 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x5E2E2FFC GT PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x5E2E2FFC EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5ED JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x5B9F4F90 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x59F JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x2E577D07 GT PUSH2 0x351 JUMPI DUP1 PUSH4 0x444A4902 GT PUSH2 0x320 JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x569 JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x31769EF7 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x45E JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0xD668087 GT PUSH2 0x38D JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x1898A1A7 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x43C JUMPI PUSH2 0x3AF JUMP JUMPDEST DUP1 PUSH4 0x74BC101 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x9082C29 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xB97BC86 EQ PUSH2 0x407 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BC PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x444 PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BC PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x444 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0x466 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x492 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x18C6 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x20E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH2 0x20FF JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x6B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2183 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x232C JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x65C PUSH2 0x246C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x247F JUMP JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2484 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x24A2 JUMP JUMPDEST PUSH2 0x54D PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x77C PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7A0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x253E JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x444 PUSH2 0x298C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2DB1 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2EF1 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2F3C JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2F4B JUMP JUMPDEST PUSH2 0x54D PUSH2 0x2F51 JUMP JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2F61 JUMP JUMPDEST PUSH2 0x85B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2F74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x2FF4 JUMP JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x300B JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x301F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x65C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x30A2 JUMP JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D0 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x31E4 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x31EA JUMP JUMPDEST PUSH2 0x85B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x3209 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x98C PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAA9 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xADD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH2 0xB67 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH2 0x18EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB87 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x46B6 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xCEE JUMPI PUSH2 0xC9D PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0xCEE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333631204254432052657761726473206E6F7420617661696C61626C650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0xD43 JUMPI PUSH1 0x8 SLOAD PUSH2 0xD43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 PUSH2 0xD73 PUSH2 0x2DB1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD83 DUP2 PUSH4 0x9502F900 PUSH2 0x3216 JUMP JUMPDEST PUSH2 0xDAC JUMPI PUSH32 0x0 PUSH1 0xB SSTORE JUMPDEST POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xDC3 JUMPI PUSH1 0x8 SLOAD PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE57 JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x6 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDE8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xE1F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xDCB JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL OR AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF6A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB7 PUSH2 0x3284 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1004 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x104E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x106B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1096 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10E1 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1054 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1112 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x1171 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x11AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x11D4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x115A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1286 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x478C PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x13B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13BF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x13DB JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1516 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1484 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1560 JUMPI PUSH1 0x0 PUSH2 0x1549 DUP7 DUP4 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1555 DUP4 DUP3 PUSH2 0x345A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1534 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x157C PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x15C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4708 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1699 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16CB PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x47E1 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BB PUSH2 0x23D2 JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1810 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1821 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x187C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x19AF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x191D JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x19C9 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x19DB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19E8 DUP7 DUP7 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F4 DUP3 DUP3 PUSH2 0x345A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A77 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x47B7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B0E PUSH1 0x64 PUSH2 0x1B08 PUSH32 0x0 PUSH1 0x5 PUSH2 0x34BB JUMP JUMPDEST SWAP1 PUSH2 0x3514 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x1BD3 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1C4F JUMPI PUSH2 0x1C4A DUP7 DUP4 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x1C7E PUSH32 0x0 DUP6 PUSH2 0x345A JUMP JUMPDEST PUSH2 0x1C9D DUP3 PUSH2 0x1C97 DUP10 PUSH1 0x9 SLOAD PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x358D JUMP JUMPDEST GT ISZERO PUSH2 0x1CDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x46E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CE4 DUP7 DUP4 PUSH2 0x35EA JUMP JUMPDEST SWAP7 POP SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x1D1F PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP8 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DAB SWAP1 POP DUP7 DUP3 PUSH2 0x358D JUMP JUMPDEST SWAP6 POP DUP3 ISZERO PUSH2 0x1EE2 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EEF SWAP1 DUP8 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F0A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH1 0x0 PUSH2 0x1F24 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x6 SWAP1 PUSH2 0x1F85 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH32 0x0 GT PUSH2 0x208C JUMPI PUSH2 0x208C PUSH2 0x3284 JUMP JUMPDEST PUSH2 0x2094 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH2 0x20F2 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3686 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2197 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x223B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x476B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x2290 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x22DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220646561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x22E6 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x22F2 DUP2 DUP5 PUSH2 0x36BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2317 PUSH2 0x2310 DUP4 PUSH2 0x12C PUSH2 0x357B JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0x2325 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x3782 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2340 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4729 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2437 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2464 JUMPI PUSH1 0x0 PUSH2 0x2466 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20F7 PUSH2 0x247A PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x391B JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2498 PUSH2 0x2492 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3B36 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x24F6 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2521 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2570 PUSH2 0x2492 PUSH2 0x3212 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x26D1 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x26D1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2671 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x26E2 PUSH2 0x26DC PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3B70 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2937 JUMPI PUSH32 0x0 ISZERO PUSH2 0x2815 JUMPI DUP1 ISZERO PUSH2 0x2804 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2757 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x279E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2804 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033333 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2815 PUSH2 0x280F PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x3C2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2828 PUSH2 0x2822 PUSH2 0x3212 JUMP JUMPDEST DUP6 PUSH2 0x3CB1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2935 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2867 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28EC SWAP1 POP PUSH2 0x28E6 PUSH2 0x3212 JUMP JUMPDEST DUP6 PUSH2 0x3DF6 JUMP JUMPDEST PUSH2 0x28F4 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x293F PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x299A PUSH2 0x20F2 PUSH2 0x3212 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2AFB JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2AFB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2A9B PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2B0B PUSH2 0x2B06 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3E63 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D5D JUMPI PUSH32 0x0 ISZERO PUSH2 0x2C3D JUMPI DUP1 ISZERO PUSH2 0x2C2D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2B80 PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2C2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2C3D PUSH2 0x2C38 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3F02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4F PUSH2 0x2C4A PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x3F6A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2D5B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2C8E PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D12 SWAP1 POP PUSH2 0x2D0D PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x40A8 JUMP JUMPDEST PUSH2 0x2D1A PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x2D65 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2DC6 JUMPI POP PUSH1 0x0 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2EE2 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2DE7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x7 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x2E1E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2E3A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x2ED7 SWAP2 PUSH2 0x2ED0 SWAP2 SWAP1 PUSH2 0x34BB JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x2DCA JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2466 SWAP1 DUP3 SWAP1 PUSH2 0x3514 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH2 0x2F6E PUSH2 0x3212 JUMP JUMPDEST DUP4 PUSH2 0x3CB1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH2 0x3001 PUSH2 0x3212 JUMP JUMPDEST PUSH2 0x1451 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2498 PUSH2 0x3019 PUSH2 0x3212 JUMP JUMPDEST DUP5 PUSH2 0x4117 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3084 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x30B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x30D8 PUSH2 0x3212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30E9 PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3144 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3189 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3006 PUSH2 0x2C4A JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD DUP4 GT ISZERO PUSH2 0x3254 JUMPI PUSH1 0xA SLOAD PUSH2 0x322F DUP5 DUP5 PUSH2 0x358D JUMP JUMPDEST GT PUSH2 0x323C JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x324D SWAP1 PUSH2 0x1C97 DUP6 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3261 DUP5 DUP5 PUSH2 0x345A JUMP JUMPDEST LT PUSH2 0x326E JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x324D PUSH2 0x327B DUP5 DUP5 PUSH2 0x345A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x32E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x33DA JUMPI TIMESTAMP PUSH2 0x33DC JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33ED DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x4330 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3435 PUSH2 0x341E PUSH32 0x0 DUP5 PUSH2 0x345A JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x342E SWAP1 DUP7 SWAP1 PUSH2 0x358D JUMP JUMPDEST DUP8 MLOAD PUSH2 0x4437 JUMP JUMPDEST SWAP1 POP PUSH2 0x344E DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x358D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x34B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x34CA JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x34D7 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x34B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x474A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x356A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3573 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B4 PUSH2 0x2710 PUSH2 0x1B08 DUP6 DUP6 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x35E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x361D JUMPI PUSH1 0x0 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x3647 PUSH32 0x0 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x365B JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST PUSH2 0x3665 DUP6 DUP3 PUSH2 0x357B JUMP JUMPDEST PUSH2 0x3679 PUSH2 0x3672 DUP8 DUP5 PUSH2 0x357B JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3697 DUP7 PUSH2 0x1451 JUMP JUMPDEST SWAP1 POP PUSH2 0x36A2 DUP7 PUSH2 0x391B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x36B1 DUP2 DUP5 PUSH2 0x345A JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3727 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x37B0 PUSH2 0x24B7 JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3822 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x380A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x384B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x38A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x38DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3907 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x38EF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x393C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3A04 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3972 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3A21 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x249D JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3A59 SWAP1 PUSH2 0x1B08 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3AF9 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3A76 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x3AF1 JUMPI PUSH1 0x0 PUSH2 0x3AA8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A97 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x4540 JUMP JUMPDEST SWAP1 POP PUSH2 0x3ADE PUSH2 0x3AD7 PUSH32 0x0 DUP4 PUSH2 0x357B JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP4 POP PUSH2 0x3AED PUSH2 0x2ED0 DUP7 DUP4 PUSH2 0x357B JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3A61 JUMP JUMPDEST POP PUSH1 0xB SLOAD ISZERO PUSH2 0x3B2A JUMPI PUSH1 0xB SLOAD PUSH2 0x3B10 SWAP1 DUP4 SWAP1 PUSH2 0x4667 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B27 PUSH1 0xB SLOAD DUP3 PUSH2 0x4667 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3B48 DUP8 DUP8 PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP PUSH2 0x3B54 DUP8 DUP8 PUSH2 0x4117 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3B63 DUP2 DUP5 PUSH2 0x345A JUMP JUMPDEST SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3B94 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x3BA2 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BAE DUP5 DUP5 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BBD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3C02 DUP2 DUP4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x3BE2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3C0E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3C4E JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3C5A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3C7C JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3C8A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3D76 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3CE4 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3D90 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x3DA2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3DB0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x3DEE JUMPI PUSH2 0x3DEB DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x3DD0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E1A JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x3E28 JUMPI POP PUSH2 0x3C26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E36 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E87 JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x0 PUSH2 0x3E9F DUP5 DUP4 PUSH2 0x32C2 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EAE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3ED3 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BE2 JUMPI INVALID JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EDF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x3E8A JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3F26 JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F40 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3F29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x402F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3F9D JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x4049 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1560 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4062 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x40A0 JUMPI PUSH2 0x409D DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4082 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x345A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x404D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x40CC JUMPI POP PUSH2 0x3EFF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3EFC JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x40E6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x40CF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4138 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4200 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x416E JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x421D JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST DUP1 MLOAD DUP5 LT PUSH2 0x4232 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST DUP1 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x423E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD ISZERO PUSH2 0x425C JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x367F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4294 SWAP1 PUSH2 0x1B08 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x42AA DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x3A97 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x42D9 PUSH2 0x2ED0 PUSH32 0x0 DUP4 PUSH2 0x357B JUMP JUMPDEST SWAP3 POP PUSH2 0x42EF PUSH2 0x42E8 DUP6 DUP4 PUSH2 0x357B JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x345A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x4322 JUMPI PUSH1 0xB SLOAD PUSH2 0x4308 SWAP1 DUP5 SWAP1 PUSH2 0x4667 JUMP JUMPDEST SWAP3 POP PUSH2 0x431F PUSH1 0xB SLOAD DUP4 PUSH2 0x4667 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x435F JUMPI POP PUSH1 0x0 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43AB PUSH32 0x0 PUSH32 0x0 PUSH2 0x345A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x43B9 DUP3 DUP6 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x43D1 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x43E7 JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x43FD JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x4414 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x442B JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x4454 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4470 PUSH2 0x1388 PUSH2 0x446A DUP6 DUP2 DUP11 DUP13 PUSH2 0x34BB JUMP JUMPDEST SWAP1 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4487 PUSH2 0x1388 PUSH2 0x446A DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44A0 PUSH1 0x6 PUSH2 0x1B08 PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44C3 PUSH1 0x2 PUSH2 0x1B08 DUP9 PUSH2 0x446A PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x34BB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44DC PUSH1 0x3 PUSH2 0x1B08 PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x44F6 DUP3 PUSH2 0x44F0 DUP7 DUP2 DUP12 DUP12 PUSH2 0x345A JUMP JUMPDEST SWAP1 PUSH2 0x345A JUMP JUMPDEST SWAP1 POP PUSH2 0x4506 DUP4 PUSH2 0x1C97 DUP4 DUP9 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP PUSH2 0x4516 DUP12 PUSH2 0x446A DUP4 DUP16 PUSH2 0x34BB JUMP JUMPDEST SWAP1 POP PUSH2 0x4530 PUSH5 0xE8D4A51000 PUSH2 0x1B08 PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x34BB JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x4550 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x458F JUMPI PUSH1 0xD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x459D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x45C3 JUMPI PUSH1 0xD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x45D1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x45F7 JUMPI PUSH1 0xD PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x4605 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x462B JUMPI PUSH1 0xD PUSH1 0x3 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST PUSH1 0xD PUSH1 0x4 DUP2 SLOAD DUP2 LT PUSH2 0x4639 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 GT PUSH2 0x465F JUMPI PUSH1 0xD PUSH1 0x4 DUP2 SLOAD DUP2 LT PUSH2 0x4576 JUMPI INVALID JUMPDEST POP PUSH1 0x0 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4676 JUMPI POP PUSH1 0x0 PUSH2 0xB6D JUMP JUMPDEST DUP2 PUSH2 0x4682 JUMPI POP DUP2 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x34B4 PUSH2 0x2ED0 DUP5 DUP5 PUSH2 0x357B JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303334302054 PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH15 0x6F7420425443207265776172646572 ADDRESS CALLER CODESIZE ADDRESS KECCAK256 PUSH21 0x6869732061646472657373206469646E2774207374 PUSH2 0x6B65 KECCAK256 PUSH10 0x6E207468697320706F6F PUSH13 0x3033313120416D6F756E742063 PUSH2 0x6E27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333530204361 PUSH15 0x277420736574206D61747572696E67 KECCAK256 PUSH17 0x72696365206265666F726520746865206D PUSH2 0x7475 PUSH19 0x6974792074696D65A2646970667358221220E0 STATICCALL SWAP10 SDIV PUSH22 0xA081896FAA6534672F6D4AE226D59C2DA44A6BA0C70 JUMP CREATE 0xE7 0x5D 0xE7 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
      "sourceMap": "219:29877:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:32;;;:::i;:::-;;;;-1:-1:-1;;;;;971:32:31;;;;;;;;;;;;;;1305:353:19;;;;;;;;;;;;;;;;-1:-1:-1;1305:353:19;;:::i;:::-;;;;;;;;;;;;;;;;1010:34:31;;;:::i;1050:33::-;;;:::i;921:44::-;;;:::i;27452:159::-;;;;;;;;;;;;;;;;-1:-1:-1;27452:159:31;;:::i;12052:1567::-;;;:::i;:::-;;1954:98:19;;;:::i;9882:112:31:-;;;:::i;11602:71::-;;;:::i;14769:439::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14203:560;;;;;;;;;;;;;;;;-1:-1:-1;14203:560:31;;;;:::i;29419:509::-;;;;;;;;;;;;;;;;-1:-1:-1;29419:509:31;;-1:-1:-1;;;;;29419:509:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2219:39;;;:::i;1089:37::-;;;:::i;1133:39::-;;;:::i;17382:443::-;;;;;;;;;;;;;;;;-1:-1:-1;17382:443:31;-1:-1:-1;;;;;17382:443:31;;:::i;28950:357::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;28950:357:31;;;;;;;;;;;;;;;;;:::i;11775:272::-;;;:::i;1413:37::-;;;:::i;1456:43::-;;;:::i;1700:145:1:-;;;:::i;1367:39:31:-;;;:::i;17831:466::-;;;;;;;;;;;;;;;;-1:-1:-1;17831:466:31;;-1:-1:-1;;;;;17831:466:31;;;;;;:::i;1218:36::-;;;:::i;4142:2334::-;;;;;;;;;;;;;;;;-1:-1:-1;4142:2334:31;;;;;;;:::i;28207:120::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2290:21;;;:::i;1637:26::-;;;:::i;1506:60::-;;;;;;;;;;;;;;;;-1:-1:-1;1506:60:31;;-1:-1:-1;;;;;1506:60:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9047:829;;;;;;;;;;;;;;;;-1:-1:-1;9047:829:31;;;;;;;:::i;13624:108::-;;;:::i;1068:85:1:-;;;:::i;707:174:23:-;;;:::i;27617:120:31:-;;;:::i;1821:46::-;;;:::i;28332:154::-;;;;;;;;;;;;;;;;-1:-1:-1;28332:154:31;;:::i;1944:41::-;;;:::i;2264:20::-;;;:::i;1664:230:19:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:33:31;;;:::i;7862:1179::-;;;;;;;;;;;;;;;;-1:-1:-1;7862:1179:31;;:::i;6482:1374::-;;;:::i;11002:594::-;;;:::i;657:118:20:-;;;:::i;2186:26:31:-;;;:::i;1787:28::-;;;:::i;2317:21::-;;;:::i;28042:159::-;;;;;;;;;;;;;;;;-1:-1:-1;28042:159:31;;:::i;1601:29::-;;;;;;;;;;;;;;;;-1:-1:-1;1601:29:31;;:::i;:::-;;;;-1:-1:-1;;;;;1601:29:31;;;;;;;;;;;;;;;;;;;;;;1992:46;;;:::i;877:38::-;;;:::i;27332:115::-;;;:::i;27742:164::-;;;;;;;;;;;;;;;;-1:-1:-1;27742:164:31;;:::i;500:132:23:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2345:41:31;;;;;;;;;;;;;;;;-1:-1:-1;2345:41:31;;:::i;1994:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;1994:240:1;-1:-1:-1;;;;;1994:240:1;;:::i;2145:34:31:-;;;:::i;781:100:20:-;;;:::i;1572:23:31:-;;;;;;;;;;;;;;;;-1:-1:-1;1572:23:31;;:::i;27912:125::-;;;:::i;971:32::-;;;:::o;1305:353:19:-;1462:10;;1398:7;;;;-1:-1:-1;;;;;1462:10:19;:24;1487:7;1496:20;:18;:20::i;:::-;1462:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1462:55:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1462:55:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:96;;1639:9;1649:1;1639:12;;;;;;;;;;;;;;1632:19;;;1305:353;;;;:::o;1010:34:31:-;;;:::o;1050:33::-;;;:::o;921:44::-;;;:::o;27452:159::-;27528:7;27554:50;27579:12;:10;:12::i;:::-;27593:10;27554:24;:50::i;:::-;27547:57;27452:159;-1:-1:-1;;27452:159:31:o;12052:1567::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12177:12:::1;12166:8;12154:9;:20;:35;12135:15;:54;;12114:145;;;;-1:-1:-1::0;;;12114:145:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12282:14;:18:::0;12278:159:::1;;12341:15;:13;:15::i;:::-;12316:110;;;::::0;;-1:-1:-1;;;12316:110:31;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;12451:7;:14:::0;:18;12447:155:::1;;12510:13;:20:::0;12485:106:::1;;;::::0;;-1:-1:-1;;;12485:106:31;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;12485:106:31;;;;;;;;;;;;;::::1;;12700:21;:25:::0;12696:398:::1;;12879:26;12908:27;:25;:27::i;:::-;12879:56;;12953:48;12968:18;12988:12;12953:14;:48::i;:::-;12949:135;;13048:21;13026:19;:43:::0;12949:135:::1;12696:398;;13194:13;:20:::0;13180:11:::1;::::0;13217:2:::1;-1:-1:-1::0;13194:53:31::1;;13227:13;:20:::0;13194:53:::1;;;13222:2;13194:53;13180:67;;13262:9;13257:155;13281:3;13277:1;:7;13257:155;;;13396:1;13400;13396:5;13305:11;:43;13317:13;13331:1;13317:16;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:30:::0;-1:-1:-1;;;;;13317:30:31::1;13305:43:::0;;;::::1;::::0;;;;;;;;13349:13:::1;:16:::0;;13363:1;;13349:16;::::1;;;;;;;;;;;;;;;:22;;;13305:67;;;;;;;;;::::0;;;::::1;::::0;;;:72:::1;:67;::::0;;::::1;;:72;:96:::0;13286:3:::1;;13257:155;;;-1:-1:-1::0;13542:8:31::1;:15:::0;;-1:-1:-1;;;;;;;;13542:15:31;;::::1;-1:-1:-1::0;;;13542:15:31::1;13567:16;-1:-1:-1::0;;;13567:16:31::1;::::0;;13599:13:::1;::::0;::::1;::::0;-1:-1:-1;;13599:13:31::1;30086:1;12052:1567::o:0;1954:98:19:-;2034:10;;-1:-1:-1;;;;;2034:10:19;1954:98;;:::o;9882:112:31:-;9954:33;;;-1:-1:-1;;;9954:33:31;;9981:4;9954:33;;;;;;9928:7;;-1:-1:-1;;;;;9954:8:31;:18;;;;:33;;;;;;;;;;;;;;;:18;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9954:33:31;;-1:-1:-1;9882:112:31;:::o;11602:71::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11655:11:::1;:9;:11::i;:::-;11602:71::o:0;14769:439::-;14838:16;14856;14889:22;14928:7;:14;;;;14914:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14914:29:31;-1:-1:-1;14994:7:31;:14;14889:54;;-1:-1:-1;14953:24:31;;14980:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14980:29:31;;14953:56;;15025:9;15020:148;15044:7;:14;15040:18;;15020:148;;;15090:7;15098:1;15090:10;;;;;;;;;;;;;;;;;;;;;:24;15079:8;;-1:-1:-1;;;;;15090:24:31;;;;15079:8;;15085:1;;15079:8;;;;;;-1:-1:-1;;;;;15079:35:31;;;:8;;;;;;;;;;;:35;15141:7;:10;;15149:1;;15141:10;;;;;;;;;;;;;;;;:16;;;15128:7;15136:1;15128:10;;;;;;;;;;;;;;;;;:29;15060:3;;15020:148;;;-1:-1:-1;15186:5:31;;-1:-1:-1;15193:7:31;-1:-1:-1;14769:439:31;;:::o;14203:560::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14357:9:::1;14352:377;14376:16;14372:1;:20;14352:377;;;14539:1;14515:9:::0;14525:1;14515:12:::1;::::0;::::1;;;;;;;;;-1:-1:-1::0;;;;;14515:12:31::1;:26;14511:37;;;14543:5;;14511:37;14563:13;14595:109;;;;;;;;14635:9;14645:1;14635:12;;;;;;;;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;;;;14635:12:31::1;14595:109:::0;;::::1;14672:10:::0;14683:1;14672:13:::1;::::0;::::1;;;;;;::::0;;::::1;::::0;;;::::1;;14595:109:::0;;;14563:155;;::::1;::::0;;::::1;::::0;;-1:-1:-1;14563:155:31;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;14563:155:31::1;-1:-1:-1::0;;;;;14563:155:31;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;14394:3:::1;14352:377;;;-1:-1:-1::0;14744:12:31::1;::::0;::::1;::::0;;;::::1;14203:560:::0;;:::o;29419:509::-;-1:-1:-1;;;;;29557:19:31;;29499:4;29557:19;;;:11;:19;;;;;;;;29515:61;;;;;;;;;;;;;;;;;29499:4;;;;29515:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29628:1;29608:10;:17;:21;29587:111;;;;-1:-1:-1;;;29587:111:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29743:10;:17;29730:10;:30;29709:100;;;;;-1:-1:-1;;;29709:100:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;29829:10;29840;29829:22;;;;;;;;;;;;;;:33;;;29825:75;;;29885:4;29878:11;;;;;29825:75;-1:-1:-1;29916:5:31;;29419:509;-1:-1:-1;;;29419:509:31:o;2219:39::-;;;:::o;1089:37::-;;;:::o;1133:39::-;;;:::o;17382:443::-;-1:-1:-1;;;;;17507:19:31;;17446:7;17507:19;;;:11;:19;;;;;;;;17465:61;;;;;;;;;;;;;;;;;17446:7;;;;17465:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17540:10;:17;17561:1;17540:22;17536:36;;;17571:1;17564:8;;;;;17536:36;17583:14;17616:9;17611:184;17635:10;:17;17631:1;:21;17611:184;;;17673:22;17698:36;17724:6;17732:1;17698:25;:36::i;:::-;17673:61;-1:-1:-1;17758:26:31;:6;17673:61;17758:10;:26::i;:::-;17749:35;-1:-1:-1;;17654:3:31;;17611:184;;;-1:-1:-1;17812:6:31;17382:443;-1:-1:-1;;;17382:443:31:o;28950:357::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29133:10:::1;-1:-1:-1::0;;;;;29110:34:31;;::::1;::::0;;::::1;;;29089:115;;;;-1:-1:-1::0;;;29089:115:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29263:37;::::0;;-1:-1:-1;;;29263:37:31;;-1:-1:-1;;;;;29263:37:31;;::::1;;::::0;::::1;::::0;;;;;;;;;29241:11;;29263:19;::::1;::::0;-1:-1:-1;;29263:37:31;;;;;::::1;::::0;;;;;;;;-1:-1:-1;29263:19:31;:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;;28950:357:31:o;11775:272::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11905:12:::1;11894:8;11882:9;:20;:35;11863:15;:54;;11842:155;;;;-1:-1:-1::0;;;11842:155:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12024:16;:14;:16::i;:::-;12008:13;:32:::0;11775:272::o;1413:37::-;;;:::o;1456:43::-;;;:::o;1700:145:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:1;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:1::1;::::0;;1700:145::o;1367:39:31:-;;;:::o;17831:466::-;-1:-1:-1;;;;;17983:19:31;;17922:7;17983:19;;;:11;:19;;;;;;;;17941:61;;;;;;;;;;;;;;;;;17922:7;;;;17941:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18016:10;:17;18037:1;18016:22;18012:36;;;18047:1;18040:8;;;;;18012:36;18076:10;:17;18062:10;:31;18058:45;;18102:1;18095:8;;;;;18058:45;18114:14;18151:22;18176:45;18202:6;18210:10;18176:25;:45::i;:::-;18151:70;-1:-1:-1;18240:26:31;:6;18151:70;18240:10;:26::i;:::-;18231:35;17831:466;-1:-1:-1;;;;;;17831:466:31:o;1218:36::-;;;:::o;4142:2334::-;4228:8;;-1:-1:-1;;;4228:8:31;;;;4227:9;4219:41;;;;;-1:-1:-1;;;4219:41:31;;;;;;;;;;;;-1:-1:-1;;;4219:41:31;;;;;;;;;;;;;;;4289:18;4278:7;:29;;4270:84;;;;-1:-1:-1;;;4270:84:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4365:18;4386:47;4429:3;4386:38;:14;1866:1;4386:18;:38::i;:::-;:42;;:47::i;:::-;4365:68;;4443:22;4475:15;4493:10;-1:-1:-1;;;;;4493:18:31;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4493:20:31;;-1:-1:-1;4523:11:31;4549:10;-1:-1:-1;;;;;4549:20:31;;4570:12;:10;:12::i;:::-;4549:34;;;;;;;;;;;;;-1:-1:-1;;;;;4549:34:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4549:34:31;:63;;4590:22;:7;4604;4590:13;:22::i;:::-;4549:63;;;4586:1;4549:63;4523:89;-1:-1:-1;4760:30:31;:14;4779:10;4760:18;:30::i;:::-;4723:33;4752:3;4723:24;4739:7;4723:11;;:15;;:24;;;;:::i;:::-;:28;;:33::i;:::-;:67;;4627:227;;;;-1:-1:-1;;;4627:227:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5002:31;5016:7;5025;5002:13;:31::i;:::-;4974:59;-1:-1:-1;4974:59:31;-1:-1:-1;5044:10:31;-1:-1:-1;;;;;5044:23:31;;5081:12;:10;:12::i;:::-;5044:126;;;-1:-1:-1;5044:126:31;;;-1:-1:-1;;;;;;5044:126:31;;;-1:-1:-1;;;;;5044:126:31;;;;;;;;5115:4;5044:126;;;;5135:24;;;5044:126;;;;;;;;;;;;;;;;;;;-1:-1:-1;5044:126:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5264:16:31;;-1:-1:-1;5264:7:31;5276:3;5264:11;:16::i;:::-;5254:26;-1:-1:-1;5295:18:31;;5291:100;;5347:27;;;-1:-1:-1;;;5347:27:31;;;;-1:-1:-1;;;;;5327:10:31;:19;;;;;;5347:25;;:27;;;;;;;;;;;;;;5327:19;5347:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5347:27:31;5327:64;;;-1:-1:-1;5327:64:31;;;-1:-1:-1;;;;;;5327:64:31;;;-1:-1:-1;;;;;5327:64:31;;;;;;;;;;;;;;;;;;;5347:27;;5327:64;;;;;;;-1:-1:-1;5327:64:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5291:100:31;5416:11;;:24;;5432:7;5416:15;:24::i;:::-;5402:11;:38;;;;5451:7;5477:124;;;;;;;;5517:12;:10;:12::i;:::-;-1:-1:-1;;;;;5477:124:31;;;;;5554:11;:25;5566:12;:10;:12::i;:::-;-1:-1:-1;;;;;5554:25:31;;;;;;;;;;;;;;;;;-1:-1:-1;5554:25:31;;;:32;5477:124;;;5451:160;;-1:-1:-1;5451:160:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5451:160:31;;;;;;;;;;;;;;;;5622:11;;5634:12;:10;:12::i;:::-;-1:-1:-1;;;;;5622:25:31;;;;;;;;;;;;;;;-1:-1:-1;5622:25:31;;;5666:572;;;;;;;;;;5756:15;5666:572;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5666:572:31;;;;;;;;;;;;;;;;;;;;;;;;5622:626;;-1:-1:-1;5622:626:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5622:626:31;;;;;;;;;;;-1:-1:-1;;5622:626:31;;;;;;;;;;6263:11;;6278:14;-1:-1:-1;6259:149:31;;6386:11;:9;:11::i;:::-;6429:12;:10;:12::i;:::-;6423:46;;;;;;;;;;;;;;-1:-1:-1;;;;;6423:46:31;;;;;;;;;;;;;;;;4142:2334;;;;;;:::o;28207:120::-;28256:7;28265;28291:29;28307:12;:10;:12::i;:::-;28291:15;:29::i;:::-;28284:36;;;;28207:120;;:::o;2290:21::-;;;-1:-1:-1;;;2290:21:31;;;;;:::o;1637:26::-;;;;:::o;1506:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1506:60:31;;-1:-1:-1;1506:60:31;;;;;;;;;;;;;;;;;:::o;9047:829::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9185:1:::1;9168:14;:18;9160:64;;;;-1:-1:-1::0;;;9160:64:31::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9263:1;9251:9;:13;9243:51;;;::::0;;-1:-1:-1;;;9243:51:31;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9325:15;9313:8;:27;;9305:60;;;::::0;;-1:-1:-1;;;9305:60:31;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9305:60:31;;;;;;;;;;;;;::::1;;9423:25;9451:15;:13;:15::i;:::-;9423:43;;9476;9490:17;9509:9;9476:13;:43::i;:::-;9574:17;9594:32;9616:9;9594:21;:32::i;:::-;9574:52:::0;-1:-1:-1;9637:29:31::1;9681:35;9695:20;9574:52:::0;9711:3:::1;9695:15;:20::i;:::-;9681:9:::0;;:13:::1;:35::i;:::-;9637:79;;9727:142;9774:4;9793:9;9816:21;9851:8;9727:25;:142::i;:::-;30086:1;;;9047:829:::0;;:::o;13624:108::-;30006:11;;-1:-1:-1;;;;;30006:11:31;29990:12;:10;:12::i;:::-;-1:-1:-1;;;;;29990:27:31;;29969:107;;;;-1:-1:-1;;;29969:107:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13681:9:::1;:16:::0;;-1:-1:-1;;;;13681:16:31::1;-1:-1:-1::0;;;13681:16:31::1;::::0;;13712:13:::1;::::0;::::1;::::0;-1:-1:-1;;13712:13:31::1;13624:108::o:0;1068:85:1:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:1;;1068:85::o;707:174:23:-;798:9;;:27;;;-1:-1:-1;;;798:27:23;;;;754:7;;;;-1:-1:-1;;;;;798:9:23;;;;:25;;:27;;;;;-1:-1:-1;;798:27:23;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;798:27:23;;;;-1:-1:-1;852:1:23;843:10;;;:31;;873:1;843:31;;;864:5;843:31;836:38;;;707:174;:::o;27617:120:31:-;27666:7;27675;27701:29;27717:12;:10;:12::i;:::-;27701:15;:29::i;1821:46::-;1866:1;1821:46;:::o;28332:154::-;28401:7;28410;28436:43;28454:12;:10;:12::i;:::-;28468:10;28436:17;:43::i;:::-;28429:50;;;;28332:154;;;;:::o;1944:41::-;1984:1;1944:41;:::o;2264:20::-;;;-1:-1:-1;;;2264:20:31;;;;;:::o;1664:230:19:-;1767:16;;;1781:1;1767:16;;;1715;1767;;;;;1715;1743:21;;1767:16;1781:1;1767:16;;;;;;;;-1:-1:-1;;1803:21:19;;1793:7;;;;-1:-1:-1;;;;;;1803:21:19;;1793:7;;-1:-1:-1;1803:21:19;;1793:7;;;;-1:-1:-1;;;;;1793:31:19;;;:7;;;;;;;;;:31;1844:21;;1834:7;;1844:21;;;1834:7;;-1:-1:-1;;1834:7:19;;;;;;-1:-1:-1;;;;;1834:31:19;;;;:7;;;;;;;;;;;:31;1883:4;1664:230;-1:-1:-1;1664:230:19:o;1178:33:31:-;;;:::o;7862:1179::-;7930:14;7946:17;7967:43;7985:12;:10;:12::i;7967:43::-;7929:81;;-1:-1:-1;7929:81:31;-1:-1:-1;8025:10:31;;8021:264;;8140:44;;;-1:-1:-1;;;8140:44:31;;-1:-1:-1;;;;;8169:13:31;8140:44;;;;;;;;8188:6;;8140:10;:20;;;;:44;;;;;;;;;;;;;;:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8140:44:31;:54;8136:139;;-1:-1:-1;;;;;8214:13:31;:24;;8239:12;:10;:12::i;:::-;8253:6;8214:46;;;;;;;;;;;;;-1:-1:-1;;;;;8214:46:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8136:139;8303:55;8333:12;:10;:12::i;:::-;8347:10;8303:29;:55::i;:::-;8382:9;;-1:-1:-1;;;8382:9:31;;;;8378:600;;;8424:14;:18;8420:207;;8466:13;;8462:78;;-1:-1:-1;;;;;8489:8:31;:17;;8507:12;:10;:12::i;:::-;8521:9;8489:42;;;;;;;;;;;;;-1:-1:-1;;;;;8489:42:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8489:42:31;8481:59;;;;;-1:-1:-1;;;8481:59:31;;;;;;;;;;;;;;;-1:-1:-1;;;8481:59:31;;;;;;;;;;;;;;;8559:53;8587:12;:10;:12::i;:::-;8601:10;8559:27;:53::i;:::-;8642:21;8666:50;8691:12;:10;:12::i;:::-;8705:10;8666:24;:50::i;:::-;8642:74;-1:-1:-1;8734:17:31;;8730:238;;-1:-1:-1;;;;;8771:10:31;:19;;8791:12;:10;:12::i;:::-;8805:13;8771:48;;;;;;;;;;;;;-1:-1:-1;;;;;8771:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8838:55:31;;-1:-1:-1;8868:12:31;:10;:12::i;:::-;8882:10;8838:29;:55::i;:::-;8925:12;:10;:12::i;:::-;8917:36;;;;;;;;-1:-1:-1;;;;;8917:36:31;;;;;;;;;;;;;;8730:238;8378:600;;9002:12;:10;:12::i;:::-;8993:41;;;;;;;;;;;;;;-1:-1:-1;;;;;8993:41:31;;;;;;;;;;;;;;;;7862:1179;;;:::o;6482:1374::-;6525:14;6541:17;6562:29;6578:12;:10;:12::i;6562:29::-;6524:67;;-1:-1:-1;6524:67:31;-1:-1:-1;6606:10:31;;6602:262;;6636:44;;;-1:-1:-1;;;6636:44:31;;-1:-1:-1;;;;;6665:13:31;6636:44;;;;;;;;6684:6;;6636:10;:20;;;;:44;;;;;;;;;;;;;;:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6636:44:31;:54;6632:222;;-1:-1:-1;;;;;6793:13:31;:24;;6818:12;:10;:12::i;:::-;6832:6;6793:46;;;;;;;;;;;;;-1:-1:-1;;;;;6793:46:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6632:222;6964:36;6987:12;:10;:12::i;:::-;6964:22;:36::i;:::-;7024:9;;-1:-1:-1;;;7024:9:31;;;;7020:773;;;7054:14;:18;7050:278;;7096:13;;7092:78;;-1:-1:-1;;;;;7119:8:31;:17;;7137:12;:10;:12::i;:::-;7151:9;7119:42;;;;;;;;;;;;;-1:-1:-1;;;;;7119:42:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7119:42:31;7111:59;;;;;-1:-1:-1;;;7111:59:31;;;;;;;;;;;;;;;-1:-1:-1;;;7111:59:31;;;;;;;;;;;;;;;7279:34;7300:12;:10;:12::i;:::-;7279:20;:34::i;:::-;7400:21;7424:36;7447:12;:10;:12::i;:::-;7424:22;:36::i;:::-;7400:60;-1:-1:-1;7478:17:31;;7474:309;;-1:-1:-1;;;;;7515:10:31;:19;;7535:12;:10;:12::i;:::-;7549:13;7515:48;;;;;;;;;;;;;-1:-1:-1;;;;;7515:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7672:36:31;;-1:-1:-1;7695:12:31;:10;:12::i;:::-;7672:22;:36::i;:::-;7740:12;:10;:12::i;:::-;7732:36;;;;;;;;-1:-1:-1;;;;;7732:36:31;;;;;;;;;;;;;;7474:309;7020:773;;7817:12;:10;:12::i;:::-;7808:41;;;;;;;;;;;;;;-1:-1:-1;;;;;7808:41:31;;;;;;;;;;;;;;;;6482:1374;;:::o;11002:594::-;11060:7;11083:11;;11098:1;11083:16;11079:30;;;-1:-1:-1;11108:1:31;11101:8;;11079:30;11119:26;11165:9;11160:327;11184:7;:14;11180:18;;11160:327;;;11219:37;11275:11;:37;11287:7;11295:1;11287:10;;;;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;11287:24:31;11275:37;;;;;;;;;;;;11313:7;:10;;11321:1;;11313:10;;;;;;;;;;;;;;;;:16;;;11275:55;;;;;;;;;;;;;;;;;11219:111;;;;;;;;11275:55;;;;;;;11219:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11366:110:31;;11406:56;;11219:111;11406:30;:56::i;:::-;11366:18;;:22;:110::i;:::-;11345:131;-1:-1:-1;;11200:3:31;;11160:327;;;-1:-1:-1;11541:11:31;;11518:35;;:18;;:22;:35::i;657:118:20:-;731:12;;:37;;;-1:-1:-1;;;731:37:20;;762:4;731:37;;;;;;-1:-1:-1;;;;;;;731:12:20;;-1:-1:-1;;731:37:20;;;;;;;;;;;;;;:12;:37;;;;;;;;;;2186:26:31;;;-1:-1:-1;;;;;2186:26:31;;:::o;1787:28::-;;;;:::o;2317:21::-;;;-1:-1:-1;;;2317:21:31;;;;;:::o;28042:159::-;28118:7;28144:50;28169:12;:10;:12::i;:::-;28183:10;28144:24;:50::i;1601:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1601:29:31;;;;-1:-1:-1;1601:29:31;:::o;1992:46::-;;;:::o;877:38::-;;;:::o;27332:115::-;27383:7;27409:31;27427:12;:10;:12::i;:::-;27409:17;:31::i;:::-;27402:38;;27332:115;:::o;27742:164::-;27816:7;27825;27851:48;27874:12;:10;:12::i;:::-;27888:10;27851:22;:48::i;500:132:23:-;580:9;;:20;;;-1:-1:-1;;;580:20:23;;;;546:5;;;;-1:-1:-1;;;;;580:9:23;;;;:18;;:20;;;;;;;;;;;;;;;:9;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;580:20:23;;-1:-1:-1;;500:132:23;:::o;2345:41:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2345:41:31;:::o;1994:240:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2082:22:1;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:1;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:1::1;-1:-1:-1::0;;;;;2210:17:1;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2145:34:31:-;;;;:::o;781:100:20:-;861:12;;-1:-1:-1;;;;;861:12:20;;781:100::o;1572:23:31:-;;;;;;;;;;;;27912:125;27968:7;27994:36;28017:12;598:104:13;685:10;598:104;:::o;13738:459:31:-;13844:7;13884:13;;13871:10;:26;13867:324;;;13942:13;;13917:21;:10;13932:5;13917:14;:21::i;:::-;:38;13913:118;;-1:-1:-1;13964:1:31;13957:8;;13913:118;14017:13;;13991:40;;:21;:10;14006:5;13991:14;:21::i;:40::-;13984:47;;;;13867:324;14091:13;;14066:21;:10;14081:5;14066:14;:21::i;:::-;:38;14062:118;;-1:-1:-1;14113:1:31;14106:8;;14062:118;14140:40;14158:21;:10;14173:5;14158:14;:21::i;:::-;14140:13;;;:17;:40::i;11679:90::-;11719:8;:15;;-1:-1:-1;;;;11719:15:31;-1:-1:-1;;;11719:15:31;;;11750:12;;;;-1:-1:-1;;11750:12:31;11679:90::o;15214:884::-;-1:-1:-1;;;;;15394:19:31;;15332:7;15394:19;;;:11;:19;;;;;:31;;15332:7;;15394:19;15414:10;;15394:31;;;;;;;;;;;;;;15355:70;;;;;;;;15394:31;;;;;;;15355:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15458:9:31;15470:8;15458:20;15481:12;15458:35;;15533:15;:30;-1:-1:-1;15533:63:31;;15581:15;15533:63;;;15566:12;15533:63;15504:92;;15607:19;15629:44;15652:9;:20;;;15629:22;:44::i;:::-;15607:66;-1:-1:-1;15807:22:31;15832:154;15864:25;:8;15607:66;15864:12;:25::i;:::-;15914:20;;;;15903:32;;:6;;:10;:32::i;:::-;15949:23;;15832:18;:154::i;:::-;15807:179;;16014:45;16033:9;:25;;;16014:14;:18;;:45;;;;:::i;:::-;15997:62;15214:884;-1:-1:-1;;;;;;;;15214:884:31:o;2682:175:4:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:4:o;3530:215::-;3588:7;3611:6;3607:20;;-1:-1:-1;3626:1:4;3619:8;;3607:20;3649:5;;;3653:1;3649;:5;:1;3672:5;;;;;:10;3664:56;;;;-1:-1:-1;;;3664:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:150;4267:7;4298:1;4294;:5;4286:44;;;;;-1:-1:-1;;;4286:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;;4209:150;-1:-1:-1;;;4209:150:4:o;227:125:18:-;290:7;316:29;215:5;316:11;:3;324:2;316:7;:11::i;3128:155:4:-;3186:7;3218:1;3213;:6;;3205:49;;;;;-1:-1:-1;;;3205:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3271:5:4;;;3128:155::o;28492:452:31:-;28600:7;28609;28632:23;28685:12;28670;:27;:64;;28733:1;28670:64;;;28700:30;:12;28717;28700:16;:30::i;:::-;28632:102;-1:-1:-1;28748:20:31;28744:69;;28792:1;28795:6;28784:18;;;;;;;28744:69;28843:29;:6;28856:15;28843:12;:29::i;:::-;28886:41;28897:29;:6;28910:15;28897:12;:29::i;:::-;28886:6;;:10;:41::i;:::-;28822:115;;;;;28492:452;;;;;;:::o;26253:501::-;26341:7;26350;26506:19;26535:22;26567:21;26591:25;26609:6;26591:17;:25::i;:::-;26567:49;;26658:23;26674:6;26658:15;:23::i;:::-;26626:55;;-1:-1:-1;26626:55:31;-1:-1:-1;26700:30:31;:13;26626:55;26700:17;:30::i;:::-;26692:55;-1:-1:-1;26732:14:31;;-1:-1:-1;;;26253:501:31;;;:::o;496:155:20:-;568:12;;:34;;;-1:-1:-1;;;568:34:20;;-1:-1:-1;;;;;568:34:20;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;;568:34:20;;;;;;;;;;;;;;-1:-1:-1;568:12:20;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:27:20;;;;;;;;-1:-1:-1;;;;;617:27:20;;;;;;;;;568:34;617:27;;;496:155;;:::o;821:433:19:-;-1:-1:-1;;;;;993:17:19;;985:26;;;;;;1080:10;;-1:-1:-1;;;;;1080:10:19;:35;1129:10;1153;1177:20;:18;:20::i;:::-;1211:3;1228:9;1080:167;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1080:167:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1080:167:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1080:167:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:433;;;;:::o;20135:1389:31:-;20330:9;;20223:7;;;;-1:-1:-1;;;20330:9:31;;;;20325:29;;-1:-1:-1;20349:1:31;;-1:-1:-1;20349:1:31;20341:13;;20325:29;-1:-1:-1;;;;;20407:19:31;;20365:39;20407:19;;;:11;:19;;;;;;;;20365:61;;;;;;;;;;;;;;;;;;;20407:19;;20365:61;:39;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20500:10;:17;20521:1;20500:22;20496:41;;;20532:1;20535;20524:13;;;;;;;20496:41;20637:13;;20548:30;;20593:58;;20594:37;:14;20613:17;20594:18;:37::i;20593:58::-;20548:103;;20662:14;20690:17;20727:9;20722:591;20746:10;:17;20742:1;:21;20722:591;;;20874:10;20885:1;20874:13;;;;;;;;;;;;;;:34;;;20869:434;;20929:16;20948:40;20969:10;20980:1;20969:13;;;;;;;;;;;;;;:18;;;20948:20;:40::i;:::-;20929:59;-1:-1:-1;21016:93:31;21056:27;:11;20929:59;21056:17;:27::i;:::-;21016:6;;:10;:93::i;:::-;21007:102;-1:-1:-1;21140:140:31;21183:71;:22;21245:8;21183:61;:71::i;21140:140::-;21128:152;;20869:434;;20765:3;;20722:591;;;-1:-1:-1;21327:19:31;;:23;21323:158;;21388:19;;21375:33;;:6;;:12;:33::i;:::-;21366:42;;21434:36;21450:19;;21434:9;:15;;:36;;;;:::i;:::-;21422:48;;21323:158;21499:6;;-1:-1:-1;21507:9:31;-1:-1:-1;;;20135:1389:31;;;:::o;26765:561::-;26875:7;26884;27040:19;27069:22;27101:21;27125:44;27150:6;27158:10;27125:24;:44::i;:::-;27101:68;;27211:42;27234:6;27242:10;27211:22;:42::i;:::-;27179:74;;-1:-1:-1;27179:74:31;-1:-1:-1;27272:30:31;:13;27179:74;27272:17;:30::i;:::-;27264:55;27304:14;;-1:-1:-1;26765:561:31;;-1:-1:-1;;;;;26765:561:31:o;18823:542::-;-1:-1:-1;;;;;18960:19:31;;18917:40;18960:19;;;:11;:19;;;;;18993:17;;18989:35;;19017:7;;;18989:35;19051:17;;19037:31;;19033:44;;19070:7;;;19033:44;19087:22;19112:45;19138:6;19146:10;19112:25;:45::i;:::-;19087:70;;19212:15;19168:10;19179;19168:22;;;;;;;;;;;;;;;;;;:41;;:59;;;;19278:80;19334:14;19278:10;19289;19278:22;;;;;;;;;;;;;;;;;;:38;;;:42;;:80;;;;:::i;:::-;19237:10;19248;19237:22;;;;;;;;;;;;;;;;;;:38;;:121;;;;18823:542;;;;;:::o;24025:331::-;-1:-1:-1;;;;;24160:19:31;;24117:40;24160:19;;;:11;:19;;;;;24193:17;;24189:35;;24217:7;;;24189:35;24237:10;24248;24237:22;;;;;;;;;;;;;;;;:43;:22;;;;;:43;;;;24233:56;;;24282:7;;;24233:56;24345:4;24299:10;24310;24299:22;;;;;;;;;;;;;;;;;;;;;:43;;:50;;-1:-1:-1;;24299:50:31;;;;;;;;;;-1:-1:-1;;;24025:331:31:o;25057:573::-;-1:-1:-1;;;;;25239:19:31;;25174:7;25239:19;;;:11;:19;;;;;;;;25197:61;;;;;;;;;;;;;;;;;25174:7;;;;25197:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25272:10;:17;25293:1;25272:22;25268:36;;;25303:1;25296:8;;;;;25268:36;25332:10;:17;25318:10;:31;25314:45;;25358:1;25351:8;;;;;25314:45;25371:26;25417:10;25428;25417:22;;;;;;;;;;;;;;:33;;;25412:176;;25487:90;25527:10;25538;25527:22;;;;;;;;;;;;;;:36;;;25487:18;:22;;:90;;;;:::i;:::-;25466:111;;25412:176;25605:18;25057:573;-1:-1:-1;;;;25057:573:31:o;25936:311::-;-1:-1:-1;;;;;26073:19:31;;26030:40;26073:19;;;:11;:19;;;;;26106:17;;26102:35;;26130:7;;;26102:35;26164:17;;26150:31;;26146:44;;26183:7;;;26146:44;26236:4;26200:10;26211;26200:22;;;;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;25936:311;;;:::o;18303:514::-;-1:-1:-1;;;;;18413:19:31;;18370:40;18413:19;;;:11;:19;;;;;18446:17;;18442:35;;18470:7;;;18442:35;18492:9;18487:324;18511:17;;18507:21;;18487:324;;;18549:22;18574:36;18600:6;18608:1;18574:25;:36::i;:::-;18549:61;;18660:15;18625:10;18636:1;18625:13;;;;;;;;;;;;;;;;;;:32;;:50;;;;18721:79;18772:14;18721:10;18732:1;18721:13;;;;;;;:79;18689:10;18700:1;18689:13;;;;;;;;;;;;;;;;:29;:13;;;;;:29;:111;-1:-1:-1;18530:3:31;;18487:324;;;;18303:514;;;:::o;23717:302::-;-1:-1:-1;;;;;23825:19:31;;23782:40;23825:19;;;:11;:19;;;;;23858:17;;23854:35;;23882:7;;;23854:35;23904:9;23899:114;23923:17;;23919:21;;23899:114;;;23998:4;23961:10;23972:1;23961:13;;;;;;;;;;;;;;;;;;;;;:34;;:41;;-1:-1:-1;;23961:41:31;;;;;;;;;;-1:-1:-1;23942:3:31;23899:114;;24422:564;-1:-1:-1;;;;;24582:19:31;;24517:7;24582:19;;;:11;:19;;;;;;;;24540:61;;;;;;;;;;;;;;;;;24517:7;;;;24540:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24615:10;:17;24636:1;24615:22;24611:36;;;24646:1;24639:8;;;;;24611:36;24658:26;24703:9;24698:246;24722:10;:17;24718:1;:21;24698:246;;;24765:10;24776:1;24765:13;;;;;;;;;;;;;;:24;;;24760:174;;24830:89;24874:10;24885:1;24874:13;;;;;;;;;;;;;;:27;;;24830:18;:22;;:89;;;;:::i;:::-;24809:110;;24760:174;24741:3;;24698:246;;25636:294;-1:-1:-1;;;;;25746:19:31;;25703:40;25746:19;;;:11;:19;;;;;25779:17;;25775:35;;25803:7;;;25775:35;25825:9;25820:104;25844:17;;25840:21;;25820:104;;;25909:4;25882:10;25893:1;25882:13;;;;;;;;;;;;;;;;:24;:13;;;;;:24;:31;;;;;;;-1:-1:-1;;25882:31:31;;;;;;;;;:24;25863:3;25820:104;;22233:1478;22455:9;;22348:7;;;;-1:-1:-1;;;22455:9:31;;;;22450:29;;-1:-1:-1;22474:1:31;;-1:-1:-1;22474:1:31;22466:13;;22450:29;-1:-1:-1;;;;;22532:19:31;;22490:39;22532:19;;;:11;:19;;;;;;;;22490:61;;;;;;;;;;;;;;;;;;;22532:19;;22490:61;:39;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22625:10;:17;22646:1;22625:22;22621:41;;;22657:1;22660;22649:13;;;;;;;22621:41;22754:10;:17;22740:10;:31;22736:49;;22781:1;22783;22773:12;;;;;;;22736:49;22920:10;22931;22920:22;;;;;;;;;;;;;;:43;;;22916:62;;;22973:1;22976;22965:13;;;;;;;22916:62;23078:13;;22989:30;;23034:58;;23035:37;:14;23054:17;23035:18;:37::i;23034:58::-;22989:103;;23103:14;23131:17;23163:16;23182:49;23203:10;23214;23203:22;;;;;;;23182:49;23163:68;-1:-1:-1;23251:85:31;23287:27;:11;23163:68;23287:17;:27::i;23251:85::-;23242:94;-1:-1:-1;23359:128:31;23398:67;:22;23456:8;23398:57;:67::i;:::-;23359:9;;:13;:128::i;:::-;23514:19;;23347:140;;-1:-1:-1;23514:23:31;23510:158;;23575:19;;23562:33;;:6;;:12;:33::i;:::-;23553:42;;23621:36;23637:19;;23621:9;:15;;:36;;;;:::i;:::-;23609:48;;23510:158;-1:-1:-1;23686:6:31;;;;-1:-1:-1;22233:1478:31;-1:-1:-1;;;;;22233:1478:31:o;19371:758::-;19470:7;19578:17;19573:57;;-1:-1:-1;19618:1:31;19611:8;;19573:57;19640:16;19659:23;:9;19673:8;19659:13;:23::i;:::-;19640:42;-1:-1:-1;19692:18:31;19713:24;19640:42;19726:10;19713:12;:24::i;:::-;19692:45;;19765:8;19752:10;:21;19748:375;;;19796:1;19789:8;;;;;;19748:375;19831:8;19818:10;:21;19814:309;;;19862:3;19855:10;;;;;;19814:309;19899:8;19886:10;:21;19882:241;;;19930:3;19923:10;;;;;;19882:241;19967:9;19954:10;:22;19950:173;;;19999:3;19992:10;;;;;;19950:173;20036:9;20023:10;:22;20019:104;;;20068:3;20061:10;;;;;;20019:104;20109:3;20102:10;;;;;;16104:1272;16256:7;16304:8;16256:7;16339:42;16340:16;16375:5;16339:35;:42::i;:::-;16323:58;-1:-1:-1;16392:14:31;16409:102;16506:4;16409:79;16474:13;16409:79;:12;16439:15;16409:29;:46::i;:::-;:64;;:79::i;:102::-;16392:119;-1:-1:-1;16530:13:31;16546:73;16614:4;16546:50;:15;16594:1;16579:16;;16546:32;:50::i;:73::-;16530:89;-1:-1:-1;16630:13:31;16646:74;16718:1;16646:54;16698:1;16647:15;;;;16681:18;;16646:34;:54::i;:74::-;16630:90;;16731:13;16747:101;16846:1;16747:81;16814:13;16747:49;16794:1;16777:15;:18;16747:12;:29;;:49;;;;:::i;:101::-;16731:117;-1:-1:-1;16859:13:31;16875:75;16948:1;16875:55;16928:1;16876:18;;;;16913:16;;16875:37;:55::i;:75::-;16859:91;-1:-1:-1;16962:22:31;16987:39;16859:91;16987:28;17009:5;16987:28;:5;16997:6;16987:9;:17::i;:::-;:21;;:28::i;:39::-;16962:64;-1:-1:-1;17054:36:31;17084:5;17054:25;16962:64;17073:5;17054:18;:25::i;:36::-;17037:53;-1:-1:-1;17118:79:31;17184:12;17118:48;17037:53;17150:15;17118:31;:48::i;:79::-;17101:96;-1:-1:-1;17225:111:31;17329:6;17225:86;17309:1;17294:16;;17225:86;17101:96;17257:18;17225:31;:51::i;:111::-;17208:128;16104:1272;-1:-1:-1;;;;;;;;;;;;16104:1272:31:o;21530:689::-;21622:7;21658:16;21675:1;21658:19;;;;;;;;;;;;;;;;;;:24;;;21649:5;:33;21645:568;;21705:16;21722:1;21705:19;;;;;;;;;;;;;;;;;;:30;;;21698:37;;;;21645:568;21765:16;21782:1;21765:19;;;;;;;;;;;;;;;;;;:24;;;21756:5;:33;21752:461;;21812:16;21829:1;21812:19;;;;;;;21752:461;21872:16;21889:1;21872:19;;;;;;;;;;;;;;;;;;:24;;;21863:5;:33;21859:354;;21919:16;21936:1;21919:19;;;;;;;21859:354;21979:16;21996:1;21979:19;;;;;;;;;;;;;;;;;;:24;;;21970:5;:33;21966:247;;22026:16;22043:1;22026:19;;;;;;;21966:247;22086:16;22103:1;22086:19;;;;;;;;;;;;;;;;;;:24;;;22077:5;:33;22073:140;;22133:16;22150:1;22133:19;;;;;;;22073:140;-1:-1:-1;22201:1:31;22194:8;;540:184:18;603:7;626:8;622:22;;-1:-1:-1;643:1:18;636:8;;622:22;658:7;654:23;;-1:-1:-1;674:3:18;667:10;;654:23;694;702:14;708:3;713:2;702:5;:14::i"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "3701600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "_getIndexedStakingReward(address,uint256)": "infinite",
        "_getStakingReward(address)": "infinite",
        "btcToken()": "infinite",
        "claimReward()": "infinite",
        "collaborativeReward()": "1064",
        "deletePool()": "infinite",
        "endPool()": "infinite",
        "getAveragePricePrediction()": "infinite",
        "getBTCBalance()": "infinite",
        "getDecimals()": "infinite",
        "getEstimatedBTCForUSD(uint256)": "infinite",
        "getIndexedPrizeReward(uint256)": "infinite",
        "getIndexedReward(uint256)": "infinite",
        "getIndexedStakedBalance(uint256)": "infinite",
        "getIndexedStakingReward(uint256)": "infinite",
        "getLatestPrice()": "infinite",
        "getPathForUSDToBTC()": "infinite",
        "getPrizeReward()": "infinite",
        "getStakers()": "infinite",
        "getStakingReward()": "infinite",
        "getTotalReward()": "infinite",
        "getTotalStakedBalance()": "infinite",
        "getUSDBalance()": "infinite",
        "getUSDToken()": "1125",
        "getswapRouter()": "1107",
        "hasUnStaked(address,uint256)": "infinite",
        "indexedClaimReward(uint256)": "infinite",
        "isDeleted()": "1139",
        "isEnhancedEnabled()": "infinite",
        "isLocked()": "1117",
        "isMatured()": "1116",
        "lockPool()": "infinite",
        "lockTime()": "infinite",
        "maturingPrice()": "1088",
        "maturityTime()": "infinite",
        "minimumStakeAmount()": "infinite",
        "oracleDecimal()": "266",
        "owner()": "1150",
        "poolCreator()": "1105",
        "potentialCollabReward()": "infinite",
        "predictions(address,uint256)": "8072",
        "prizeAmount()": "infinite",
        "prizeRewardRates(uint256)": "2898",
        "purchaseBTC(uint256,uint256)": "infinite",
        "renounceOwnership()": "24389",
        "rewardManager()": "infinite",
        "setSortedStakers(address[25],uint256[25])": "infinite",
        "sizeAllocation()": "infinite",
        "sizeLimitRangeRate()": "310",
        "sortedStakers(uint256)": "2899",
        "stake(uint256,uint256)": "infinite",
        "stakeApr()": "infinite",
        "stakeTaxRate()": "infinite",
        "stakers(uint256)": "2942",
        "startDate()": "infinite",
        "totalStaked()": "1109",
        "totemToken()": "infinite",
        "transferOwnership(address)": "infinite",
        "updateMaturingPrice()": "infinite",
        "usdPrizeAmount()": "infinite",
        "withdrawStuckTokens(address,uint256,address)": "infinite"
      },
      "internal": {
        "_calcStakingReturn(uint256,uint256,uint256)": "infinite",
        "_getDifference(uint256,uint256)": "infinite",
        "_getEnhancedRewardRate(uint256)": "infinite",
        "_getIndexedPrizeReward(address,uint256)": "infinite",
        "_getIndexedReward(address,uint256)": "infinite",
        "_getIndexedStakedBalance(address,uint256)": "infinite",
        "_getPercentageReward(uint256)": "10339",
        "_getPrizeReward(address)": "infinite",
        "_getStakingRewardPerStake(address,uint256)": "infinite",
        "_getTotalReward(address)": "infinite",
        "_getTotalStakedBalance(address)": "infinite",
        "_lockPool()": "21622",
        "_withdrawIndexedPrizeReward(address,uint256)": "24408",
        "_withdrawIndexedStakedBalance(address,uint256)": "23565",
        "_withdrawIndexedStakingReward(address,uint256)": "infinite",
        "_withdrawPrizeReward(address)": "infinite",
        "_withdrawStakedBalance(address)": "infinite",
        "_withdrawStakingReward(address)": "infinite",
        "getPredictionRange(uint256)": "infinite",
        "getStakingTax(uint256,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "_getIndexedStakingReward(address,uint256)": "765e14d8",
      "_getStakingReward(address)": "5b9f4f90",
      "btcToken()": "074bc101",
      "claimReward()": "b88a802f",
      "collaborativeReward()": "f3d9dc0d",
      "deletePool()": "8bfbbcbe",
      "endPool()": "2d42cf7d",
      "getAveragePricePrediction()": "bf852196",
      "getBTCBalance()": "31769ef7",
      "getDecimals()": "f0141d84",
      "getEstimatedBTCForUSD(uint256)": "09082c29",
      "getIndexedPrizeReward(uint256)": "eee39403",
      "getIndexedReward(uint256)": "9d9a62df",
      "getIndexedStakedBalance(uint256)": "d83db49f",
      "getIndexedStakingReward(uint256)": "1898a1a7",
      "getLatestPrice()": "8e15f473",
      "getPathForUSDToBTC()": "a508bc71",
      "getPrizeReward()": "9234a39a",
      "getStakers()": "43352d61",
      "getStakingReward()": "eda2d424",
      "getTotalReward()": "7d1fcbfa",
      "getTotalStakedBalance()": "fd8fd47f",
      "getUSDBalance()": "c1201054",
      "getUSDToken()": "f5e96fc9",
      "getswapRouter()": "2e577d07",
      "hasUnStaked(address,uint256)": "45e91319",
      "indexedClaimReward(uint256)": "b1b1e1c0",
      "isDeleted()": "d7efb6b7",
      "isEnhancedEnabled()": "4bc4eeb2",
      "isLocked()": "a4e2d634",
      "isMatured()": "7f2b6a0d",
      "lockPool()": "4026478e",
      "lockTime()": "0d668087",
      "maturingPrice()": "d025188b",
      "maturityTime()": "4e8bfdaa",
      "minimumStakeAmount()": "6b036f45",
      "oracleDecimal()": "a150194b",
      "owner()": "8da5cb5b",
      "poolCreator()": "c6c1decd",
      "potentialCollabReward()": "e425df8c",
      "predictions(address,uint256)": "850fa7cb",
      "prizeAmount()": "785fa627",
      "prizeRewardRates(uint256)": "f1b17a8b",
      "purchaseBTC(uint256,uint256)": "857b21ee",
      "renounceOwnership()": "715018a6",
      "rewardManager()": "0f4ef8a6",
      "setSortedStakers(address[25],uint256[25])": "444a4902",
      "sizeAllocation()": "51eacbf0",
      "sizeLimitRangeRate()": "95c2ba47",
      "sortedStakers(uint256)": "de09ee20",
      "stake(uint256,uint256)": "7b0472f0",
      "stakeApr()": "aa7bcb57",
      "stakeTaxRate()": "6847d0c5",
      "stakers(uint256)": "fd5e6dd1",
      "startDate()": "0b97bc86",
      "totalStaked()": "817b1cd2",
      "totemToken()": "e8153c93",
      "transferOwnership(address)": "f2fde38b",
      "updateMaturingPrice()": "5e2e2ffc",
      "usdPrizeAmount()": "73f31703",
      "withdrawStuckTokens(address,uint256,address)": "5d2631e2"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"_totemToken\",\"type\":\"address\"},{\"internalType\":\"contract RewardManager\",\"name\":\"_rewardManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_btcToken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"_variables\",\"type\":\"uint256[9]\"},{\"internalType\":\"bool\",\"name\":\"_isEnhancedEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApproveTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributedBTC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolMatured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolSorted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"btcAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"_getIndexedStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"_getStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deletePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAveragePricePrediction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBTCBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getEstimatedBTCForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedPrizeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPathForUSDToBTC\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"hasUnStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"indexedClaimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnhancedEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMatured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialCollabReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithdrawalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizeRewardWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"didUnstake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"purchaseBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract RewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[25]\",\"name\":\"addrArray\",\"type\":\"address[25]\"},{\"internalType\":\"uint256[25]\",\"name\":\"indexArray\",\"type\":\"uint256[25]\"}],\"name\":\"setSortedStakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeLimitRangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedStakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePrediction\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeApr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totemToken\",\"outputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMaturingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stuckToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getEstimatedBTCForUSD(uint256)\":{\"params\":{\"_amount\":\"Amount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDecimals()\":{\"notice\":\"Returns decimals for oracle contract\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price from oracle contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0x8344571960f250b1c03ba9f259c452b26b04370ac4723ef262969d822174bee6\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/BTCDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../PancakeSwap/IPancakeRouter.sol\\\";\\n\\n// TODO: this contract should handle other coins like ETH too\\ncontract BTCDistributor {\\n    IPancakeRouter02 internal swapRouter;\\n    address internal USDC_CONTRACT_ADDRESS;\\n    address internal WBTC_CONTRACT_ADDRESS;\\n\\n    event DistributedBTC(address indexed to, uint256 amount);\\n\\n    constructor(\\n        address swapRouterAddress,\\n        address USDCContractAddress,\\n        address wBTCContractAddress\\n    ) {\\n        swapRouter = IPancakeRouter02(swapRouterAddress);\\n        USDC_CONTRACT_ADDRESS = USDCContractAddress;\\n        WBTC_CONTRACT_ADDRESS = wBTCContractAddress;\\n    }\\n\\n    /**\\n     * @param _to Reciever address\\n     * @param _usdAmount USD Amount\\n     * @param _btcAmount BTC Amount\\n     */\\n    function transferTokensThroughSwap(\\n        address _to,\\n        uint256 _usdAmount,\\n        uint256 _btcAmount,\\n        uint256 _deadline\\n    ) internal {\\n        require(_to != address(0));\\n        // Get max USD price we can spend for this amount.\\n        swapRouter.swapExactTokensForTokens(\\n            _usdAmount,\\n            _btcAmount,\\n            getPathForUSDToBTC(),\\n            _to,\\n            _deadline\\n        );\\n    }\\n\\n    /**\\n     * @param _amount Amount\\n     */\\n    function getEstimatedBTCForUSD(uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256[] memory btcAmount =\\n            swapRouter.getAmountsOut(_amount, getPathForUSDToBTC());\\n        // since in the path the btc is the second one, so we should retuen the second one also here    \\n        return btcAmount[1];\\n    }\\n\\n    function getPathForUSDToBTC() public view returns (address[] memory) {\\n        address[] memory path = new address[](2);\\n        path[0] = USDC_CONTRACT_ADDRESS;\\n        path[1] = WBTC_CONTRACT_ADDRESS;\\n\\n        return path;\\n    }\\n\\n    // the function should be rename to getSwapRouter\\n    function getswapRouter() public view returns (address) {\\n        return address(swapRouter);\\n    }\\n}\\n\",\"keccak256\":\"0xf6d599415d5fdd448b560a389feb2cf807508be0306cf11727d52394cf793e20\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/USDRetriever.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract USDRetriever {\\n    IERC20 internal USDCContract;\\n\\n    event ReceivedTokens(address indexed from, uint256 amount);\\n    event TransferTokens(address indexed to, uint256 amount);\\n    event ApproveTokens(address indexed to, uint256 amount);\\n\\n    function setUSDToken(address _usdContractAddress) internal {\\n        USDCContract = IERC20(_usdContractAddress);\\n    }\\n\\n    function approveTokens(address _to, uint256 _amount) internal {\\n        USDCContract.approve(_to, _amount);\\n        emit ApproveTokens(_to, _amount);\\n    }\\n\\n    function getUSDBalance() external view returns (uint256) {\\n        return USDCContract.balanceOf(address(this));\\n    }\\n\\n    function getUSDToken() external view returns (address) {\\n        return address(USDCContract);\\n    }\\n}\\n\",\"keccak256\":\"0x5f65c50276ea5c113b1e51e0d646d7e91c9aa15d12214543ddd320769de308f2\",\"license\":\"UNLICENSED\"},\"contracts/ILocker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface ILocker {\\n    /**\\n     * @dev Fails if transaction is not allowed.\\n     * Return values can be ignored for AntiBot launches\\n     */\\n    function lockOrGetPenalty(address source, address dest)\\n        external\\n        returns (bool, uint256);\\n}\\n\\ninterface ILockerUser {\\n    function locker() external view returns (ILocker);\\n\\n    /**\\n     * @dev Emitted when setLocker is called.\\n     */\\n    event SetLocker(address indexed locker);\\n}\\n\\n\",\"keccak256\":\"0x51a18df7a6b1708e8d614f547eb09dd79e64093413bb0081dbb8f0f411ce0e96\",\"license\":\"UNLICENSED\"},\"contracts/PancakeSwap/IPancakeRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n}\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2b582633995bad7e354c4a36176081b0a41b234e75ed9458ac9ac53afd82e84e\",\"license\":\"UNLICENSED\"},\"contracts/Price/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceConsumer {\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * @param _oracle The chainlink node oracle address to send requests\\n     */\\n    constructor(address _oracle) {\\n        require(_oracle != address(0));\\n        priceFeed = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * Returns decimals for oracle contract\\n     */\\n    function getDecimals() external view returns (uint8) {\\n        uint8 decimals = priceFeed.decimals();\\n        return decimals;\\n    }\\n\\n    /**\\n     * Returns the latest price from oracle contract\\n     */\\n    function getLatestPrice() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return price >= 0 ? uint256(price) : 0;\\n    }\\n\\n    // TODO: a function must be added to get the price on a specific timestamp\\n    // at the moment chainlink provide a function to get the price on a round ID\\n    // but all round IDs don't return a valid price and mapping the round IDs to\\n    // timestamps is not very well defined\\n}\\n\",\"keccak256\":\"0x8c901b68ad33e7cffb2fcdfc58db252abad119fc7e404f9f7e6a485456df2380\",\"license\":\"UNLICENSED\"},\"contracts/Role/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Operator is Context {\\n    using Roles for Roles.Role;\\n\\n    event OperatorAdded(address indexed account);\\n    event OperatorRemoved(address indexed account);\\n\\n    Roles.Role private _operators;\\n\\n    constructor() {\\n        if (!isOperator(_msgSender())) {\\n            _addOperator(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            isOperator(_msgSender()),\\n            \\\"OperatorRole: caller does not have the Operator role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator(address account) public view returns (bool) {\\n        return _operators.has(account);\\n    }\\n\\n    function addOperator(address account) public onlyOperator {\\n        _addOperator(account);\\n    }\\n\\n    function renounceOperator() public {\\n        _removeOperator(_msgSender());\\n    }\\n\\n    function _addOperator(address account) internal {\\n        _operators.add(account);\\n        emit OperatorAdded(account);\\n    }\\n\\n    function _removeOperator(address account) internal {\\n        _operators.remove(account);\\n        emit OperatorRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe3ed3896ec9e9cc477f1318e9e5f109704eac51255bca6caa36e20fed6965de9\",\"license\":\"UNLICENSED\"},\"contracts/Role/Rewarder.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Rewarder is Context {\\n    using Roles for Roles.Role;\\n\\n    event RewarderAdded(address indexed account);\\n    event RewarderRemoved(address indexed account);\\n\\n    Roles.Role private _rewarders;\\n\\n    constructor() {\\n        if (!isRewarder(_msgSender())) {\\n            _addRewarder(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyRewarder() {\\n        require(\\n            isRewarder(_msgSender()),\\n            \\\"RewarderRole: caller does not have the Rewarder role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isRewarder(address account) public view returns (bool) {\\n        return _rewarders.has(account);\\n    }\\n\\n    function addRewarder(address account) public onlyRewarder {\\n        _addRewarder(account);\\n    }\\n\\n    function renounceRewarder() public {\\n        _removeRewarder(_msgSender());\\n    }\\n\\n    function _addRewarder(address account) internal {\\n        _rewarders.add(account);\\n        emit RewarderAdded(account);\\n    }\\n\\n    function _removeRewarder(address account) internal {\\n        _rewarders.remove(account);\\n        emit RewarderRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x854556cd27f92d4f52e87247d947760942df133464e01f580d4716cc64fe4e5c\",\"license\":\"UNLICENSED\"},\"contracts/Role/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping(address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x1156e37e7835772537d5dfb53649b1e39b1eff5791f6bd759664168fcc7c8462\",\"license\":\"UNLICENSED\"},\"contracts/Staking/RewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"../TotemToken.sol\\\";\\nimport \\\"../Role/Operator.sol\\\";\\nimport \\\"../Role/Rewarder.sol\\\";\\n\\ncontract RewardManager is Context, Ownable, Operator, Rewarder {\\n    TotemToken totemToken;\\n\\n    event SetOperator(address operator);\\n    event SetRewarder(address rewarder);\\n\\n    constructor(TotemToken _totemToken) {\\n        totemToken = _totemToken;\\n    }\\n\\n    function setOperator(address _newOperator) public onlyOwner {\\n        require(\\n            _newOperator != address(0),\\n            \\\"0200 New Operator address cannot be zero.\\\"\\n        );\\n\\n        addOperator(_newOperator);\\n        emit SetOperator(_newOperator);\\n    }\\n\\n    function addPool(address _poolAddress) public onlyOperator {\\n        require(\\n            _poolAddress != address(0),\\n            \\\"0210 Pool address cannot be zero.\\\"\\n        );\\n\\n        addRewarder(_poolAddress);\\n        emit SetRewarder(_poolAddress);\\n    }\\n\\n    function rewardUser(address _user, uint256 _amount) public onlyRewarder {\\n        require(_user != address(0), \\\"0230 User address cannot be zero.\\\");\\n\\n        require(totemToken.transfer(_user, _amount));\\n    }\\n}\",\"keccak256\":\"0x8022b860bf7f1c529cf76ea3c5cd6a9ea5a0ca663c40550effa98b6aa9d74d60\",\"license\":\"UNLICENSED\"},\"contracts/Staking/StakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../Price/PriceConsumer.sol\\\";\\nimport \\\"../Distribution/BTCDistributor.sol\\\";\\nimport \\\"../Distribution/USDRetriever.sol\\\";\\nimport \\\"./RewardManager.sol\\\";\\n\\ncontract StakingPool is\\n    Context,\\n    Ownable,\\n    PriceConsumer,\\n    USDRetriever,\\n    BTCDistributor\\n{\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    struct StakeWithPrediction {\\n        uint256 stakedBalance;\\n        uint256 stakedTime;\\n        uint256 amountWithdrawn;\\n        uint256 lastWithdrawalTime;\\n        uint256 pricePrediction;\\n        uint256 difference;\\n        uint256 rank;\\n        bool prizeRewardWithdrawn;\\n        bool didUnstake;\\n    }\\n\\n    struct Staker {\\n        address stakerAddress;\\n        uint256 index;\\n    }\\n\\n    struct PrizeRewardRate {\\n        uint256 rank;\\n        uint256 percentage;\\n    }\\n\\n    TotemToken public immutable totemToken;\\n    RewardManager public immutable rewardManager;\\n    IERC20 public immutable btcToken;\\n\\n    uint256 public immutable startDate;\\n    uint256 public immutable lockTime;\\n    uint256 public immutable maturityTime;\\n\\n    uint256 public immutable sizeAllocation;\\n    uint256 public immutable stakeApr;\\n\\n    uint256 public immutable prizeAmount;\\n\\n    // usdPrizeAmount is the enabler of BTC rewarder if it would be 0 then the pool is only TOTM rewarder\\n    uint256 public immutable usdPrizeAmount;\\n\\n    uint256 public immutable stakeTaxRate;\\n    uint256 public immutable minimumStakeAmount;\\n\\n    mapping(address => StakeWithPrediction[]) public predictions;\\n    Staker[] public stakers;\\n    Staker[] public sortedStakers;\\n\\n    uint256 public totalStaked;\\n\\n    // TODO: the maturing price is not the real maturity price and it depends on\\n    // the calling endPool function\\n    uint256 public maturingPrice;\\n    uint256 public constant sizeLimitRangeRate = 5;\\n    // TODO: implement a mechanism to get the decimals from the oracle\\n    uint256 public constant oracleDecimal = 8;\\n\\n    uint256 public immutable potentialCollabReward;\\n    // based on the white paper the collaborative reward can be 20% (2000), 25% (2500) or 35% (3500)\\n    uint256 public collaborativeReward;\\n\\n    address public poolCreator;\\n\\n    bool public immutable isEnhancedEnabled;\\n    bool public isLocked;\\n    bool public isMatured;\\n    bool public isDeleted;\\n\\n    PrizeRewardRate[] public prizeRewardRates;\\n\\n    event Stake(address indexed user, uint256 amount, uint256 pricePrediction);\\n\\n    event Withdraw(address indexed user, uint256 amount, uint256 btcAmount);\\n\\n    event Unstake(address indexed user, uint256 amount);\\n\\n    event PoolLocked();\\n\\n    event PoolSorted();\\n\\n    event PoolMatured();\\n    event PoolDeleted();\\n\\n    constructor(\\n        TotemToken _totemToken,\\n        RewardManager _rewardManager,\\n        address _poolCreator,\\n        address _swapRouter,\\n        address _oracleContract,\\n        address _usdToken,\\n        address _btcToken,\\n        uint256[9] memory _variables,\\n        bool _isEnhancedEnabled\\n    )\\n        PriceConsumer(_oracleContract)\\n        BTCDistributor(_swapRouter, _usdToken, _btcToken)\\n    {\\n        totemToken = _totemToken;\\n        rewardManager = _rewardManager;\\n\\n        poolCreator = _poolCreator;\\n\\n        setUSDToken(_usdToken);\\n        btcToken = IERC20(_btcToken);\\n\\n        startDate = block.timestamp;\\n        maturityTime = _variables[0];\\n        lockTime = _variables[1];\\n\\n        sizeAllocation = _variables[2];\\n        stakeApr = _variables[3];\\n        prizeAmount = _variables[4];\\n        usdPrizeAmount = _variables[5];\\n        potentialCollabReward = _variables[6];\\n        stakeTaxRate = _variables[7];\\n        minimumStakeAmount = _variables[8];   \\n\\n        isEnhancedEnabled = _isEnhancedEnabled; \\n\\n        prizeRewardRates.push(PrizeRewardRate({rank: 1, percentage: 3750}));\\n        prizeRewardRates.push(PrizeRewardRate({rank: 2, percentage: 2000}));\\n        prizeRewardRates.push(PrizeRewardRate({rank: 3, percentage: 1000}));\\n        prizeRewardRates.push(PrizeRewardRate({rank: 10, percentage: 250}));\\n        prizeRewardRates.push(PrizeRewardRate({rank: 25, percentage: 100}));\\n    }\\n\\n    function stake(uint256 _amount, uint256 _pricePrediction) external {\\n        require(!isLocked, \\\"0310 Pool is locked\\\");\\n        require(_amount >= minimumStakeAmount, \\\"0311 Amount can't be less than the minimum\\\");\\n\\n        uint256 limitRange = sizeAllocation.mul(sizeLimitRangeRate).div(100);\\n        uint256 stakeTaxAmount;\\n        uint256 taxRate = totemToken.taxRate();\\n        uint256 tax =\\n            totemToken.taxExempt(_msgSender()) ? 0 : _amount.mulBP(taxRate);\\n    \\n        require(\\n            // the total amount of stakes can exceed size allocation by 5%\\n            totalStaked.add(_amount).sub(tax) <= sizeAllocation.add(limitRange),\\n            \\\"0312 Can't stake above size allocation\\\"\\n        );\\n\\n        // now the stakeTaxAmount is the staking tax and the _amount is initial amount minus the staking tax\\n        (stakeTaxAmount, _amount) = getStakingTax(_amount, taxRate);\\n\\n        totemToken.transferFrom(\\n            _msgSender(),\\n            address(this),\\n            (_amount + stakeTaxAmount)\\n        );\\n\\n        // This is to remove token tax (not staking tax) from the amount\\n        _amount = _amount.sub(tax);\\n\\n        if (stakeTaxAmount > 0)\\n            totemToken.transfer(totemToken.taxationWallet(), stakeTaxAmount);\\n\\n        totalStaked = totalStaked.add(_amount);\\n\\n        stakers.push(\\n            Staker({\\n                stakerAddress: _msgSender(),\\n                index: predictions[_msgSender()].length\\n            })\\n        );\\n\\n        predictions[_msgSender()].push(\\n            StakeWithPrediction({\\n                stakedBalance: _amount,\\n                stakedTime: block.timestamp,\\n                amountWithdrawn: 0,\\n                lastWithdrawalTime: block.timestamp,\\n                pricePrediction: _pricePrediction,\\n                // maybe it's better to use the max number available for rank and differece\\n                // because the 0 is the best number\\n                difference: type(uint256).max,\\n                rank: type(uint256).max,\\n                prizeRewardWithdrawn: false,\\n                didUnstake: false\\n            })\\n        );\\n\\n        if (totalStaked >= sizeAllocation) {\\n            // if the staking pool has not anymore capacity then it is locked\\n            _lockPool();\\n        }\\n\\n        emit Stake(_msgSender(), _amount, _pricePrediction);\\n    }\\n\\n    function claimReward() external {\\n        (uint256 reward, uint256 btcReward) = _getTotalReward(_msgSender());\\n\\n        if (reward > 0) {\\n            if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n                // all transfers should be in require, rewardUser is using require\\n                rewardManager.rewardUser(_msgSender(), reward);\\n            }\\n        }\\n        \\n        // _wthdraw don't withdraw actually, and only update the array in the map\\n        _withdrawStakingReward(_msgSender());\\n        \\n\\n        if (isMatured) {\\n\\n            if (usdPrizeAmount > 0) {\\n                if (btcReward > 0) require(btcToken.transfer(_msgSender(), btcReward), \\\"0320\\\");\\n\\n                // _wthdraw don't withdraw actually, and only update the array in the map\\n                _withdrawPrizeReward(_msgSender());\\n            }\\n\\n            // Users can't unstake until the pool matures\\n            uint256 stakedBalance = _getTotalStakedBalance(_msgSender());\\n            if (stakedBalance > 0) {\\n                totemToken.transfer(_msgSender(), stakedBalance);\\n\\n                // _wthdraw don't withdraw actually, and only update the array in the map\\n                _withdrawStakedBalance(_msgSender());\\n\\n                emit Unstake(_msgSender(), stakedBalance);\\n            }\\n        }\\n\\n        emit Withdraw(_msgSender(), reward, btcReward);\\n    }\\n\\n    function indexedClaimReward(uint256 stakeIndex) external {\\n        (uint256 reward, uint256 btcReward) = _getIndexedReward(_msgSender(), stakeIndex);\\n\\n        if (reward > 0) {\\n            // Send the token reward only when the rewardManager has the enough fund\\n            if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n                rewardManager.rewardUser(_msgSender(), reward);\\n            }\\n        }\\n        \\n        _withdrawIndexedStakingReward(_msgSender(), stakeIndex);\\n        \\n\\n        if (isMatured) {\\n            \\n            if (usdPrizeAmount > 0) {\\n                if (btcReward > 0) require(btcToken.transfer(_msgSender(), btcReward), \\\"0330\\\");\\n\\n                _withdrawIndexedPrizeReward(_msgSender(), stakeIndex);\\n            }\\n\\n\\n            uint256 stakedBalance = _getIndexedStakedBalance(_msgSender(), stakeIndex);\\n            if (stakedBalance > 0) {\\n                totemToken.transfer(_msgSender(), stakedBalance);\\n\\n                _withdrawIndexedStakedBalance(_msgSender(), stakeIndex);\\n\\n                emit Unstake(_msgSender(), stakedBalance);\\n            }\\n        }\\n\\n        emit Withdraw(_msgSender(), reward, btcReward);\\n    }\\n\\n    function purchaseBTC(uint256 usdAmount, uint256 deadline)\\n        external\\n        onlyPoolCreator\\n    {\\n        require(usdPrizeAmount > 0, \\\"0340 The pool is not BTC rewarder\\\");\\n        \\n        require(usdAmount > 0, \\\"0341 Amount can't be zero\\\");\\n\\n        require(deadline >= block.timestamp, \\\"0342 deadline is low\\\");\\n\\n        // This approves tokens to swap router\\n        address swapRouterAddress = getswapRouter();\\n        approveTokens(swapRouterAddress, usdAmount);\\n        // Get equivalent USD amount for BTC\\n        uint256 btcAmount = getEstimatedBTCForUSD(usdAmount);\\n\\n        uint256 btcAmountWithSlippage =\\n            btcAmount.sub(btcAmount.mulBP(300));\\n\\n        transferTokensThroughSwap(\\n            address(this),\\n            usdAmount,\\n            btcAmountWithSlippage,\\n            deadline\\n        );\\n    }\\n\\n    function getBTCBalance() public view returns (uint256) {\\n        return btcToken.balanceOf(address(this));\\n    }\\n\\n    function getPredictionRange(uint256 amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        uint256[4] memory steps =\\n            [uint256(27500), 30000, 17500, type(uint256).max];\\n        uint256[4] memory ranges = [uint256(1000), 700, 375, 200];\\n        uint256 totalRange = 0;\\n\\n        for (uint256 i = 0; i < steps.length; i++) {\\n            uint256 stepAmount =\\n                i == steps.length - 1 ? amount : steps[i].mul(10**18);\\n            uint256 step = amount > stepAmount ? stepAmount : amount;\\n            totalRange = totalRange.add(\\n                // the use of oracleDecimal -2 is because of ranges element (100 = 1 dollar range)\\n                step.mul(ranges[i]).mul(10**(oracleDecimal-2)).div(500).div(10**18)\\n            );\\n\\n            if (amount <= stepAmount) break;\\n\\n            amount = amount.sub(stepAmount);\\n        }\\n        return totalRange;\\n    }\\n\\n    // This function is to get the avg price prediction for calculating collaborative reward\\n    function getAveragePricePrediction() public view returns (uint256) {\\n        if (totalStaked == 0) return 0;\\n        uint256 avgPricePrediction = 0;\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            StakeWithPrediction memory prediction =\\n                predictions[stakers[i].stakerAddress][stakers[i].index];\\n\\n            avgPricePrediction = avgPricePrediction.add(\\n                prediction.pricePrediction.mul(prediction.stakedBalance)\\n            );\\n        }\\n\\n        avgPricePrediction = avgPricePrediction.div(totalStaked);\\n\\n        return avgPricePrediction;\\n    }\\n\\n    function lockPool() public onlyPoolCreator {\\n        _lockPool();\\n    }\\n\\n    function _lockPool() internal {\\n        isLocked = true;\\n\\n        emit PoolLocked();\\n    }\\n\\n    function updateMaturingPrice() external onlyPoolCreator {\\n\\n        require(\\n            block.timestamp >= startDate + lockTime + maturityTime,\\n            \\\"0350 Can't set maturing price before the maturity time\\\"\\n        );\\n\\n        maturingPrice = getLatestPrice();\\n    }\\n    function endPool() external onlyPoolCreator {\\n                require(\\n            block.timestamp >= startDate + lockTime + maturityTime,\\n            \\\"0360 Can't end pool before the maturity time\\\"\\n        );\\n        \\n        if (usdPrizeAmount > 0) {\\n            require(\\n                getBTCBalance() != 0, \\n                \\\"0361 BTC Rewards not available\\\"\\n            );\\n        }\\n\\n        if (stakers.length > 0) {\\n            require(\\n                sortedStakers.length != 0,\\n                \\\"0362 first should sort\\\"\\n            );\\n        }\\n\\n        // potentialCollabReward allows the admin to set the collaborateive reward \\n        if (potentialCollabReward > 0) {\\n            // the collaborative reward only gave to the pools that the average price predicted with \\n            // the accuracy of 25 $\\n            uint256 avgPricePrediction = getAveragePricePrediction();\\n            if (_getDifference(avgPricePrediction, 25 * (10**8)) == 0) {\\n                collaborativeReward = potentialCollabReward;\\n            }\\n        }\\n\\n        // TODO: this function should be removed\\n        // _sortStakers();\\n        uint256 max = sortedStakers.length > 25 ? 25 : sortedStakers.length;\\n        for (uint256 i = 0; i < max; i++) {\\n            predictions[sortedStakers[i].stakerAddress][sortedStakers[i].index].rank =\\n                i + 1;\\n        }\\n\\n        // there is possibility that the size allocation is not reached \\n        // and the isLocked is not set to ture\\n        isLocked = true;\\n        isMatured = true;\\n\\n        emit PoolMatured();\\n    }\\n    function deletePool() external onlyPoolCreator {\\n        isDeleted = true;\\n        emit PoolDeleted();\\n    }\\n\\n    function _getDifference(uint256 prediction, uint256 range)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        if (prediction > maturingPrice) {\\n            if (prediction.sub(range) <= maturingPrice) return 0;\\n            else return prediction.sub(range).sub(maturingPrice);\\n        } else {\\n            if (prediction.add(range) >= maturingPrice) return 0;\\n            else return maturingPrice.sub(prediction.add(range));\\n        }\\n    }\\n\\n    function setSortedStakers(address[25] calldata addrArray, uint256[25] calldata indexArray)\\n        external \\n        onlyPoolCreator \\n    {\\n\\n        for (uint256 i = 0; i < addrArray.length; i++) {\\n\\n            // the first 0 address means the other addresses are also 0 so they won't be checked\\n            if (addrArray[i] == address(0)) break;\\n\\n            sortedStakers.push(\\n            Staker({\\n                stakerAddress: addrArray[i],\\n                index: indexArray[i]\\n                })\\n            );\\n        }\\n\\n        emit PoolSorted();\\n    }\\n\\n    function getStakers() \\n        public \\n        view \\n        returns(address[] memory, uint256[] memory) \\n    {\\n        address[] memory addrs = new address[](stakers.length);\\n        uint256[] memory indexes = new uint256[](stakers.length);\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            addrs[i] = stakers[i].stakerAddress;\\n            indexes[i] = stakers[i].index;\\n        }\\n\\n        return (addrs, indexes);\\n    }\\n\\n    function _getStakingRewardPerStake(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction memory userStake = predictions[staker][stakeIndex];\\n        uint256 maturityDate = startDate + lockTime + maturityTime;\\n\\n        uint256 timeTo =\\n            block.timestamp > maturityDate ? maturityDate : block.timestamp;\\n\\n        uint256 enhancedApr = _getEnhancedRewardRate(userStake.stakedTime);\\n\\n        // the reward formula is ((1 + stakeAPR +enhancedReward)^((MaturingDate - StakingDate)/365) - 1) * StakingBalance\\n\\n        uint256 rewardPerStake = _calcStakingReturn(\\n            stakeApr.add(enhancedApr),\\n            timeTo.sub(userStake.stakedTime),\\n            userStake.stakedBalance\\n            );\\n\\n        rewardPerStake = rewardPerStake.sub(userStake.amountWithdrawn);\\n\\n        return rewardPerStake;\\n    }\\n\\n    function _calcStakingReturn(uint256 totalRewardRate, uint256 timeDuration, uint256 totalStakedBalance) \\n        internal \\n        pure\\n        returns (uint256) \\n    {\\n        uint256 yearInSeconds = 365 days;\\n\\n        uint256 first = (yearInSeconds**2)\\n            .mul(10**8);\\n\\n        uint256 second = timeDuration\\n            .mul(totalRewardRate) \\n            .mul(yearInSeconds)\\n            .mul(5000);\\n        \\n        uint256 third = totalRewardRate\\n            .mul(yearInSeconds**2)\\n            .mul(5000);\\n\\n        uint256 forth = (timeDuration**2)\\n            .mul(totalRewardRate**2)\\n            .div(6);\\n\\n        uint256 fifth = timeDuration\\n            .mul(totalRewardRate**2)\\n            .mul(yearInSeconds)\\n            .div(2);\\n\\n        uint256 sixth = (totalRewardRate**2)\\n            .mul(yearInSeconds**2)\\n            .div(3);\\n \\n        uint256 rewardPerStake = first.add(second).add(forth).add(sixth);\\n\\n        rewardPerStake = rewardPerStake.sub(third).sub(fifth);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalRewardRate)\\n            .mul(timeDuration);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalStakedBalance)\\n            .div(yearInSeconds**3)\\n            .div(10**12);\\n\\n        return rewardPerStake; \\n    }\\n\\n    function _getStakingReward(address staker) public view returns (uint256) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 reward = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            reward = reward.add(rewardPerStake);\\n        }\\n\\n        return reward;\\n    }\\n\\n    function _getIndexedStakingReward(address staker, uint256 stakeIndex) public view returns (uint256) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n        if (stakeIndex >= userStakes.length) return 0;\\n\\n        uint256 reward = 0;\\n        \\n        uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n        reward = reward.add(rewardPerStake);\\n\\n        return reward;\\n    }\\n\\n    function _withdrawStakingReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            userStakes[i].lastWithdrawalTime = block.timestamp;\\n            userStakes[i].amountWithdrawn = userStakes[i].amountWithdrawn.add(\\n                rewardPerStake\\n            );\\n        }\\n    }\\n\\n    function _withdrawIndexedStakingReward(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (stakeIndex >= userStakes.length) return;\\n\\n        uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n\\n        userStakes[stakeIndex].lastWithdrawalTime = block.timestamp;\\n        userStakes[stakeIndex].amountWithdrawn = userStakes[stakeIndex].amountWithdrawn.add(\\n            rewardPerStake\\n        );\\n    }\\n\\n    function _getEnhancedRewardRate(uint256 stakedTime)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n\\n        // if the enhanced reward is not enabled so consider enhanced raward 0\\n        if (!isEnhancedEnabled) {\\n            return 0;\\n        }\\n\\n        uint256 lockDate = startDate.add(lockTime);\\n        uint256 difference = lockDate.sub(stakedTime);\\n\\n        if (difference < 48 hours) {\\n            return 0;\\n        } else if (difference < 72 hours) {\\n            return 100;\\n        } else if (difference < 96 hours) {\\n            return 200;\\n        } else if (difference < 120 hours) {\\n            return 300;\\n        } else if (difference < 144 hours) {\\n            return 400;\\n        } else {\\n            return 500;\\n        }\\n    }\\n\\n    function _getPrizeReward(address staker)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // wihtout the maturing price calculating prize is impossible\\n        if (!isMatured) return (0, 0);\\n\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        // users that don't stake don't get any prize also\\n        if (userStakes.length == 0) return (0, 0);\\n\\n        uint256 maturingBTCPrizeAmount =\\n            (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 btcReward = 0;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            // only calculate the prize amount for stakes that are not withdrawn yet\\n            if (!userStakes[i].prizeRewardWithdrawn) {\\n\\n                uint256 _percent = _getPercentageReward(userStakes[i].rank);\\n\\n                reward = reward.add(\\n                            prizeAmount.mulBP(_percent)\\n                        );\\n\\n                btcReward = btcReward.add(\\n                            maturingBTCPrizeAmount\\n                                .mulBP(_percent)\\n                        );        \\n            }\\n        }\\n\\n        if (collaborativeReward > 0) {\\n            reward = reward.addBP(collaborativeReward);\\n            btcReward = btcReward.addBP(collaborativeReward);\\n        }\\n\\n        return (reward, btcReward);\\n    }\\n\\n    function _getPercentageReward(uint256 _rank)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        if (_rank <= prizeRewardRates[0].rank) {\\n            return prizeRewardRates[0].percentage;\\n        } else if (_rank <= prizeRewardRates[1].rank) {\\n            return prizeRewardRates[1].percentage;\\n        } else if (_rank <= prizeRewardRates[2].rank) {\\n            return prizeRewardRates[2].percentage;\\n        } else if (_rank <= prizeRewardRates[3].rank) {\\n            return prizeRewardRates[3].percentage;\\n        } else if (_rank <= prizeRewardRates[4].rank) {\\n            return prizeRewardRates[4].percentage;\\n        } else {\\n            return 0;\\n        }\\n    }        \\n\\n    function _getIndexedPrizeReward(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // wihtout the maturing price calculating prize is impossible\\n        if (!isMatured) return (0, 0);\\n\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        // users that don't stake don't get any prize also\\n        if (userStakes.length == 0) return (0, 0);\\n\\n        // the prize reward considered 0 if stakeIndex exceeds\\n        if (stakeIndex >= userStakes.length) return (0,0);\\n\\n        // If the first prize reward is withdrawn, we can assume that all the prize/collaborative rewards are withdrawn\\n        if (userStakes[stakeIndex].prizeRewardWithdrawn) return (0, 0);\\n\\n        uint256 maturingBTCPrizeAmount =\\n            (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 btcReward = 0;\\n\\n        uint256 _percent = _getPercentageReward(userStakes[stakeIndex].rank);\\n\\n        reward = reward.add(\\n                        prizeAmount.mulBP(_percent)\\n                    );\\n\\n        btcReward = btcReward.add(\\n                        maturingBTCPrizeAmount\\n                            .mulBP(_percent)\\n                    );            \\n\\n        if (collaborativeReward > 0) {\\n            reward = reward.addBP(collaborativeReward);\\n            btcReward = btcReward.addBP(collaborativeReward);\\n        }\\n\\n        return (reward, btcReward);\\n    }\\n\\n    function _withdrawPrizeReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].prizeRewardWithdrawn = true;\\n        }\\n    }\\n\\n    function _withdrawIndexedPrizeReward(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (userStakes[stakeIndex].prizeRewardWithdrawn) return;\\n\\n        userStakes[stakeIndex].prizeRewardWithdrawn = true;\\n    }\\n\\n    // getTotalStakedBalance return remained staked balance\\n    function _getTotalStakedBalance(address staker)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 totalStakedBalance = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            if (!userStakes[i].didUnstake) {\\n                totalStakedBalance = totalStakedBalance.add(\\n                    userStakes[i].stakedBalance\\n                );\\n            }\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    // getIndexedStakedBalance return the remained staked amount\\n    function _getIndexedStakedBalance(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n        if (stakeIndex >= userStakes.length) return 0; \\n\\n        uint256 totalStakedBalance = 0;\\n\\n        if (!userStakes[stakeIndex].didUnstake) {\\n            totalStakedBalance = totalStakedBalance.add(\\n                userStakes[stakeIndex].stakedBalance\\n            );\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    function _withdrawStakedBalance(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].didUnstake = true;\\n        }\\n    }\\n\\n    function _withdrawIndexedStakedBalance(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (stakeIndex >= userStakes.length) return;\\n\\n        userStakes[stakeIndex].didUnstake = true;\\n    }\\n\\n    function _getTotalReward(address staker)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // since in the getPrizeReward function the maturingPrice is used\\n        // so we got error if it would not be maturityDate\\n        uint256 prizeReward;\\n        uint256 btcPrizeReward;\\n        uint256 stakingReward = _getStakingReward(staker);\\n        (prizeReward, btcPrizeReward) = _getPrizeReward(staker);\\n\\n        return (stakingReward.add(prizeReward), btcPrizeReward);\\n    }\\n\\n    \\n    function _getIndexedReward(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // since in the getPrizeReward function the maturingPrice is used\\n        // so we got error if it would not be maturityDate\\n        uint256 prizeReward;\\n        uint256 btcPrizeReward;\\n        uint256 stakingReward = _getIndexedStakingReward(staker, stakeIndex);\\n        (prizeReward, btcPrizeReward) = _getIndexedPrizeReward(staker, stakeIndex);\\n\\n        return (stakingReward.add(prizeReward), btcPrizeReward);\\n    }\\n\\n    function getStakingReward() external view returns (uint256) {\\n        return _getStakingReward(_msgSender());\\n    }\\n    function getIndexedStakingReward(uint256 stakeIndex) external view returns (uint256) {\\n        return _getIndexedStakingReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getPrizeReward() external view returns (uint256, uint256) {\\n        return _getPrizeReward(_msgSender());\\n    }\\n    function getIndexedPrizeReward(uint256 stakeIndex) external view returns (uint256, uint256) {\\n        return _getIndexedPrizeReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getTotalStakedBalance() external view returns (uint256) {\\n        return _getTotalStakedBalance(_msgSender());\\n    }\\n    function getIndexedStakedBalance(uint256 stakeIndex) external view returns (uint256) {\\n        return _getIndexedStakedBalance(_msgSender(), stakeIndex);\\n    }\\n\\n    function getTotalReward() external view returns (uint256, uint256) {\\n        return _getTotalReward(_msgSender());\\n    }\\n    function getIndexedReward(uint256 stakeIndex) external view returns (uint256, uint256) {\\n        return _getIndexedReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getStakingTax(uint256 amount, uint256 tokenTaxRate)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        uint256 newStakeTaxRate =\\n            stakeTaxRate > tokenTaxRate ? stakeTaxRate.sub(tokenTaxRate) : 0;\\n        if (newStakeTaxRate == 0) {\\n            return (0, amount);\\n        }\\n        return (\\n            amount.mulBP(newStakeTaxRate),\\n            amount.sub(amount.mulBP(newStakeTaxRate))\\n        );\\n    }\\n\\n    function withdrawStuckTokens(address _stuckToken, uint256 amount, address receiver)\\n        external\\n        onlyPoolCreator\\n    {\\n        require(\\n            _stuckToken != address(totemToken), \\n            \\\"0370 totems can not be transfered\\\"\\n        );\\n        IERC20 stuckToken = IERC20(_stuckToken);\\n        stuckToken.transfer(receiver, amount);\\n    }\\n\\n    // hasUnStaked return true if the user staked in the pool and then has unStaked it (in claim usecase)\\n    function hasUnStaked(address staker, uint256 stakeIndex) external view returns (bool) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        require(\\n            userStakes.length > 0,\\n            \\\"0380 this address didn't stake in this pool\\\"\\n        );\\n\\n        require(\\n            stakeIndex < userStakes.length,\\n            \\\"0381 this index exceeds\\\"\\n        );\\n    \\n\\n        if (userStakes[stakeIndex].didUnstake) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    modifier onlyPoolCreator {\\n        require(\\n            _msgSender() == poolCreator,\\n            \\\"0300 caller is not a pool creator\\\"\\n        );\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xd4f54069d94645abdda4774fe56c207886971a967da870afea8b6be174d4539d\",\"license\":\"UNLICENSED\"},\"contracts/TotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"./ILocker.sol\\\";\\nimport \\\"./BasisPoints.sol\\\";\\n\\ncontract TotemToken is ILockerUser, Context, ERC20, Ownable {\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    string public constant NAME = \\\"Totem Token\\\";\\n    string public constant SYMBOL = \\\"TOTM\\\";\\n    uint8 public constant DECIMALS = 18;\\n    uint256 public constant INITIAL_SUPPLY = 10000000 * (10**uint256(DECIMALS));\\n\\n    address public CommunityDevelopmentAddr;\\n    address public StakingRewardsAddr;\\n    address public LiquidityPoolAddr;\\n    address public PublicSaleAddr;\\n    address public AdvisorsAddr;\\n    address public SeedInvestmentAddr;\\n    address public PrivateSaleAddr;\\n    address public TeamAllocationAddr;\\n    address public StrategicRoundAddr;\\n\\n    uint256 public constant COMMUNITY_DEVELOPMENT =\\n        1000000 * (10**uint256(DECIMALS)); // 10% for Community development\\n    uint256 public constant STAKING_REWARDS = 1650000 * (10**uint256(DECIMALS)); // 16.5% for Staking Revawards\\n    uint256 public constant LIQUIDITY_POOL = 600000 * (10**uint256(DECIMALS)); // 6% for Liquidity pool\\n    uint256 public constant ADVISORS = 850000 * (10**uint256(DECIMALS)); // 8.5% for Advisors\\n    uint256 public constant SEED_INVESTMENT = 450000 * (10**uint256(DECIMALS)); // 4.5% for Seed investment\\n    uint256 public constant PRIVATE_SALE = 2000000 * (10**uint256(DECIMALS)); // 20% for Private Sale\\n    uint256 public constant TEAM_ALLOCATION = 1500000 * (10**uint256(DECIMALS)); // 15% for Team allocation\\n\\n    uint256 public constant LAUNCH_POOL =\\n        5882352941 * (10**uint256(DECIMALS - 5)); // 58823.52941 for LaunchPool\\n    uint256 public constant PUBLIC_SALE =\\n        450000 * (10**uint256(DECIMALS)) + LAUNCH_POOL; // 4.5% for Public Sale\\n    uint256 public constant STRATEGIC_ROUND =\\n        1500000 * (10**uint256(DECIMALS)) - LAUNCH_POOL; // 15% for Strategic Round\\n    uint256 public taxRate = 300;\\n    address public taxationWallet;\\n\\n    bool private _isDistributionComplete = false;\\n\\n    mapping(address => bool) public taxExempt;\\n\\n    ILocker public override locker;\\n\\n    constructor() ERC20(NAME, SYMBOL) {\\n        taxationWallet = _msgSender();\\n\\n        _mint(address(this), INITIAL_SUPPLY);\\n    }\\n\\n    function setLocker(address _locker) external onlyOwner() {\\n        require(_locker != address(0), \\\"_locker cannot be address(0)\\\");\\n        locker = ILocker(_locker);\\n        emit SetLocker(_locker);\\n    }\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) public onlyOwner {\\n        require(!_isDistributionComplete);\\n\\n        require(_CommunityDevelopmentAddr != address(0));\\n        require(_StakingRewardsAddr != address(0));\\n        require(_LiquidityPoolAddr != address(0));\\n        require(_PublicSaleAddr != address(0));\\n        require(_AdvisorsAddr != address(0));\\n        require(_SeedInvestmentAddr != address(0));\\n        require(_PrivateSaleAddr != address(0));\\n        require(_TeamAllocationAddr != address(0));\\n        require(_StrategicRoundAddr != address(0));\\n        // set parnters addresses\\n        CommunityDevelopmentAddr = _CommunityDevelopmentAddr;\\n        StakingRewardsAddr = _StakingRewardsAddr;\\n        LiquidityPoolAddr = _LiquidityPoolAddr;\\n        PublicSaleAddr = _PublicSaleAddr;\\n        AdvisorsAddr = _AdvisorsAddr;\\n        SeedInvestmentAddr = _SeedInvestmentAddr;\\n        PrivateSaleAddr = _PrivateSaleAddr;\\n        TeamAllocationAddr = _TeamAllocationAddr;\\n        StrategicRoundAddr = _StrategicRoundAddr;\\n    }\\n\\n    function distributeTokens() public onlyOwner {\\n        require((!_isDistributionComplete));\\n\\n        _transfer(\\n            address(this),\\n            CommunityDevelopmentAddr,\\n            COMMUNITY_DEVELOPMENT\\n        );\\n        _transfer(address(this), StakingRewardsAddr, STAKING_REWARDS);\\n        _transfer(address(this), LiquidityPoolAddr, LIQUIDITY_POOL);\\n        _transfer(address(this), PublicSaleAddr, PUBLIC_SALE);\\n        _transfer(address(this), AdvisorsAddr, ADVISORS);\\n        _transfer(address(this), SeedInvestmentAddr, SEED_INVESTMENT);\\n        _transfer(address(this), PrivateSaleAddr, PRIVATE_SALE);\\n        _transfer(address(this), TeamAllocationAddr, TEAM_ALLOCATION);\\n        _transfer(address(this), StrategicRoundAddr, STRATEGIC_ROUND);\\n\\n        // Whitelist these addresses as tex exempt\\n        setTaxExemptStatus(CommunityDevelopmentAddr, true);\\n        setTaxExemptStatus(StakingRewardsAddr, true);\\n        setTaxExemptStatus(LiquidityPoolAddr, true);\\n        setTaxExemptStatus(PublicSaleAddr, true);\\n        setTaxExemptStatus(AdvisorsAddr, true);\\n        setTaxExemptStatus(SeedInvestmentAddr, true);\\n        setTaxExemptStatus(PrivateSaleAddr, true);\\n        setTaxExemptStatus(TeamAllocationAddr, true);\\n        setTaxExemptStatus(StrategicRoundAddr, true);\\n\\n        _isDistributionComplete = true;\\n    }\\n\\n    function setTaxRate(uint256 newTaxRate) public onlyOwner {\\n        require(newTaxRate < 10000, \\\"Tax connot be over 100% (10000 BP)\\\");\\n        taxRate = newTaxRate;\\n    }\\n\\n    function setTaxExemptStatus(address account, bool status) public onlyOwner {\\n        require(account != address(0));\\n        taxExempt[account] = status;\\n    }\\n\\n    function setTaxationWallet(address newTaxationWallet) public onlyOwner {\\n        require(newTaxationWallet != address(0));\\n        taxationWallet = newTaxationWallet;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        if (address(locker) != address(0)) {\\n            locker.lockOrGetPenalty(sender, recipient);\\n        }\\n        ERC20._transfer(sender, recipient, amount);\\n    }\\n\\n    function _transferWithTax(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(sender != recipient, \\\"Cannot self transfer\\\");\\n\\n        uint256 tax = amount.mulBP(taxRate);\\n        uint256 tokensToTransfer = amount.sub(tax);\\n\\n        _transfer(sender, taxationWallet, tax);\\n        _transfer(sender, recipient, tokensToTransfer);\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        require(_msgSender() != recipient, \\\"ERC20: cannot self transfer\\\");\\n        !taxExempt[_msgSender()]\\n            ? _transferWithTax(_msgSender(), recipient, amount)\\n            : _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        !taxExempt[sender]\\n            ? _transferWithTax(sender, recipient, amount)\\n            : _transfer(sender, recipient, amount);\\n\\n        approve(\\n            _msgSender(),\\n            allowance(sender, _msgSender()).sub(\\n                amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xfa21ba84a53a411dd96bf813d4c25a1168b631e1e5d098bb892c7e46a5e83ab0\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4562,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 4062,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "USDCContract",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1160"
      },
      {
        "astId": 3921,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "swapRouter",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IPancakeRouter02)4557"
      },
      {
        "astId": 3923,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "USDC_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3925,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "WBTC_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5434,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "predictions",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)5395_storage)dyn_storage)"
      },
      {
        "astId": 5437,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "stakers",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_struct(Staker)5400_storage)dyn_storage"
      },
      {
        "astId": 5440,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "sortedStakers",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_struct(Staker)5400_storage)dyn_storage"
      },
      {
        "astId": 5442,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "totalStaked",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 5444,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "maturingPrice",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 5454,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "collaborativeReward",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 5456,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "poolCreator",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 5460,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isLocked",
        "offset": 20,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5462,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isMatured",
        "offset": 21,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5464,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isDeleted",
        "offset": 22,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5467,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "prizeRewardRates",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_struct(PrizeRewardRate)5405_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(PrizeRewardRate)5405_storage)dyn_storage": {
        "base": "t_struct(PrizeRewardRate)5405_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.PrizeRewardRate[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StakeWithPrediction)5395_storage)dyn_storage": {
        "base": "t_struct(StakeWithPrediction)5395_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.StakeWithPrediction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Staker)5400_storage)dyn_storage": {
        "base": "t_struct(Staker)5400_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.Staker[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1160": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPancakeRouter02)4557": {
        "encoding": "inplace",
        "label": "contract IPancakeRouter02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)5395_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPool.StakeWithPrediction[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(StakeWithPrediction)5395_storage)dyn_storage"
      },
      "t_struct(PrizeRewardRate)5405_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.PrizeRewardRate",
        "members": [
          {
            "astId": 5402,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "rank",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5404,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "percentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StakeWithPrediction)5395_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.StakeWithPrediction",
        "members": [
          {
            "astId": 5378,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakedBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5380,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakedTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5382,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5384,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "lastWithdrawalTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5386,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "pricePrediction",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5388,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "difference",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5390,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "rank",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5392,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "prizeRewardWithdrawn",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 5394,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "didUnstake",
            "offset": 1,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Staker)5400_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.Staker",
        "members": [
          {
            "astId": 5397,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5399,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getDecimals()": {
        "notice": "Returns decimals for oracle contract"
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price from oracle contract"
      }
    },
    "version": 1
  }
}