{
  "contractName": "PriceConsumerUpgradeable",
  "sourceName": "contracts/Price/PriceConsumerUpgradeable.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "__PriceConsumer_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506103b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806337c4f6a4146100465780638e15f4731461005b578063f0141d8414610079575b600080fd5b61005961005436600461027e565b61008e565b005b61006361012f565b604051610070919061036a565b60405180910390f35b6100816101d6565b6040516100709190610373565b600054610100900460ff16806100a7575060005460ff16155b6100cc5760405162461bcd60e51b81526004016100c39061031c565b60405180910390fd5b600054610100900460ff161580156100f7576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b03851602179055801561012b576000805461ff00191690555b5050565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561018057600080fd5b505afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b891906102ac565b50505091505060008112156101ce5760006101d0565b805b91505090565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d091906102fb565b805169ffffffffffffffffffff8116811461027957600080fd5b919050565b60006020828403121561028f578081fd5b81356001600160a01b03811681146102a5578182fd5b9392505050565b600080600080600060a086880312156102c3578081fd5b6102cc8661025f565b94506020860151935060408601519250606086015191506102ef6080870161025f565b90509295509295909350565b60006020828403121561030c578081fd5b815160ff811681146102a5578182fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220e4f46c8021977e472a0b7d6a2ac2d6c9bc0811156806adff9fe894ba7f38005c64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806337c4f6a4146100465780638e15f4731461005b578063f0141d8414610079575b600080fd5b61005961005436600461027e565b61008e565b005b61006361012f565b604051610070919061036a565b60405180910390f35b6100816101d6565b6040516100709190610373565b600054610100900460ff16806100a7575060005460ff16155b6100cc5760405162461bcd60e51b81526004016100c39061031c565b60405180910390fd5b600054610100900460ff161580156100f7576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b03851602179055801561012b576000805461ff00191690555b5050565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561018057600080fd5b505afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b891906102ac565b50505091505060008112156101ce5760006101d0565b805b91505090565b600080600060029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561022757600080fd5b505afa15801561023b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d091906102fb565b805169ffffffffffffffffffff8116811461027957600080fd5b919050565b60006020828403121561028f578081fd5b81356001600160a01b03811681146102a5578182fd5b9392505050565b600080600080600060a086880312156102c3578081fd5b6102cc8661025f565b94506020860151935060408601519250606086015191506102ef6080870161025f565b90509295509295909350565b60006020828403121561030c578081fd5b815160ff811681146102a5578182fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b90815260200190565b60ff9190911681526020019056fea2646970667358221220e4f46c8021977e472a0b7d6a2ac2d6c9bc0811156806adff9fe894ba7f38005c64736f6c63430008000033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__PriceConsumer_initialize(address)": {
        "params": {
          "_oracle": "The chainlink node oracle address to send requests"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37C4F6A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 PUSH2 0x1D0 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A5 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CC DUP7 PUSH2 0x25F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2EF PUSH1 0x80 DUP8 ADD PUSH2 0x25F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DELEGATECALL PUSH13 0x8021977E472A0B7D6A2AC2D6C9 0xBC ADDMOD GT ISZERO PUSH9 0x6ADFF9FE894BA7F38 STOP 0x5C PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
      "sourceMap": "218:786:12:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2084:41",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:41",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "75:120:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "85:22:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "100:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "94:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:13:41"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "85:5:41"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "173:16:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "182:1:41",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "185:1:41",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "175:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "175:12:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "175:12:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "129:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "140:5:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "147:22:41",
                                    "type": "",
                                    "value": "0xffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "136:34:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "126:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "126:45:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "119:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "119:53:41"
                      },
                      "nodeType": "YulIf",
                      "src": "116:2:41"
                    }
                  ]
                },
                "name": "abi_decode_t_uint80_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "54:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "65:5:41",
                    "type": ""
                  }
                ],
                "src": "14:181:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "270:236:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "316:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "325:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "333:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "318:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "318:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "318:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "291:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "300:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "287:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "287:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "312:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "280:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "351:36:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "377:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "364:12:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:23:41"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "355:5:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "450:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "459:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "467:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "452:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "452:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "452:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "409:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "420:5:41"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "435:3:41",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "440:1:41",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "431:3:41"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "431:11:41"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "444:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "427:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "427:19:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "416:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "416:31:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "406:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "406:42:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "399:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "399:50:41"
                      },
                      "nodeType": "YulIf",
                      "src": "396:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "485:15:41",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "495:5:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "485:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "236:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "247:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "259:6:41",
                    "type": ""
                  }
                ],
                "src": "200:306:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "657:341:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "704:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "713:6:41"
                                },
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "721:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "706:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "706:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "706:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "678:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "687:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "699:3:41",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:33:41"
                      },
                      "nodeType": "YulIf",
                      "src": "667:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "739:51:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "780:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "749:30:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:41:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "739:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "799:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "819:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "830:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "815:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "815:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "809:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "809:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "799:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "843:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "863:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "874:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "853:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "853:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "843:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "887:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "907:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "918:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "903:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "903:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "897:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "897:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "887:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "931:61:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "976:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "987:3:41",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "972:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "972:19:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "941:30:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:51:41"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "931:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "591:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "602:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "614:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "622:6:41",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "630:6:41",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "638:6:41",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "646:6:41",
                    "type": ""
                  }
                ],
                "src": "511:487:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1082:214:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1128:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1137:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1145:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1130:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1130:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1130:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1103:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1112:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1099:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1099:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1124:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1092:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1163:29:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1182:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1176:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1176:16:41"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1167:5:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1240:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1249:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1257:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1242:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1242:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1214:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1225:5:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1232:4:41",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1221:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1221:16:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1211:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1211:27:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1204:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1204:35:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1201:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1275:15:41",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1285:5:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint8_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1048:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1059:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1071:6:41",
                    "type": ""
                  }
                ],
                "src": "1003:293:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1475:236:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1492:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1503:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1485:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1485:21:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1526:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1537:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1522:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1522:18:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1542:2:41",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1515:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1515:30:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1515:30:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1565:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1576:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1561:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1561:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1581:34:41",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1554:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:62:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1554:62:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1636:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1647:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1632:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1632:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1652:16:41",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1625:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:44:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1625:44:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1678:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1690:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1701:3:41",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1686:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1686:19:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1678:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1452:9:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1466:4:41",
                    "type": ""
                  }
                ],
                "src": "1301:410:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1817:76:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1827:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1839:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1850:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1835:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1835:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1827:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1869:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1880:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1862:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1862:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1862:25:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1786:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1797:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1808:4:41",
                    "type": ""
                  }
                ],
                "src": "1716:177:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1995:87:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2005:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2017:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2028:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2013:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2013:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2005:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2047:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2062:6:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2070:4:41",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2058:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2058:17:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2040:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:36:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2040:36:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1964:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1975:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1986:4:41",
                    "type": ""
                  }
                ],
                "src": "1898:184:41"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_t_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
          "id": 41,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37C4F6A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x27E JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3 SWAP1 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 PUSH2 0x1D0 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A5 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CC DUP7 PUSH2 0x25F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x2EF PUSH1 0x80 DUP8 ADD PUSH2 0x25F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DELEGATECALL PUSH13 0x8021977E472A0B7D6A2AC2D6C9 0xBC ADDMOD GT ISZERO PUSH9 0x6ADFF9FE894BA7F38 STOP 0x5C PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
      "sourceMap": "218:786:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;410:131;;;;;;:::i;:::-;;:::i;:::-;;828:174;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:132;;;:::i;:::-;;;;;;;:::i;410:131::-;1409:13:2;;;;;;;;:30;;-1:-1:-1;1427:12:2;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:2;;;;;;;:::i;:::-;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;;;1581:20:2;;;;;1615:19;1597:4;1615:19;;;1547:98;492:9:12::1;:42:::0;;-1:-1:-1;;;;;;492:42:12::1;::::0;-1:-1:-1;;;;;492:42:12;::::1;;;::::0;;1667:66:2;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:2;;;1667:66;410:131:12;;:::o;828:174::-;875:7;897:12;919:9;;;;;;;;;-1:-1:-1;;;;;919:9:12;-1:-1:-1;;;;;919:25:12;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;894:52;;;;;;973:1;964:5;:10;;:31;;994:1;964:31;;;985:5;964:31;957:38;;;828:174;:::o;614:132::-;660:5;677:14;694:9;;;;;;;;;-1:-1:-1;;;;;694:9:12;-1:-1:-1;;;;;694:18:12;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14:181:41:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;116:2;75:120;;;:::o;200:306::-;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;364:23;;-1:-1:-1;;;;;416:31:41;;406:42;;396:2;;467:6;459;452:22;396:2;495:5;270:236;-1:-1:-1;;;270:236:41:o;511:487::-;;;;;;699:3;687:9;678:7;674:23;670:33;667:2;;;721:6;713;706:22;667:2;749:41;780:9;749:41;:::i;:::-;739:51;;830:2;819:9;815:18;809:25;799:35;;874:2;863:9;859:18;853:25;843:35;;918:2;907:9;903:18;897:25;887:35;;941:51;987:3;976:9;972:19;941:51;:::i;:::-;931:61;;657:341;;;;;;;;:::o;1003:293::-;;1124:2;1112:9;1103:7;1099:23;1095:32;1092:2;;;1145:6;1137;1130:22;1092:2;1182:9;1176:16;1232:4;1225:5;1221:16;1214:5;1211:27;1201:2;;1257:6;1249;1242:22;1301:410;1503:2;1485:21;;;1542:2;1522:18;;;1515:30;1581:34;1576:2;1561:18;;1554:62;-1:-1:-1;;;1647:2:41;1632:18;;1625:44;1701:3;1686:19;;1475:236::o;1716:177::-;1862:25;;;1850:2;1835:18;;1817:76::o;1898:184::-;2070:4;2058:17;;;;2040:36;;2028:2;2013:18;;1995:87::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "190200",
        "executionCost": "232",
        "totalCost": "190432"
      },
      "external": {
        "__PriceConsumer_initialize(address)": "65302",
        "getDecimals()": "infinite",
        "getLatestPrice()": "infinite"
      }
    },
    "methodIdentifiers": {
      "__PriceConsumer_initialize(address)": "37c4f6a4",
      "getDecimals()": "f0141d84",
      "getLatestPrice()": "8e15f473"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"__PriceConsumer_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__PriceConsumer_initialize(address)\":{\"params\":{\"_oracle\":\"The chainlink node oracle address to send requests\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDecimals()\":{\"notice\":\"Returns decimals for oracle contract\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price from oracle contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Price/PriceConsumerUpgradeable.sol\":\"PriceConsumerUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"contracts/Price/PriceConsumerUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract PriceConsumerUpgradeable is Initializable {\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * @param _oracle The chainlink node oracle address to send requests\\n    */\\n    function __PriceConsumer_initialize(address _oracle) public initializer {\\n        priceFeed = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * @notice Returns decimals for oracle contract\\n    */\\n    function getDecimals() external view returns (uint8) {\\n        uint8 decimals = priceFeed.decimals();\\n        return decimals;\\n    }\\n\\n    /**\\n     * @notice Returns the latest price from oracle contract\\n    */\\n    function getLatestPrice() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return price >= 0 ? uint256(price) : 0;\\n    }\\n}\\n\",\"keccak256\":\"0x9775a722a16c168720b5f8480797739dd78055a664e517620ee454cd6d8642b8\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 176,
        "contract": "contracts/Price/PriceConsumerUpgradeable.sol:PriceConsumerUpgradeable",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 179,
        "contract": "contracts/Price/PriceConsumerUpgradeable.sol:PriceConsumerUpgradeable",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1585,
        "contract": "contracts/Price/PriceConsumerUpgradeable.sol:PriceConsumerUpgradeable",
        "label": "priceFeed",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getDecimals()": {
        "notice": "Returns decimals for oracle contract"
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price from oracle contract"
      }
    },
    "version": 1
  }
}