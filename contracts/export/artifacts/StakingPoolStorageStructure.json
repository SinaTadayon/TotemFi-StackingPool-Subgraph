{
  "contractName": "StakingPoolStorageStructure",
  "sourceName": "contracts/Staking/StakingPoolStorageStructure.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ApproveTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DistributedBTC",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "__PriceConsumer_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "swapRouterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "BUSDContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "WrappedTokenContractAddress",
          "type": "address"
        }
      ],
      "name": "__WrappedTokenDistributor_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collaborativeRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collaborativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getEstimatedWrappedTokenForUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPathForUSDToWrappedToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAnEmergency",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEnhancedEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMatured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launchDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "launchDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maturingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usdPrizeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prizeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeApr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collaborativeReward",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isEnhancedEnabled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMatured",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDecimal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialCollabReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "predictions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePrediction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "difference",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "prizeRewardWithdrawn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "didUnstake",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prizeRewardRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardManager",
      "outputs": [
        {
          "internalType": "contract IRewardManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeLimitRangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedStakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeApr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totemToken",
      "outputs": [
        {
          "internalType": "contract ITotemToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upgradeEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdPrizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedTokenSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102a05760003560e01c8063a08b2c7911610167578063de09ee20116100ce578063f1b17a8b11610087578063f1b17a8b146104be578063f2fde38b146104df578063f3d9dc0d146104f2578063f5e96fc9146104fa578063f8eeed6214610502578063fd5e6dd11461050a576102a0565b8063de09ee2014610452578063e081866914610473578063e425df8c14610491578063e8153c9314610499578063eb850ae1146104a1578063f0141d84146104a9576102a0565b8063b1dd61b611610120578063b1dd61b614610422578063bece75321461042a578063c120105414610432578063c6c1decd1461043a578063d025188b14610442578063d7efb6b71461044a576102a0565b8063a08b2c79146103da578063a150194b146103e2578063a35ef3a7146103ea578063a4e2d634146103ff578063a8f7b34614610407578063aa7bcb571461041a576102a0565b80636b036f451161020b578063850fa7cb116101c4578063850fa7cb1461038a5780638cf0e21e146103b25780638da5cb5b146103ba5780638e15f473146103c257806395c2ba47146103ca578063996c6cc3146103d2576102a0565b80636b036f451461035a578063715018a61461036257806373f317031461036a578063785fa627146103725780637f2b6a0d1461037a578063817b1cd214610382576102a0565b806337c4f6a41161025d57806337c4f6a4146103125780633fcdd82c146103275780634bc4eeb21461033a5780634e8bfdaa1461034257806351eacbf01461034a5780636847d0c514610352576102a0565b80630d668087146102a55780630f4ef8a6146102c357806322f3e2d4146102d8578063238a6c74146102ed5780632aa8195e146103025780632e577d071461030a575b600080fd5b6102ad61051d565b6040516102ba9190611162565b60405180910390f35b6102cb610523565b6040516102ba9190610ffb565b6102e0610532565b6040516102ba919061103b565b6102f5610541565b6040516102ba9190611046565b6102cb6105cf565b6102cb6105de565b610325610320366004610dd2565b6105ed565b005b6102ad610335366004610f18565b610687565b6102e061074b565b6102ad610759565b6102ad61075f565b6102ad610765565b6102ad61076b565b610325610771565b6102ad6107bc565b6102ad6107c2565b6102e06107c8565b6102ad6107d9565b61039d610398366004610e35565b6107df565b6040516102ba9998979695949392919061119a565b6102e061084d565b6102cb610860565b6102ad61086f565b6102ad610916565b6102cb61091b565b6102e061092a565b6102ad610933565b6103f2610938565b6040516102ba9190611028565b6102e06109e7565b610325610415366004610df3565b6109f7565b6102ad610aac565b6102f5610ab2565b6102cb610abf565b6102ad610ace565b6102cb610b54565b6102ad610b63565b6102e0610b69565b610465610460366004610f18565b610b7b565b6040516102ba92919061100f565b61047b610bb3565b6040516102ba9a999897969594939291906111dd565b6102ad610bdd565b6102cb610be3565b6102ad610bf2565b6104b1610bf8565b6040516102ba9190611226565b6104d16104cc366004610f18565b610c81565b6040516102ba92919061118c565b6103256104ed366004610dd2565b610caf565b6102ad610d20565b6102cb610d26565b6102ad610d35565b610465610518366004610f18565b610d3b565b60805481565b607b546001600160a01b031681565b608d5462010000900460ff1681565b607d805461054e90611234565b80601f016020809104026020016040519081016040528092919081815260200182805461057a90611234565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b505050505081565b606a546001600160a01b031681565b6067546001600160a01b031690565b600054610100900460ff1680610606575060005460ff16155b61062b5760405162461bcd60e51b8152600401610622906110df565b60405180910390fd5b600054610100900460ff16158015610656576000805460ff1961ff0019909116610100171660011790555b606580546001600160a01b0319166001600160a01b0384161790558015610683576000805461ff00191690555b5050565b60675460009081906001600160a01b031663d06ca61f846106a6610938565b6040518363ffffffff1660e01b81526004016106c392919061116b565b60006040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107179190810190610e5e565b90508060018151811061073a57634e487b7160e01b600052603260045260246000fd5b60200260200101519150505b919050565b608d54610100900460ff1681565b60815481565b60825481565b60865481565b60875481565b610779610d4b565b6001600160a01b031661078a610860565b6001600160a01b0316146107b05760405162461bcd60e51b81526004016106229061112d565b6107ba6000610d4f565b565b60855481565b60845481565b608d54640100000000900460ff1681565b60885481565b607960205281600052604060002081815481106107fb57600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850154600586015460068701546007909701549598509396509194909391929160ff8082169161010090041689565b608d546601000000000000900460ff1681565b6033546001600160a01b031690565b600080606560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190610f48565b505050915050600081121561090e576000610910565b805b91505090565b600581565b607c546001600160a01b031681565b608d5460ff1681565b600881565b60408051600280825260608083018452926000929190602083019080368337505060685482519293506001600160a01b03169183915060009061098b57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526069548251911690829060019081106109ca57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152905090565b608d546301000000900460ff1681565b600054610100900460ff1680610a10575060005460ff16155b610a2c5760405162461bcd60e51b8152600401610622906110df565b600054610100900460ff16158015610a57576000805460ff1961ff0019909116610100171660011790555b606780546001600160a01b038087166001600160a01b0319928316179092556068805486841690831617905560698054928516929091169190911790558015610aa6576000805461ff00191690555b50505050565b60835481565b607e805461054e90611234565b606c546001600160a01b031681565b6066546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610aff903090600401610ffb565b60206040518083038186803b158015610b1757600080fd5b505afa158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190610f30565b905090565b606b546001600160a01b031681565b60895481565b608d5465010000000000900460ff1681565b60788181548110610b8b57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b606d54606e54606f5460705460715460725460735460745460755460ff808216916101009004168a565b608a5481565b607a546001600160a01b031681565b608b5481565b600080606560009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4957600080fd5b505afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190610f97565b60768181548110610c9157600080fd5b60009182526020909120600290910201805460019091015490915082565b610cb7610d4b565b6001600160a01b0316610cc8610860565b6001600160a01b031614610cee5760405162461bcd60e51b81526004016106229061112d565b6001600160a01b038116610d145760405162461bcd60e51b815260040161062290611099565b610d1d81610d4f565b50565b608c5481565b6066546001600160a01b031690565b607f5481565b60778181548110610b8b57600080fd5b3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461074657600080fd5b805169ffffffffffffffffffff8116811461074657600080fd5b600060208284031215610de3578081fd5b610dec82610da1565b9392505050565b600080600060608486031215610e07578182fd5b610e1084610da1565b9250610e1e60208501610da1565b9150610e2c60408501610da1565b90509250925092565b60008060408385031215610e47578182fd5b610e5083610da1565b946020939093013593505050565b60006020808385031215610e70578182fd5b825167ffffffffffffffff80821115610e87578384fd5b818501915085601f830112610e9a578384fd5b815181811115610eac57610eac61126f565b83810260405185828201018181108582111715610ecb57610ecb61126f565b604052828152858101935084860182860187018a1015610ee9578788fd5b8795505b83861015610f0b578051855260019590950194938601938601610eed565b5098975050505050505050565b600060208284031215610f29578081fd5b5035919050565b600060208284031215610f41578081fd5b5051919050565b600080600080600060a08688031215610f5f578081fd5b610f6886610db8565b9450602086015193506040860151925060608601519150610f8b60808701610db8565b90509295509295909350565b600060208284031215610fa8578081fd5b815160ff81168114610dec578182fd5b6000815180845260208085019450808401835b83811015610ff05781516001600160a01b031687529582019590820190600101610fcb565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060208252610dec6020830184610fb8565b901515815260200190565b6000602080835283518082850152825b8181101561107257858101830151858201604001528201611056565b818111156110835783604083870101525b50601f01601f1916929092016040019392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b6000838252604060208301526111846040830184610fb8565b949350505050565b918252602082015260400190565b988952602089019790975260408801959095526060870193909352608086019190915260a085015260c0840152151560e083015215156101008201526101200190565b998a5260208a019890985260408901969096526060880194909452608087019290925260a086015260c085015260e0840152151561010083015215156101208201526101400190565b60ff91909116815260200190565b60028104600182168061124857607f821691505b6020821081141561126957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200da4b0176023dfd1124bea82ca57d4b86682c2a72d51a8448173986cc072900564736f6c63430008000033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__PriceConsumer_initialize(address)": {
        "params": {
          "_oracle": "The chainlink node oracle address to send requests"
        }
      },
      "getEstimatedWrappedTokenForUSD(uint256)": {
        "params": {
          "_amount": "Amount"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "upgradeEnabled": {
        "details": "StakingPoolImplementation can't be upgraded unless superAdmin sets this flag."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA08B2C79 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xF1B17A8B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF8EEED62 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x50A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xE0818669 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x4A9 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xB1DD61B6 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xBECE7532 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x44A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA150194B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xA35EF3A7 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xA8F7B346 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x41A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6B036F45 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x850FA7CB GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x8CF0E21E EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x3D2 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x382 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x37C4F6A4 GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x37C4F6A4 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x3FCDD82C EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x352 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x238A6C74 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2AA8195E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x30A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x325 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x759 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x75F JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x76B JUMP JUMPDEST PUSH2 0x325 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x860 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x916 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x91B JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x933 JUMP JUMPDEST PUSH2 0x3F2 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x325 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xABF JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xACE JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x465 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x47B PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x325 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x465 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x80 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7D DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57A SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x606 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x6A6 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x717 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE5E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x81 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x82 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x86 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x87 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x779 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78A PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x0 PUSH2 0xD4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x85 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x84 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x88 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x79 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 PUSH2 0x910 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x7C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x68 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x98B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x69 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x9CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA10 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x68 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x83 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAFF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x89 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x78 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x6E SLOAD PUSH1 0x6F SLOAD PUSH1 0x70 SLOAD PUSH1 0x71 SLOAD PUSH1 0x72 SLOAD PUSH1 0x73 SLOAD PUSH1 0x74 SLOAD PUSH1 0x75 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x8A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x910 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x76 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC8 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0xD1D DUP2 PUSH2 0xD4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x77 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDEC DUP3 PUSH2 0xDA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE07 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE10 DUP5 PUSH2 0xDA1 JUMP JUMPDEST SWAP3 POP PUSH2 0xE1E PUSH1 0x20 DUP6 ADD PUSH2 0xDA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2C PUSH1 0x40 DUP6 ADD PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE47 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE50 DUP4 PUSH2 0xDA1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE70 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE87 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE9A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xEAC JUMPI PUSH2 0xEAC PUSH2 0x126F JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xECB JUMPI PUSH2 0xECB PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xEE9 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF0B JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0xEED JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF29 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF5F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xF68 DUP7 PUSH2 0xDB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF8B PUSH1 0x80 DUP8 ADD PUSH2 0xDB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDEC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF0 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFCB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xDEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1072 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1056 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1083 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1184 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x40 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1248 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD LOG4 0xB0 OR PUSH1 0x23 0xDF 0xD1 SLT 0x4B 0xEA DUP3 0xCA JUMPI 0xD4 0xB8 PUSH7 0x82C2A72D51A844 DUP2 PUSH20 0x986CC072900564736F6C63430008000033000000 ",
      "sourceMap": "559:2730:20:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:10548:41",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:41",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "65:124:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "75:29:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "97:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "84:12:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "84:20:41"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "75:5:41"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "167:16:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "176:1:41",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "179:1:41",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "169:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "169:12:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "169:12:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "126:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:5:41"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "152:3:41",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "157:1:41",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "148:3:41"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "148:11:41"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "161:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "144:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "144:19:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:31:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "123:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "123:42:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "116:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "116:50:41"
                      },
                      "nodeType": "YulIf",
                      "src": "113:2:41"
                    }
                  ]
                },
                "name": "abi_decode_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "44:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "55:5:41",
                    "type": ""
                  }
                ],
                "src": "14:175:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "255:120:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "265:22:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "280:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "274:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:13:41"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "265:5:41"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "353:16:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "362:1:41",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "365:1:41",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "355:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "355:12:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "355:12:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "320:5:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "327:22:41",
                                    "type": "",
                                    "value": "0xffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:34:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "306:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "306:45:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "299:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "299:53:41"
                      },
                      "nodeType": "YulIf",
                      "src": "296:2:41"
                    }
                  ]
                },
                "name": "abi_decode_t_uint80_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "234:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "245:5:41",
                    "type": ""
                  }
                ],
                "src": "194:181:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "450:128:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "496:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "505:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "498:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "498:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "498:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "471:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "480:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "467:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "467:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "492:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "463:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "460:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "531:41:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "562:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "541:20:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "541:31:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "531:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "416:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "427:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "439:6:41",
                    "type": ""
                  }
                ],
                "src": "380:198:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "687:246:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "733:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "742:6:41"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "735:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "735:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "735:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "708:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "717:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "704:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "704:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "729:2:41",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "700:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "700:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "697:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "768:41:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "778:20:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "778:31:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "768:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "818:50:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "853:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "864:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "849:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "849:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "828:20:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:40:41"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "818:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "877:50:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "912:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "923:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "908:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "908:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "887:20:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:40:41"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "877:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "637:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "648:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "660:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "668:6:41",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "676:6:41",
                    "type": ""
                  }
                ],
                "src": "583:350:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1025:179:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1071:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1073:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1073:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1073:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1046:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1055:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1067:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1038:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1038:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1035:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1106:41:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1137:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1116:20:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1116:31:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1106:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1156:42:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1183:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1194:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1179:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1179:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1166:12:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1166:32:41"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1156:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "983:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "994:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1006:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1014:6:41",
                    "type": ""
                  }
                ],
                "src": "938:266:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1315:1042:41",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1325:12:41",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1335:2:41",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1329:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1382:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1399:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1384:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1384:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1384:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1357:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1366:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1353:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1353:23:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1378:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1346:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1417:30:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1437:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1431:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1431:16:41"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1421:6:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1456:28:41",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1466:18:41",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1460:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1511:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1513:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1513:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1513:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1499:6:41"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1507:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:14:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1493:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1546:32:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1560:9:41"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1571:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1556:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1556:22:41"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "1550:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1626:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1635:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1643:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1628:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1628:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1628:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1605:2:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1609:4:41",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1601:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1601:13:41"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1616:7:41"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1597:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1597:27:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1590:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1590:35:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1587:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1661:19:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1677:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1671:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1671:9:41"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "1665:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1703:22:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1705:16:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1705:18:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1705:18:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1695:2:41"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1699:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1692:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1692:10:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1689:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1734:21:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1748:2:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1752:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "1744:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:11:41"
                      },
                      "variables": [
                        {
                          "name": "_5",
                          "nodeType": "YulTypedName",
                          "src": "1738:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1764:23:41",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1784:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1778:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:9:41"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "1768:6:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1796:42:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1822:6:41"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "1830:2:41"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1818:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1818:15:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1835:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1814:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1814:24:41"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1800:10:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1897:22:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1899:16:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1899:18:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1899:18:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1856:10:41"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1868:2:41"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1853:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1853:18:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1876:10:41"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1888:6:41"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1873:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1873:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1850:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1850:46:41"
                      },
                      "nodeType": "YulIf",
                      "src": "1847:2:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1935:2:41",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1939:10:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1928:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:22:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1928:22:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1959:17:41",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1970:6:41"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "1963:3:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1992:6:41"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2000:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1985:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1985:18:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1985:18:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2012:22:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2023:6:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2031:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2019:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:15:41"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "2012:3:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2043:22:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2058:2:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2062:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2054:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:11:41"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "2047:3:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2111:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2120:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2128:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2113:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2113:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2113:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2088:2:41"
                                  },
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "2092:2:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2084:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2084:11:41"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2097:2:41"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2080:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2080:20:41"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2102:7:41"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2077:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:33:41"
                      },
                      "nodeType": "YulIf",
                      "src": "2074:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2146:15:41",
                      "value": {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2155:6:41"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2150:1:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2215:111:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2236:3:41"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2247:3:41"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2241:5:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2241:10:41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2229:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2229:23:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2229:23:41"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2265:19:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2276:3:41"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2281:2:41"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2272:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2272:12:41"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "2265:3:41"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2297:19:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2308:3:41"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2313:2:41"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2304:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2304:12:41"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "2297:3:41"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2181:1:41"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2184:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2178:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2178:9:41"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2188:18:41",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2190:14:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2199:1:41"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2202:1:41",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2195:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2195:9:41"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "2190:1:41"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2174:3:41",
                        "statements": []
                      },
                      "src": "2170:156:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2335:16:41",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2345:6:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2335:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1281:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1292:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1304:6:41",
                    "type": ""
                  }
                ],
                "src": "1209:1148:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2432:120:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2478:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2487:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2495:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2480:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2480:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2480:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2453:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2462:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2449:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2449:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2474:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2445:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "2442:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2513:33:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2536:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2523:12:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2523:23:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2513:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2398:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2409:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2421:6:41",
                    "type": ""
                  }
                ],
                "src": "2362:190:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2638:113:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2684:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2693:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2701:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2686:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2686:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2686:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2659:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2668:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2655:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2680:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2651:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2651:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "2648:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2719:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2735:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2729:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2729:16:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2719:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2604:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2615:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2627:6:41",
                    "type": ""
                  }
                ],
                "src": "2557:194:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2902:341:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2949:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2958:6:41"
                                },
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2966:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2951:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2951:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2951:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2923:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2932:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2919:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2919:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2944:3:41",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2915:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2915:33:41"
                      },
                      "nodeType": "YulIf",
                      "src": "2912:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2984:51:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3025:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2994:30:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2994:41:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2984:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3044:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3064:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3075:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3060:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3060:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3054:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3054:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3044:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3088:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3108:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3119:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3104:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3104:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3098:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3088:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3132:35:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3152:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3163:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3148:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3148:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3142:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3142:25:41"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3132:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3176:61:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3221:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3232:3:41",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3217:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3217:19:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3186:30:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3186:51:41"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3176:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2836:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2847:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2859:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2867:6:41",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2875:6:41",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "2883:6:41",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "2891:6:41",
                    "type": ""
                  }
                ],
                "src": "2756:487:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3327:214:41",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3373:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3382:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3390:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3375:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3375:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3375:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3348:7:41"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3357:9:41"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3344:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3344:23:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3369:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3340:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3340:32:41"
                      },
                      "nodeType": "YulIf",
                      "src": "3337:2:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3408:29:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3427:9:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3421:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3421:16:41"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3412:5:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3485:26:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3494:6:41"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3502:6:41"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3487:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3487:22:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3487:22:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3459:5:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3470:5:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3477:4:41",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3466:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3466:16:41"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3456:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3456:27:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3449:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:35:41"
                      },
                      "nodeType": "YulIf",
                      "src": "3446:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3520:15:41",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3530:5:41"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3520:6:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint8_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3293:9:41",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3304:7:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3316:6:41",
                    "type": ""
                  }
                ],
                "src": "3248:293:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3613:402:41",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3623:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3643:5:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3637:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3637:12:41"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3627:6:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3665:3:41"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3670:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3658:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3658:19:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3658:19:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3686:14:41",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3696:4:41",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3690:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3709:19:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3720:3:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3725:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3716:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3716:12:41"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "3709:3:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3737:28:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3755:5:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3762:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3751:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3751:14:41"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "3741:6:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3774:12:41",
                      "value": {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3783:3:41"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "3778:1:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3844:146:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3865:3:41"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3880:6:41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3874:5:41"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3874:13:41"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3897:3:41",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3902:1:41",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "3893:3:41"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3893:11:41"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3906:1:41",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "3889:3:41"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3889:19:41"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "3870:3:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3870:39:41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3858:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3858:52:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3858:52:41"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3923:19:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3934:3:41"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3939:2:41"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3930:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3930:12:41"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3923:3:41"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3955:25:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3969:6:41"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3977:2:41"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3965:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3965:15:41"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3955:6:41"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3806:1:41"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3809:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3803:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3803:13:41"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "3817:18:41",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3819:14:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3828:1:41"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3831:1:41",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3824:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3824:9:41"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "3819:1:41"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "3799:3:41",
                        "statements": []
                      },
                      "src": "3795:195:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3999:10:41",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4006:3:41"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "3999:3:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_t_array$_t_address_$dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "3590:5:41",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "3597:3:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3605:3:41",
                    "type": ""
                  }
                ],
                "src": "3546:469:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4121:102:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4131:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4143:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4154:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4139:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4139:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4131:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4173:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4188:6:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4204:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4209:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4200:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4200:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4213:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4196:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4196:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4184:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4184:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4166:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4166:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4166:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4090:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4101:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4112:4:41",
                    "type": ""
                  }
                ],
                "src": "4020:203:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4357:145:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4367:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4379:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4390:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4375:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4375:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4367:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4409:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4424:6:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4440:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4445:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4436:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4436:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4449:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4432:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4432:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4420:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4420:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4402:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4402:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4402:51:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4473:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4484:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4469:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4469:18:41"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4489:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4462:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4462:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4462:34:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4318:9:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4329:6:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4337:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4348:4:41",
                    "type": ""
                  }
                ],
                "src": "4228:274:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4658:116:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4675:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4686:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4668:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4668:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4668:21:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4698:70:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4741:6:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4753:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4764:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4749:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4749:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_address_$dyn",
                          "nodeType": "YulIdentifier",
                          "src": "4706:34:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4706:62:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4698:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4627:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4638:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4649:4:41",
                    "type": ""
                  }
                ],
                "src": "4507:267:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4874:92:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4884:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4896:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4907:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4892:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4884:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4926:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4951:6:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4944:6:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4944:14:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4937:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4937:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4919:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4919:41:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4919:41:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4843:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4854:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4865:4:41",
                    "type": ""
                  }
                ],
                "src": "4779:187:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5086:102:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5096:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5108:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5119:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5104:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5104:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5096:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5138:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5153:6:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5169:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5174:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5165:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5165:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5178:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5161:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5161:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5149:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5149:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5131:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5131:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5131:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IERC20_$988__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5055:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5066:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5077:4:41",
                    "type": ""
                  }
                ],
                "src": "4971:217:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5317:102:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5327:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5339:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5350:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5335:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5335:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5327:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5369:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5384:6:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5400:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5405:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5396:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5396:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5409:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5392:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5392:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5380:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5380:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5362:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5362:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5362:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IRewardManager_$7059__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5286:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5297:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5308:4:41",
                    "type": ""
                  }
                ],
                "src": "5193:226:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5545:102:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5555:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5567:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5578:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5563:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5563:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5555:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5597:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5612:6:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5628:3:41",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5633:1:41",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5624:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5624:11:41"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5637:1:41",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5620:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5620:19:41"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5608:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5608:32:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5590:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5590:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5590:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_ITotemToken_$7152__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5514:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5525:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5536:4:41",
                    "type": ""
                  }
                ],
                "src": "5424:223:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5773:482:41",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5783:12:41",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5793:2:41",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5787:2:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5811:9:41"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5822:2:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5804:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5804:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5804:21:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5834:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5854:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5848:5:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5848:13:41"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "5838:6:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5881:9:41"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5892:2:41"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5877:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5877:18:41"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5897:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5870:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5870:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5870:34:41"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5913:13:41",
                      "value": {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5922:4:41"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "5917:1:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5985:90:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "6014:9:41"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6025:1:41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6010:3:41"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6010:17:41"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6029:2:41",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6006:3:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6006:26:41"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "6048:6:41"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "6056:1:41"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6044:3:41"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6044:14:41"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6060:2:41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6040:3:41"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6040:23:41"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6034:5:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6034:30:41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5999:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5999:66:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5999:66:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5946:1:41"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5949:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5943:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5943:13:41"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "5957:19:41",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5959:15:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5968:1:41"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5971:2:41"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5964:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5964:10:41"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "5959:1:41"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "5939:3:41",
                        "statements": []
                      },
                      "src": "5935:140:41"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6109:69:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "6138:9:41"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "6149:6:41"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6134:3:41"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6134:22:41"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6158:2:41",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6130:3:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6130:31:41"
                                },
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6163:4:41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6123:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6123:45:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6123:45:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6090:1:41"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6093:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6087:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6087:13:41"
                      },
                      "nodeType": "YulIf",
                      "src": "6084:2:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6187:62:41",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6203:9:41"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6222:6:41"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6230:2:41",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6218:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6218:15:41"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6239:2:41",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6235:3:41"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6235:7:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6214:3:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6214:29:41"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6199:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6199:45:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6246:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6195:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6195:54:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6187:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5742:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5753:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5764:4:41",
                    "type": ""
                  }
                ],
                "src": "5652:603:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6434:228:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6451:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6462:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6444:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6444:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6444:21:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6485:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6496:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6481:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6481:18:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6501:2:41",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6474:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6474:30:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6474:30:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6524:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6535:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6520:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6520:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6540:34:41",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6513:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6513:62:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6513:62:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6595:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6606:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6591:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6591:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6611:8:41",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6584:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6584:36:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6584:36:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6629:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6641:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6652:3:41",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6637:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6637:19:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6629:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6411:9:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6425:4:41",
                    "type": ""
                  }
                ],
                "src": "6260:402:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6841:236:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6858:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6869:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6851:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6851:21:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6892:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6903:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6888:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6888:18:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6908:2:41",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6881:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6881:30:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6881:30:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6931:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6942:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6927:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6927:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6947:34:41",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6920:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6920:62:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6920:62:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7002:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7013:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6998:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6998:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7018:16:41",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6991:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6991:44:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6991:44:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7044:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7056:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7067:3:41",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7052:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7052:19:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7044:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6818:9:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6832:4:41",
                    "type": ""
                  }
                ],
                "src": "6667:410:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7256:182:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7273:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7284:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7266:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7266:21:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7266:21:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7307:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7318:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7303:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7303:18:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7323:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7296:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7296:30:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7296:30:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7346:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7357:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7342:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7342:18:41"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7362:34:41",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7335:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7335:62:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7335:62:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7406:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7418:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7429:2:41",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7414:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7406:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7233:9:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7247:4:41",
                    "type": ""
                  }
                ],
                "src": "7082:356:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7544:76:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7554:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7566:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7577:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7562:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7562:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7554:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7596:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7607:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7589:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7589:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7589:25:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7513:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7524:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7535:4:41",
                    "type": ""
                  }
                ],
                "src": "7443:177:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7804:159:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7821:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7832:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7814:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7814:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7814:25:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7859:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7870:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7855:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7855:18:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7875:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7848:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7848:30:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7848:30:41"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7887:70:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7930:6:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7942:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7953:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7938:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7938:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_address_$dyn",
                          "nodeType": "YulIdentifier",
                          "src": "7895:34:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7895:62:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7887:4:41"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7765:9:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7776:6:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7784:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7795:4:41",
                    "type": ""
                  }
                ],
                "src": "7625:338:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8097:119:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "8107:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8119:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8130:2:41",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8115:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8115:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8107:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8149:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8160:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8142:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8142:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8142:25:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8187:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8198:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8183:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8183:18:41"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8203:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8176:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8176:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8176:34:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8058:9:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8069:6:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8077:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8088:4:41",
                    "type": ""
                  }
                ],
                "src": "7968:248:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8534:458:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "8544:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8556:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8567:3:41",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8552:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8552:19:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8544:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8587:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8598:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8580:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8580:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8580:25:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8625:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8636:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8621:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8621:18:41"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8641:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8614:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8614:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8614:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8668:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8679:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8664:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8664:18:41"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8684:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8657:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8657:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8657:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8711:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8722:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8707:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8707:18:41"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8727:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8700:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8700:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8700:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8754:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8765:3:41",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8750:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8750:19:41"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "8771:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8743:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8743:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8743:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8798:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8809:3:41",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8794:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8794:19:41"
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "8815:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8787:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8787:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8787:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8842:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8853:3:41",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8838:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8838:19:41"
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "8859:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8831:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8831:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8831:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8886:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8897:3:41",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8882:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8882:19:41"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "8917:6:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8910:6:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8910:14:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8903:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8903:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8875:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8875:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8875:51:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8946:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8957:3:41",
                                "type": "",
                                "value": "256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8942:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8942:19:41"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "8977:6:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8970:6:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8970:14:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8963:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8963:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8935:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8935:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8935:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8439:9:41",
                    "type": ""
                  },
                  {
                    "name": "value8",
                    "nodeType": "YulTypedName",
                    "src": "8450:6:41",
                    "type": ""
                  },
                  {
                    "name": "value7",
                    "nodeType": "YulTypedName",
                    "src": "8458:6:41",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "8466:6:41",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "8474:6:41",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "8482:6:41",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "8490:6:41",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "8498:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "8506:6:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "8514:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8525:4:41",
                    "type": ""
                  }
                ],
                "src": "8221:771:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9338:502:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9348:27:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9360:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9371:3:41",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9356:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9356:19:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9348:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9391:9:41"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9402:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9384:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9384:25:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9384:25:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9429:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9440:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9425:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9425:18:41"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9445:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9418:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9418:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9418:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9472:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9483:2:41",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9468:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9468:18:41"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "9488:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9461:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9461:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9461:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9515:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9526:2:41",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9511:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9511:18:41"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "9531:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9504:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9504:34:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9504:34:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9558:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9569:3:41",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9554:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9554:19:41"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "9575:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9547:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9547:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9547:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9602:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9613:3:41",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9598:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9598:19:41"
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "9619:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9591:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9591:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9591:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9646:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9657:3:41",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9642:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9642:19:41"
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "9663:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9635:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9635:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9635:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9690:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9701:3:41",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9686:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9686:19:41"
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "9707:6:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9679:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9679:35:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9679:35:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9734:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9745:3:41",
                                "type": "",
                                "value": "256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9730:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9730:19:41"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "9765:6:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9758:6:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9758:14:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9751:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9751:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9723:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9723:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9723:51:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9794:9:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9805:3:41",
                                "type": "",
                                "value": "288"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9790:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9790:19:41"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "9825:6:41"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9818:6:41"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9818:14:41"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9811:6:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9811:22:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9783:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9783:51:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9783:51:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9235:9:41",
                    "type": ""
                  },
                  {
                    "name": "value9",
                    "nodeType": "YulTypedName",
                    "src": "9246:6:41",
                    "type": ""
                  },
                  {
                    "name": "value8",
                    "nodeType": "YulTypedName",
                    "src": "9254:6:41",
                    "type": ""
                  },
                  {
                    "name": "value7",
                    "nodeType": "YulTypedName",
                    "src": "9262:6:41",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "9270:6:41",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "9278:6:41",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "9286:6:41",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "9294:6:41",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "9302:6:41",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "9310:6:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9318:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9329:4:41",
                    "type": ""
                  }
                ],
                "src": "8997:843:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9942:87:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "9952:26:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9964:9:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9975:2:41",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9960:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9960:18:41"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9952:4:41"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9994:9:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10009:6:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10017:4:41",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10005:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10005:17:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9987:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9987:36:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9987:36:41"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9911:9:41",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "9922:6:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9933:4:41",
                    "type": ""
                  }
                ],
                "src": "9845:184:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10089:325:41",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "10099:22:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "10113:4:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10119:1:41",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "10109:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10109:12:41"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "10099:6:41"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10130:38:41",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "10160:4:41"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10166:1:41",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10156:3:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10156:12:41"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "10134:18:41",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10207:31:41",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10209:27:41",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10223:6:41"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10231:4:41",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "10219:3:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10219:17:41"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10209:6:41"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "10187:18:41"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10180:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10180:26:41"
                      },
                      "nodeType": "YulIf",
                      "src": "10177:2:41"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10297:111:41",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10318:1:41",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10325:3:41",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10330:10:41",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "10321:3:41"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10321:20:41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10311:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10311:31:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10311:31:41"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10362:1:41",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10365:4:41",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "10355:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10355:15:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10355:15:41"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10390:1:41",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10393:4:41",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "10383:6:41"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10383:15:41"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10383:15:41"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "10253:18:41"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "10276:6:41"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10284:2:41",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10273:2:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10273:14:41"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10250:2:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10250:38:41"
                      },
                      "nodeType": "YulIf",
                      "src": "10247:2:41"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "10069:4:41",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "10078:6:41",
                    "type": ""
                  }
                ],
                "src": "10034:380:41"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10451:95:41",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10468:1:41",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10475:3:41",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10480:10:41",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10471:3:41"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10471:20:41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10461:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10461:31:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10461:31:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10508:1:41",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10511:4:41",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10501:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10501:15:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10501:15:41"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10532:1:41",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10535:4:41",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "10525:6:41"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10525:15:41"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10525:15:41"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "10419:127:41"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_t_array$_t_address_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_address_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$988__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IRewardManager_$7059__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ITotemToken_$7152__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_t_address_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
          "id": 41,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA08B2C79 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xF1B17A8B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF8EEED62 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x50A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xE0818669 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x4A9 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xB1DD61B6 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xBECE7532 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x44A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA150194B EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xA35EF3A7 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xA8F7B346 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x41A JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6B036F45 GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x850FA7CB GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x8CF0E21E EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x3D2 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x382 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0x37C4F6A4 GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x37C4F6A4 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x3FCDD82C EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x352 JUMPI PUSH2 0x2A0 JUMP JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x238A6C74 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x2AA8195E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x30A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x325 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x759 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x75F JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x76B JUMP JUMPDEST PUSH2 0x325 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x39D PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x84D JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x860 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x916 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x91B JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x92A JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x933 JUMP JUMPDEST PUSH2 0x3F2 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x325 PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xABF JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xACE JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x465 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x47B PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH2 0x325 PUSH2 0x4ED CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x465 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x80 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7D DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57A SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x606 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x6A6 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x717 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE5E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x73A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x81 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x82 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x86 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x87 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x779 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78A PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x7BA PUSH1 0x0 PUSH2 0xD4F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x85 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x84 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x88 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x79 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 PUSH2 0x910 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x7C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x68 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x98B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x69 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x9CA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA10 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x68 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x69 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x83 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x6C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAFF SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x89 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8D SLOAD PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x78 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x6E SLOAD PUSH1 0x6F SLOAD PUSH1 0x70 SLOAD PUSH1 0x71 SLOAD PUSH1 0x72 SLOAD PUSH1 0x73 SLOAD PUSH1 0x74 SLOAD PUSH1 0x75 SLOAD PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x8A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x910 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x76 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0xCB7 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC8 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x112D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0xD1D DUP2 PUSH2 0xD4F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x77 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDEC DUP3 PUSH2 0xDA1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE07 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE10 DUP5 PUSH2 0xDA1 JUMP JUMPDEST SWAP3 POP PUSH2 0xE1E PUSH1 0x20 DUP6 ADD PUSH2 0xDA1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2C PUSH1 0x40 DUP6 ADD PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE47 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xE50 DUP4 PUSH2 0xDA1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE70 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE87 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE9A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xEAC JUMPI PUSH2 0xEAC PUSH2 0x126F JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD DUP6 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xECB JUMPI PUSH2 0xECB PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0xEE9 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF0B JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0xEED JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF29 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF5F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xF68 DUP7 PUSH2 0xDB8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF8B PUSH1 0x80 DUP8 ADD PUSH2 0xDB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDEC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF0 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFCB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xDEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1072 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1056 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1083 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1184 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD SWAP1 JUMP JUMPDEST SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x40 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1248 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1269 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD LOG4 0xB0 OR PUSH1 0x23 0xDF 0xD1 SLT 0x4B 0xEA DUP3 0xCA JUMPI 0xD4 0xB8 PUSH7 0x82C2A72D51A844 DUP2 PUSH20 0x986CC072900564736F6C63430008000033000000 ",
      "sourceMap": "559:2730:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2233:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1961:35;;;:::i;:::-;;;;;;;:::i;3048:20::-;;;:::i;:::-;;;;;;;:::i;2035:32::-;;;:::i;:::-;;;;;;;:::i;719:40::-;;;:::i;2200:98:11:-;;;:::i;410:131:12:-;;;;;;:::i;:::-;;:::i;:::-;;1488:398:11;;;;;;:::i;:::-;;:::i;3013:29:20:-;;;:::i;2262:27::-;;;:::i;2295:29::-;;;:::i;2581:27::-;;;:::i;2614:33::-;;;:::i;1871:92:1:-;;;:::i;2546:29:20:-;;;:::i;2359:26::-;;;:::i;3100:21::-;;;:::i;2653:26::-;;;:::i;1859:60::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;3260:26::-;;;:::i;1239:85:1:-;;;:::i;828:174:12:-;;;:::i;2102:46:20:-;;;:::i;2002:26::-;;;:::i;2982:25::-;;;:::i;2154:41::-;;;:::i;1892:248:11:-;;;:::i;:::-;;;;;;;:::i;3074:20:20:-;;;:::i;453:376:11:-;;;;;;:::i;:::-;;:::i;2330:23:20:-;;;:::i;2073:22::-;;;:::i;797:29::-;;;:::i;658:118:10:-;;;:::i;765:26:20:-;;;:::i;2685:28::-;;;:::i;3127:21::-;;;:::i;1823:29::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1720:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;2719:36::-;;;:::i;1926:29::-;;;:::i;2761:33::-;;;:::i;614:132:12:-;;;:::i;:::-;;;;;;;:::i;1747:41:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2112:189:1:-;;;;;;:::i;:::-;;:::i;2940:34:20:-;;;:::i;782:100:10:-;;;:::i;2202:25:20:-;;;:::i;1794:23::-;;;;;;:::i;:::-;;:::i;2233:::-;;;;:::o;1961:35::-;;;-1:-1:-1;;;;;1961:35:20;;:::o;3048:20::-;;;;;;;;;:::o;2035:32::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;719:40::-;;;-1:-1:-1;;;;;719:40:20;;:::o;2200:98:11:-;2280:10;;-1:-1:-1;;;;;2280:10:11;2200:98;:::o;410:131:12:-;1409:13:2;;;;;;;;:30;;-1:-1:-1;1427:12:2;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:2;;;;;;;:::i;:::-;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;;;1581:20:2;;;;;1615:19;1597:4;1615:19;;;1547:98;492:9:12::1;:42:::0;;-1:-1:-1;;;;;;492:42:12::1;-1:-1:-1::0;;;;;492:42:12;::::1;;::::0;;1667:66:2;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:2;;;1667:66;410:131:12;;:::o;1488:398:11:-;1663:10;;1590:7;;;;-1:-1:-1;;;;;1663:10:11;:24;1688:7;1697:29;:27;:29::i;:::-;1663:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1663:64:11;;;;;;;;;;;;:::i;:::-;1613:114;;1858:18;1877:1;1858:21;;;;;;-1:-1:-1;;;1858:21:11;;;;;;;;;;;;;;;1851:28;;;1488:398;;;;:::o;3013:29:20:-;;;;;;;;;:::o;2262:27::-;;;;:::o;2295:29::-;;;;:::o;2581:27::-;;;;:::o;2614:33::-;;;;:::o;1871:92:1:-;1462:12;:10;:12::i;:::-;-1:-1:-1;;;;;1451:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1451:23:1;;1443:68;;;;-1:-1:-1;;;1443:68:1;;;;;;;:::i;:::-;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;2546:29:20:-;;;;:::o;2359:26::-;;;;:::o;3100:21::-;;;;;;;;;:::o;2653:26::-;;;;:::o;1859:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1859:60:20;;-1:-1:-1;1859:60:20;;;;;;;;;;;;;;;;;:::o;3260:26::-;;;;;;;;;:::o;1239:85:1:-;1311:6;;-1:-1:-1;;;;;1311:6:1;1239:85;:::o;828:174:12:-;875:7;897:12;919:9;;;;;;;;;-1:-1:-1;;;;;919:9:12;-1:-1:-1;;;;;919:25:12;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;894:52;;;;;;973:1;964:5;:10;;:31;;994:1;964:31;;;985:5;964:31;957:38;;;828:174;:::o;2102:46:20:-;2147:1;2102:46;:::o;2002:26::-;;;-1:-1:-1;;;;;2002:26:20;;:::o;2982:25::-;;;;;;:::o;2154:41::-;2194:1;2154:41;:::o;1892:248:11:-;2004:16;;;2018:1;2004:16;;;1952;2004;;;;;1952;1980:21;;2004:16;2018:1;2004:16;;;;;;;;-1:-1:-1;;2040:21:11;;2030:7;;;;-1:-1:-1;;;;;;2040:21:11;;2030:7;;-1:-1:-1;2040:21:11;;2030:7;;-1:-1:-1;;;2030:7:11;;;;;;;;;-1:-1:-1;;;;;2030:31:11;;;:7;;;;;;;;;:31;2081:30;;2071:7;;2081:30;;;2071:4;;2081:30;;2071:7;;;;-1:-1:-1;;;2071:7:11;;;;;;;;;-1:-1:-1;;;;;2071:40:11;;;:7;;;;;;;;;;;:40;2129:4;-1:-1:-1;1892:248:11;:::o;3074:20:20:-;;;;;;;;;:::o;453:376:11:-;1409:13:2;;;;;;;;:30;;-1:-1:-1;1427:12:2;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:2;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;;;1581:20:2;;;;;1615:19;1597:4;1615:19;;;1547:98;651:10:11::1;:48:::0;;-1:-1:-1;;;;;651:48:11;;::::1;-1:-1:-1::0;;;;;;651:48:11;;::::1;;::::0;;;709:21:::1;:43:::0;;;;::::1;::::0;;::::1;;::::0;;762:30:::1;:60:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1667:66:2;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:2;;;1667:66;453:376:11;;;;:::o;2330:23:20:-;;;;:::o;2073:22::-;;;;;;;:::i;797:29::-;;;-1:-1:-1;;;;;797:29:20;;:::o;658:118:10:-;732:12;;:37;;-1:-1:-1;;;732:37:10;;706:7;;-1:-1:-1;;;;;732:12:10;;:22;;:37;;763:4;;732:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;725:44;;658:118;:::o;765:26:20:-;;;-1:-1:-1;;;;;765:26:20;;:::o;2685:28::-;;;;:::o;3127:21::-;;;;;;;;;:::o;1823:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:29:20;;;;-1:-1:-1;1823:29:20;:::o;1720:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2719:36::-;;;;:::o;1926:29::-;;;-1:-1:-1;;;;;1926:29:20;;:::o;2761:33::-;;;;:::o;614:132:12:-;660:5;677:14;694:9;;;;;;;;;-1:-1:-1;;;;;694:9:12;-1:-1:-1;;;;;694:18:12;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1747:41:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1747:41:20;:::o;2112:189:1:-;1462:12;:10;:12::i;:::-;-1:-1:-1;;;;;1451:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1451:23:1;;1443:68;;;;-1:-1:-1;;;1443:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2200:22:1;::::1;2192:73;;;;-1:-1:-1::0;;;2192:73:1::1;;;;;;;:::i;:::-;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2940:34:20:-;;;;:::o;782:100:10:-;862:12;;-1:-1:-1;;;;;862:12:10;782:100;:::o;2202:25:20:-;;;;:::o;1794:23::-;;;;;;;;;;;;823:96:3;902:10;823:96;:::o;2307:169:1:-;2381:6;;;-1:-1:-1;;;;;2397:17:1;;;-1:-1:-1;;;;;;2397:17:1;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2307:169;;:::o;14:175:41:-;84:20;;-1:-1:-1;;;;;133:31:41;;123:42;;113:2;;179:1;176;169:12;194:181;274:13;;327:22;316:34;;306:45;;296:2;;365:1;362;355:12;380:198;;492:2;480:9;471:7;467:23;463:32;460:2;;;513:6;505;498:22;460:2;541:31;562:9;541:31;:::i;:::-;531:41;450:128;-1:-1:-1;;;450:128:41:o;583:350::-;;;;729:2;717:9;708:7;704:23;700:32;697:2;;;750:6;742;735:22;697:2;778:31;799:9;778:31;:::i;:::-;768:41;;828:40;864:2;853:9;849:18;828:40;:::i;:::-;818:50;;887:40;923:2;912:9;908:18;887:40;:::i;:::-;877:50;;687:246;;;;;:::o;938:266::-;;;1067:2;1055:9;1046:7;1042:23;1038:32;1035:2;;;1088:6;1080;1073:22;1035:2;1116:31;1137:9;1116:31;:::i;:::-;1106:41;1194:2;1179:18;;;;1166:32;;-1:-1:-1;;;1025:179:41:o;1209:1148::-;;1335:2;1378;1366:9;1357:7;1353:23;1349:32;1346:2;;;1399:6;1391;1384:22;1346:2;1437:9;1431:16;1466:18;1507:2;1499:6;1496:14;1493:2;;;1528:6;1520;1513:22;1493:2;1571:6;1560:9;1556:22;1546:32;;1616:7;1609:4;1605:2;1601:13;1597:27;1587:2;;1643:6;1635;1628:22;1587:2;1677;1671:9;1699:2;1695;1692:10;1689:2;;;1705:18;;:::i;:::-;1752:2;1748;1744:11;1784:2;1778:9;1835:2;1830;1822:6;1818:15;1814:24;1888:6;1876:10;1873:22;1868:2;1856:10;1853:18;1850:46;1847:2;;;1899:18;;:::i;:::-;1935:2;1928:22;1985:18;;;2019:15;;;;-1:-1:-1;2054:11:41;;;2084;;;2080:20;;2077:33;-1:-1:-1;2074:2:41;;;2128:6;2120;2113:22;2074:2;2155:6;2146:15;;2170:156;2184:2;2181:1;2178:9;2170:156;;;2241:10;;2229:23;;2202:1;2195:9;;;;;2272:12;;;;2304;;2170:156;;;-1:-1:-1;2345:6:41;1315:1042;-1:-1:-1;;;;;;;;1315:1042:41:o;2362:190::-;;2474:2;2462:9;2453:7;2449:23;2445:32;2442:2;;;2495:6;2487;2480:22;2442:2;-1:-1:-1;2523:23:41;;2432:120;-1:-1:-1;2432:120:41:o;2557:194::-;;2680:2;2668:9;2659:7;2655:23;2651:32;2648:2;;;2701:6;2693;2686:22;2648:2;-1:-1:-1;2729:16:41;;2638:113;-1:-1:-1;2638:113:41:o;2756:487::-;;;;;;2944:3;2932:9;2923:7;2919:23;2915:33;2912:2;;;2966:6;2958;2951:22;2912:2;2994:41;3025:9;2994:41;:::i;:::-;2984:51;;3075:2;3064:9;3060:18;3054:25;3044:35;;3119:2;3108:9;3104:18;3098:25;3088:35;;3163:2;3152:9;3148:18;3142:25;3132:35;;3186:51;3232:3;3221:9;3217:19;3186:51;:::i;:::-;3176:61;;2902:341;;;;;;;;:::o;3248:293::-;;3369:2;3357:9;3348:7;3344:23;3340:32;3337:2;;;3390:6;3382;3375:22;3337:2;3427:9;3421:16;3477:4;3470:5;3466:16;3459:5;3456:27;3446:2;;3502:6;3494;3487:22;3546:469;;3643:5;3637:12;3670:6;3665:3;3658:19;3696:4;3725:2;3720:3;3716:12;3709:19;;3762:2;3755:5;3751:14;3783:3;3795:195;3809:6;3806:1;3803:13;3795:195;;;3874:13;;-1:-1:-1;;;;;3870:39:41;3858:52;;3930:12;;;;3965:15;;;;3906:1;3824:9;3795:195;;;-1:-1:-1;4006:3:41;;3613:402;-1:-1:-1;;;;;3613:402:41:o;4020:203::-;-1:-1:-1;;;;;4184:32:41;;;;4166:51;;4154:2;4139:18;;4121:102::o;4228:274::-;-1:-1:-1;;;;;4420:32:41;;;;4402:51;;4484:2;4469:18;;4462:34;4390:2;4375:18;;4357:145::o;4507:267::-;;4686:2;4675:9;4668:21;4706:62;4764:2;4753:9;4749:18;4741:6;4706:62;:::i;4779:187::-;4944:14;;4937:22;4919:41;;4907:2;4892:18;;4874:92::o;5652:603::-;;5793:2;5822;5811:9;5804:21;5854:6;5848:13;5897:6;5892:2;5881:9;5877:18;5870:34;5922:4;5935:140;5949:6;5946:1;5943:13;5935:140;;;6044:14;;;6040:23;;6034:30;6010:17;;;6029:2;6006:26;5999:66;5964:10;;5935:140;;;6093:6;6090:1;6087:13;6084:2;;;6163:4;6158:2;6149:6;6138:9;6134:22;6130:31;6123:45;6084:2;-1:-1:-1;6239:2:41;6218:15;-1:-1:-1;;6214:29:41;6199:45;;;;6246:2;6195:54;;5773:482;-1:-1:-1;;;5773:482:41:o;6260:402::-;6462:2;6444:21;;;6501:2;6481:18;;;6474:30;6540:34;6535:2;6520:18;;6513:62;-1:-1:-1;;;6606:2:41;6591:18;;6584:36;6652:3;6637:19;;6434:228::o;6667:410::-;6869:2;6851:21;;;6908:2;6888:18;;;6881:30;6947:34;6942:2;6927:18;;6920:62;-1:-1:-1;;;7013:2:41;6998:18;;6991:44;7067:3;7052:19;;6841:236::o;7082:356::-;7284:2;7266:21;;;7303:18;;;7296:30;7362:34;7357:2;7342:18;;7335:62;7429:2;7414:18;;7256:182::o;7443:177::-;7589:25;;;7577:2;7562:18;;7544:76::o;7625:338::-;;7832:6;7821:9;7814:25;7875:2;7870;7859:9;7855:18;7848:30;7895:62;7953:2;7942:9;7938:18;7930:6;7895:62;:::i;:::-;7887:70;7804:159;-1:-1:-1;;;;7804:159:41:o;7968:248::-;8142:25;;;8198:2;8183:18;;8176:34;8130:2;8115:18;;8097:119::o;8221:771::-;8580:25;;;8636:2;8621:18;;8614:34;;;;8679:2;8664:18;;8657:34;;;;8722:2;8707:18;;8700:34;;;;8765:3;8750:19;;8743:35;;;;8809:3;8794:19;;8787:35;8853:3;8838:19;;8831:35;8910:14;8903:22;8897:3;8882:19;;8875:51;8970:14;8963:22;8957:3;8942:19;;8935:51;8567:3;8552:19;;8534:458::o;8997:843::-;9384:25;;;9440:2;9425:18;;9418:34;;;;9483:2;9468:18;;9461:34;;;;9526:2;9511:18;;9504:34;;;;9569:3;9554:19;;9547:35;;;;9613:3;9598:19;;9591:35;9657:3;9642:19;;9635:35;9701:3;9686:19;;9679:35;9758:14;9751:22;9745:3;9730:19;;9723:51;9818:14;9811:22;9805:3;9790:19;;9783:51;9371:3;9356:19;;9338:502::o;9845:184::-;10017:4;10005:17;;;;9987:36;;9975:2;9960:18;;9942:87::o;10034:380::-;10119:1;10109:12;;10166:1;10156:12;;;10177:2;;10231:4;10223:6;10219:17;10209:27;;10177:2;10284;10276:6;10273:14;10253:18;10250:38;10247:2;;;10330:10;10325:3;10321:20;10318:1;10311:31;10365:4;10362:1;10355:15;10393:4;10390:1;10383:15;10247:2;;10089:325;;;:::o;10419:127::-;10480:10;10475:3;10471:20;10468:1;10461:31;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "959000",
        "executionCost": "994",
        "totalCost": "959994"
      },
      "external": {
        "__PriceConsumer_initialize(address)": "65397",
        "__WrappedTokenDistributor_initialize(address,address,address)": "infinite",
        "collaborativeRange()": "1161",
        "collaborativeReward()": "1116",
        "getDecimals()": "infinite",
        "getEstimatedWrappedTokenForUSD(uint256)": "infinite",
        "getLatestPrice()": "infinite",
        "getPathForUSDToWrappedToken()": "infinite",
        "getUSDBalance()": "infinite",
        "getUSDToken()": "1180",
        "getswapRouter()": "1227",
        "isActive()": "1142",
        "isAnEmergency()": "1086",
        "isDeleted()": "1206",
        "isEnhancedEnabled()": "1141",
        "isLocked()": "1163",
        "isMatured()": "1185",
        "launchDate()": "1160",
        "lockTime()": "1075",
        "lps()": "7758",
        "maturingPrice()": "1161",
        "maturityTime()": "1140",
        "minimumStakeAmount()": "1074",
        "oracleContract()": "1137",
        "oracleDecimal()": "296",
        "owner()": "1159",
        "poolCreator()": "1181",
        "poolType()": "infinite",
        "potentialCollabReward()": "1117",
        "predictions(address,uint256)": "8142",
        "prizeAmount()": "1140",
        "prizeRewardRates(uint256)": "2890",
        "renounceOwnership()": "23575",
        "rewardManager()": "1139",
        "sizeAllocation()": "1162",
        "sizeLimitRangeRate()": "361",
        "sortedStakers(uint256)": "2936",
        "stakeApr()": "1184",
        "stakeTaxRate()": "1184",
        "stakers(uint256)": "3045",
        "stakingPoolImplementation()": "1205",
        "totalStaked()": "1184",
        "totemToken()": "1181",
        "transferOwnership(address)": "23768",
        "upgradeEnabled()": "1118",
        "usdPrizeAmount()": "1118",
        "wrappedToken()": "1225",
        "wrappedTokenSymbol()": "infinite"
      }
    },
    "methodIdentifiers": {
      "__PriceConsumer_initialize(address)": "37c4f6a4",
      "__WrappedTokenDistributor_initialize(address,address,address)": "a8f7b346",
      "collaborativeRange()": "eb850ae1",
      "collaborativeReward()": "f3d9dc0d",
      "getDecimals()": "f0141d84",
      "getEstimatedWrappedTokenForUSD(uint256)": "3fcdd82c",
      "getLatestPrice()": "8e15f473",
      "getPathForUSDToWrappedToken()": "a35ef3a7",
      "getUSDBalance()": "c1201054",
      "getUSDToken()": "f5e96fc9",
      "getswapRouter()": "2e577d07",
      "isActive()": "22f3e2d4",
      "isAnEmergency()": "a08b2c79",
      "isDeleted()": "d7efb6b7",
      "isEnhancedEnabled()": "4bc4eeb2",
      "isLocked()": "a4e2d634",
      "isMatured()": "7f2b6a0d",
      "launchDate()": "f8eeed62",
      "lockTime()": "0d668087",
      "lps()": "e0818669",
      "maturingPrice()": "d025188b",
      "maturityTime()": "4e8bfdaa",
      "minimumStakeAmount()": "6b036f45",
      "oracleContract()": "bece7532",
      "oracleDecimal()": "a150194b",
      "owner()": "8da5cb5b",
      "poolCreator()": "c6c1decd",
      "poolType()": "b1dd61b6",
      "potentialCollabReward()": "e425df8c",
      "predictions(address,uint256)": "850fa7cb",
      "prizeAmount()": "785fa627",
      "prizeRewardRates(uint256)": "f1b17a8b",
      "renounceOwnership()": "715018a6",
      "rewardManager()": "0f4ef8a6",
      "sizeAllocation()": "51eacbf0",
      "sizeLimitRangeRate()": "95c2ba47",
      "sortedStakers(uint256)": "de09ee20",
      "stakeApr()": "aa7bcb57",
      "stakeTaxRate()": "6847d0c5",
      "stakers(uint256)": "fd5e6dd1",
      "stakingPoolImplementation()": "2aa8195e",
      "totalStaked()": "817b1cd2",
      "totemToken()": "e8153c93",
      "transferOwnership(address)": "f2fde38b",
      "upgradeEnabled()": "8cf0e21e",
      "usdPrizeAmount()": "73f31703",
      "wrappedToken()": "996c6cc3",
      "wrappedTokenSymbol()": "238a6c74"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApproveTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributedBTC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"__PriceConsumer_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"BUSDContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WrappedTokenContractAddress\",\"type\":\"address\"}],\"name\":\"__WrappedTokenDistributor_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getEstimatedWrappedTokenForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPathForUSDToWrappedToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAnEmergency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnhancedEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMatured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"launchDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdPrizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeApr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collaborativeReward\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEnhancedEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMatured\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialCollabReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithdrawalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizeRewardWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"didUnstake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract IRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeLimitRangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedStakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeApr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totemToken\",\"outputs\":[{\"internalType\":\"contract ITotemToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedTokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__PriceConsumer_initialize(address)\":{\"params\":{\"_oracle\":\"The chainlink node oracle address to send requests\"}},\"getEstimatedWrappedTokenForUSD(uint256)\":{\"params\":{\"_amount\":\"Amount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"upgradeEnabled\":{\"details\":\"StakingPoolImplementation can't be upgraded unless superAdmin sets this flag.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collaborativeReward()\":{\"notice\":\"Based on the white paper, the collaborative reward can be 20% (2000), 25% (2500) or 35% (3500).\"},\"getDecimals()\":{\"notice\":\"Returns decimals for oracle contract\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price from oracle contract\"},\"usdPrizeAmount()\":{\"notice\":\"usdPrizeAmount is the enabler of WrappedToken rewarder; If it is set to 0  then the pool is only TOTM rewarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/StakingPoolStorageStructure.sol\":\"StakingPoolStorageStructure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\"},\"contracts/Distribution/USDRetriever.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract USDRetriever {\\n    IERC20 internal USDCContract;\\n\\n    event ReceivedTokens(address indexed from, uint256 amount);\\n    event TransferTokens(address indexed to, uint256 amount);\\n    event ApproveTokens(address indexed to, uint256 amount);\\n\\n    function setUSDToken(address _usdContractAddress) internal {\\n        USDCContract = IERC20(_usdContractAddress);\\n    }\\n\\n    function approveTokens(address _to, uint256 _amount) internal {\\n        USDCContract.approve(_to, _amount);\\n        emit ApproveTokens(_to, _amount);\\n    }\\n\\n    function getUSDBalance() external view returns (uint256) {\\n        return USDCContract.balanceOf(address(this));\\n    }\\n\\n    function getUSDToken() external view returns (address) {\\n        return address(USDCContract);\\n    }\\n}\\n\",\"keccak256\":\"0xf8ce825a5e793fc484345dc3f0a6740a30789f5350e78e88ec8299a37b5f6e29\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/WrappedTokenDistributorUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"../interfaces/IPancakeRouter.sol\\\";\\n\\ncontract WrappedTokenDistributorUpgradeable is Initializable{\\n    IPancakeRouter02 internal swapRouter;\\n    address internal BUSD_CONTRACT_ADDRESS;\\n    address internal WRAPPED_Token_CONTRACT_ADDRESS;\\n\\n    event DistributedBTC(address indexed to, uint256 amount);\\n\\n    function __WrappedTokenDistributor_initialize(\\n        address swapRouterAddress,\\n        address BUSDContractAddress,\\n        address WrappedTokenContractAddress\\n    ) public initializer {\\n        swapRouter = IPancakeRouter02(swapRouterAddress);\\n        BUSD_CONTRACT_ADDRESS = BUSDContractAddress;\\n        WRAPPED_Token_CONTRACT_ADDRESS = WrappedTokenContractAddress;\\n    }\\n\\n    /**\\n     * @param _to Reciever address\\n     * @param _usdAmount USD Amount\\n     * @param _wrappedTokenAmount Wrapped Token Amount\\n     */\\n    function transferTokensThroughSwap(\\n        address _to,\\n        uint256 _usdAmount,\\n        uint256 _wrappedTokenAmount,\\n        uint256 _deadline\\n    ) internal {\\n        require(_to != address(0));\\n        // Get max USD price we can spend for this amount.\\n        swapRouter.swapExactTokensForTokens(\\n            _usdAmount,\\n            _wrappedTokenAmount,\\n            getPathForUSDToWrappedToken(),\\n            _to,\\n            _deadline\\n        );\\n    }\\n\\n    /**\\n     * @param _amount Amount\\n     */\\n    function getEstimatedWrappedTokenForUSD(uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256[] memory wrappedTokenAmount =\\n            swapRouter.getAmountsOut(_amount, getPathForUSDToWrappedToken());\\n        // since in the path the wrappedToken is the second one, so we should retuen the second one also here    \\n        return wrappedTokenAmount[1];\\n    }\\n\\n    function getPathForUSDToWrappedToken() public view returns (address[] memory) {\\n        address[] memory path = new address[](2);\\n        path[0] = BUSD_CONTRACT_ADDRESS;\\n        path[1] = WRAPPED_Token_CONTRACT_ADDRESS;\\n\\n        return path;\\n    }\\n\\n    // the function should be rename to getSwapRouter\\n    function getswapRouter() public view returns (address) {\\n        return address(swapRouter);\\n    }\\n}\\n\",\"keccak256\":\"0x42e153750df685de4b049d47eabd1509a5f80371ec82b8e4c5091614b433344b\",\"license\":\"UNLICENSED\"},\"contracts/Price/PriceConsumerUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract PriceConsumerUpgradeable is Initializable {\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * @param _oracle The chainlink node oracle address to send requests\\n    */\\n    function __PriceConsumer_initialize(address _oracle) public initializer {\\n        priceFeed = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * @notice Returns decimals for oracle contract\\n    */\\n    function getDecimals() external view returns (uint8) {\\n        uint8 decimals = priceFeed.decimals();\\n        return decimals;\\n    }\\n\\n    /**\\n     * @notice Returns the latest price from oracle contract\\n    */\\n    function getLatestPrice() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return price >= 0 ? uint256(price) : 0;\\n    }\\n}\\n\",\"keccak256\":\"0x9775a722a16c168720b5f8480797739dd78055a664e517620ee454cd6d8642b8\",\"license\":\"UNLICENSED\"},\"contracts/Staking/StakingPoolStorageStructure.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\nimport \\\"../Distribution/USDRetriever.sol\\\";\\nimport \\\"../Price/PriceConsumerUpgradeable.sol\\\";\\nimport \\\"../Distribution/WrappedTokenDistributorUpgradeable.sol\\\";\\n\\nimport \\\"../libraries/BasisPoints.sol\\\";\\nimport \\\"../libraries/CalculateRewardLib.sol\\\";\\nimport \\\"../libraries/IndexedClaimRewardLib.sol\\\";\\nimport \\\"../libraries/ClaimRewardLib.sol\\\";\\n\\nimport \\\"../interfaces/ITotemToken.sol\\\";\\nimport \\\"../interfaces/IRewardManager.sol\\\";\\n\\ncontract StakingPoolStorageStructure is \\n    OwnableUpgradeable,  \\n    PriceConsumerUpgradeable,\\n    USDRetriever,\\n    WrappedTokenDistributorUpgradeable\\n{\\n    address public stakingPoolImplementation;\\n    address public poolCreator;\\n    address public oracleContract;\\n\\n    /**\\n     * @notice Declared for passing the needed params to libraries.\\n     */\\n    struct LibParams {\\n        uint256 launchDate;\\n        uint256 lockTime;\\n        uint256 maturityTime;\\n        uint256 maturingPrice;\\n        uint256 usdPrizeAmount;\\n        uint256 prizeAmount;\\n        uint256 stakeApr;\\n        uint256 collaborativeReward;\\n        bool isEnhancedEnabled;\\n        bool isMatured;\\n    }\\n\\n    struct StakeWithPrediction {\\n        uint256 stakedBalance;\\n        uint256 stakedTime;\\n        uint256 amountWithdrawn;\\n        uint256 lastWithdrawalTime;\\n        uint256 pricePrediction;\\n        uint256 difference;\\n        uint256 rank;\\n        bool prizeRewardWithdrawn;\\n        bool didUnstake;\\n    }\\n\\n    struct Staker {\\n        address stakerAddress;\\n        uint256 index;\\n    }\\n\\n    struct PrizeRewardRate {\\n        uint256 rank;\\n        uint256 percentage;\\n    }\\n\\n    LibParams public lps;\\n\\n    PrizeRewardRate[] public prizeRewardRates;\\n    Staker[] public stakers;\\n    Staker[] public sortedStakers;\\n\\n    mapping(address => StakeWithPrediction[]) public predictions;\\n\\n    ITotemToken public totemToken;\\n    IRewardManager public rewardManager;\\n    IERC20 public wrappedToken;\\n\\n    string public wrappedTokenSymbol;\\n    string public poolType;\\n\\n    uint256 public constant sizeLimitRangeRate = 5;\\n    uint256 public constant oracleDecimal = 8;\\n\\n    uint256 public launchDate;\\n    uint256 public lockTime;\\n    uint256 public maturityTime;\\n    uint256 public sizeAllocation;\\n    uint256 public stakeApr;\\n    uint256 public prizeAmount;\\n    /**\\n     * @notice usdPrizeAmount is the enabler of WrappedToken rewarder; If it is set to 0 \\n            then the pool is only TOTM rewarder.\\n     */\\n    uint256 public usdPrizeAmount;\\n    uint256 public stakeTaxRate;\\n    uint256 public minimumStakeAmount;\\n    uint256 public totalStaked;\\n    uint256 public maturingPrice;\\n    uint256 public potentialCollabReward;\\n    uint256 public collaborativeRange;\\n    /**\\n     * @notice Based on the white paper, the collaborative reward can be 20% (2000),\\n             25% (2500) or 35% (3500).\\n     */\\n    uint256 public collaborativeReward; \\n\\n    bool public isAnEmergency;\\n    bool public isEnhancedEnabled;\\n    bool public isActive;\\n    bool public isLocked;\\n    bool public isMatured;\\n    bool public isDeleted;\\n    /**\\n     * @dev StakingPoolImplementation can't be upgraded unless superAdmin sets this flag.\\n     */\\n    bool public upgradeEnabled;\\n}\\n\",\"keccak256\":\"0xdfdb9c2bfa497dfc55fd6f39bf684769e6ca9901b104f9eac0c54a7a8f7bc71a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IPancakeRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n}\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x40ff7201ca90e848ee6f006c4d114891619f28c21e713d74dc62b1ffc48d0461\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IRewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IRewardManager {\\n\\n    function setOperator(address _newOperator) external;\\n\\n    function addPool(address _poolAddress) external;\\n\\n    function rewardUser(address _user, uint256 _amount) external;\\n\\n    event SetOperator(address operator);\\n    event SetRewarder(address rewarder);\\n\\n}\",\"keccak256\":\"0xab39a767c897abdfa93b0a33593cd3c179fd5222f2a37de798d298ccf66e5adb\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ITotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface ITotemToken {\\n    \\n    function setLocker(address _locker) external;\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) external;\\n\\n    function distributeTokens() external;\\n\\n    function setTaxRate(uint256 newTaxRate) external;\\n\\n    function setTaxExemptStatus(address account, bool status) external;\\n\\n    function setTaxationWallet(address newTaxationWallet) external;\\n\\n\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function taxRate() external returns (uint256);\\n\\n    function taxationWallet() external returns (address);\\n\\n    function taxExempt(address _msgSender) external returns (bool);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1ba963229ac039a0550990884eb976a06fb2fe7691848ff27af1c14574346531\",\"license\":\"UNLICENSED\"},\"contracts/libraries/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0xcbe25ead953d92501d8fc100fbc9d1c5d3885b6360b3619309063fdd3b874a31\",\"license\":\"UNLICENSED\"},\"contracts/libraries/CalculateRewardLib.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"../libraries/BasisPoints.sol\\\";\\nimport \\\"../Staking/StakingPoolStorageStructure.sol\\\";\\n\\nlibrary CalculateRewardLib {\\n\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    uint256 public constant oracleDecimal = 8;\\n\\n    function getTotalStakedBalance(StakingPoolStorageStructure.StakeWithPrediction[] storage _staker)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        if (_staker.length == 0) return 0;\\n\\n        uint256 totalStakedBalance = 0;\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            if (!_staker[i].didUnstake) {\\n                totalStakedBalance = totalStakedBalance.add(\\n                    _staker[i].stakedBalance\\n                );\\n            }\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    /**\\n     * @notice the reward formula is:\\n          ((1 + stakeAPR +enhancedReward)^((MaturingDate - StakingDate)/365) - 1) * StakingBalance\\n    */\\n    function _getStakingRewardPerStake(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex,\\n        StakingPoolStorageStructure.LibParams storage _lps\\n    )\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 maturityDate = \\n            _lps.launchDate + \\n            _lps.lockTime + \\n            _lps.maturityTime;\\n\\n        uint256 timeTo =\\n            block.timestamp > maturityDate ? maturityDate : block.timestamp;\\n\\n        uint256 enhancedApr;\\n        if ( _lps.isEnhancedEnabled ) {\\n            enhancedApr = _getEnhancedRewardRate(\\n                _staker[_stakeIndex].stakedTime,\\n                _lps\\n            );\\n        }\\n\\n        uint256 rewardPerStake = _calcStakingReturn(\\n            _lps.stakeApr.add(enhancedApr),\\n            timeTo.sub(_staker[_stakeIndex].stakedTime),\\n            _staker[_stakeIndex].stakedBalance\\n        );\\n\\n        rewardPerStake = rewardPerStake.sub(_staker[_stakeIndex].amountWithdrawn);\\n\\n        return rewardPerStake;\\n    }\\n\\n    function _getEnhancedRewardRate(\\n        uint256 stakedTime,\\n        StakingPoolStorageStructure.LibParams storage _lps\\n    )\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n\\n        if (!_lps.isEnhancedEnabled) {\\n            return 0;\\n        }\\n\\n        uint256 lockDate = _lps.launchDate.add(_lps.lockTime);\\n        uint256 difference = lockDate.sub(stakedTime);\\n\\n        if (difference < 48 hours) {\\n            return 0;\\n        } else if (difference < 72 hours) {\\n            return 100;\\n        } else if (difference < 96 hours) {\\n            return 200;\\n        } else if (difference < 120 hours) {\\n            return 300;\\n        } else if (difference < 144 hours) {\\n            return 400;\\n        } else {\\n            return 500;\\n        }\\n    }\\n\\n    function _calcStakingReturn(uint256 totalRewardRate, uint256 timeDuration, uint256 totalStakedBalance) \\n        internal \\n        pure\\n        returns (uint256) \\n    {\\n        uint256 yearInSeconds = 365 days;\\n\\n        uint256 first = (yearInSeconds**2)\\n            .mul(10**8);\\n\\n        uint256 second = timeDuration\\n            .mul(totalRewardRate) \\n            .mul(yearInSeconds)\\n            .mul(5000);\\n        \\n        uint256 third = totalRewardRate\\n            .mul(yearInSeconds**2)\\n            .mul(5000);\\n\\n        uint256 forth = (timeDuration**2)\\n            .mul(totalRewardRate**2)\\n            .div(6);\\n\\n        uint256 fifth = timeDuration\\n            .mul(totalRewardRate**2)\\n            .mul(yearInSeconds)\\n            .div(2);\\n\\n        uint256 sixth = (totalRewardRate**2)\\n            .mul(yearInSeconds**2)\\n            .div(3);\\n \\n        uint256 rewardPerStake = first.add(second).add(forth).add(sixth);\\n\\n        rewardPerStake = rewardPerStake.sub(third).sub(fifth);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalRewardRate)\\n            .mul(timeDuration);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalStakedBalance)\\n            .div(yearInSeconds**3)\\n            .div(10**12);\\n\\n        return rewardPerStake; \\n    }\\n\\n    function _getPercentageReward(\\n        uint256 _rank, \\n        StakingPoolStorageStructure.PrizeRewardRate[] storage _prizeRewardRates\\n    )\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        for (uint256 i = 0; i < _prizeRewardRates.length; i++) {\\n            if (_rank <= _prizeRewardRates[i].rank) {\\n                return _prizeRewardRates[i].percentage;\\n            }\\n        }\\n\\n        return 0;\\n    }        \\n\\n\\n\\n}\",\"keccak256\":\"0xb36457e2da467488583be3093c215fc5c318981de43b77afd7c0c03716ae3b3b\",\"license\":\"UNLICENSED\"},\"contracts/libraries/ClaimRewardLib.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"./CalculateRewardLib.sol\\\";\\nimport \\\"../libraries/BasisPoints.sol\\\";\\nimport \\\"../Staking/StakingPoolStorageStructure.sol\\\";\\n\\nlibrary ClaimRewardLib {\\n\\n    using CalculateRewardLib for *;\\n    using BasisPoints for uint256; \\n    using SafeMath for uint256;\\n\\n    uint256 public constant oracleDecimal = 8;\\n\\n    function withdrawStakingReturn(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker,\\n        StakingPoolStorageStructure.LibParams storage _lps\\n    )\\n        public \\n    {\\n        \\n        if (_staker.length == 0) return;\\n\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            uint256 rewardPerStake = CalculateRewardLib._getStakingRewardPerStake(\\n                _staker, \\n                i, \\n                _lps);\\n\\n            _staker[i].lastWithdrawalTime = block.timestamp;\\n            _staker[i].amountWithdrawn = _staker[i].amountWithdrawn.add(\\n                rewardPerStake\\n            );\\n        }\\n    }\\n\\n    function withdrawPrize(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker\\n    ) \\n        public\\n    {\\n        if (_staker.length == 0) return;\\n\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            _staker[i].prizeRewardWithdrawn = true;\\n        }\\n    }\\n\\n    function withdrawStakedBalance(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker\\n    )\\n        public \\n    {\\n        \\n        if (_staker.length == 0) return;\\n\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            _staker[i].didUnstake = true;\\n        }\\n    }\\n\\n    function getStakingReturn(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker,\\n        StakingPoolStorageStructure.LibParams storage _lps  \\n    ) \\n        public \\n        view \\n        returns (uint256) \\n    {\\n        if (_staker.length == 0) return 0;\\n\\n        uint256 reward = 0;\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            uint256 rewardPerStake = CalculateRewardLib._getStakingRewardPerStake(\\n                _staker,\\n                i, \\n                _lps\\n            );\\n\\n            reward = reward.add(rewardPerStake);\\n        }\\n\\n        return reward;\\n    }\\n\\n    function getPrize(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        StakingPoolStorageStructure.LibParams storage _lps,\\n        StakingPoolStorageStructure.PrizeRewardRate[] storage _prizeRewardRates\\n    )\\n        public\\n        view\\n        returns (uint256, uint256)\\n    {\\n        if (!_lps.isMatured) return (0, 0);\\n\\n        if (_staker.length == 0) return (0, 0);\\n\\n        uint256 maturingWrappedTokenPrizeAmount =\\n            (_lps.usdPrizeAmount.mul(10**oracleDecimal)).div(_lps.maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 wrappedTokenReward = 0;\\n\\n        for (uint256 i = 0; i < _staker.length; i++) {\\n            if (!_staker[i].prizeRewardWithdrawn) {\\n\\n                uint256 _percent = CalculateRewardLib._getPercentageReward(\\n                    _staker[i].rank,\\n                    _prizeRewardRates\\n                );\\n\\n                reward = reward.add(\\n                            _lps.prizeAmount.mulBP(_percent)\\n                        );\\n\\n                wrappedTokenReward = wrappedTokenReward.add(\\n                            maturingWrappedTokenPrizeAmount\\n                                .mulBP(_percent)\\n                        );        \\n            }\\n        }\\n\\n        if (_lps.collaborativeReward > 0) {\\n            reward = reward.addBP(_lps.collaborativeReward);\\n            wrappedTokenReward = wrappedTokenReward.addBP(_lps.collaborativeReward);\\n        }\\n\\n        return (reward, wrappedTokenReward);\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0xc57a6bd1fce9f48bf3a62b555acfec1b1a7ddba984dd534da4bf75fabb8b9a93\",\"license\":\"UNLICENSED\"},\"contracts/libraries/IndexedClaimRewardLib.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport \\\"./CalculateRewardLib.sol\\\";\\nimport \\\"../libraries/BasisPoints.sol\\\";\\nimport \\\"../Staking/StakingPoolStorageStructure.sol\\\";\\n\\nlibrary IndexedClaimRewardLib {\\n\\n    using CalculateRewardLib for *;\\n    using BasisPoints for uint256; \\n    using SafeMath for uint256;\\n\\n    uint256 public constant oracleDecimal = 8;\\n\\n    function withdrawIndexedStakingReturn(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex,\\n        StakingPoolStorageStructure.LibParams storage _lps\\n    ) \\n        public\\n    {\\n        if (_staker.length == 0) return;\\n        if (_stakeIndex >= _staker.length) return;\\n\\n        uint256 rewardPerStake = CalculateRewardLib._getStakingRewardPerStake(\\n            _staker, \\n            _stakeIndex,\\n            _lps\\n        );\\n\\n        _staker[_stakeIndex].lastWithdrawalTime = block.timestamp;\\n        _staker[_stakeIndex].amountWithdrawn = _staker[_stakeIndex].amountWithdrawn.add(\\n            rewardPerStake\\n        );\\n    }\\n\\n    function withdrawIndexedPrize(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex\\n    ) \\n        public \\n    {\\n        if (_staker.length == 0) return;\\n        if (_staker[_stakeIndex].prizeRewardWithdrawn) return;\\n\\n        _staker[_stakeIndex].prizeRewardWithdrawn = true;\\n    }\\n\\n    function withdrawIndexedStakedBalance(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex\\n    ) \\n        public\\n    {\\n        if (_staker.length == 0) return;\\n        if (_stakeIndex >= _staker.length) return;\\n\\n        _staker[_stakeIndex].didUnstake = true;\\n    }\\n\\n    function getIndexedStakedBalance(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex\\n    )\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        if (_staker.length == 0) return 0;\\n        if (_stakeIndex >= _staker.length) return 0; \\n\\n        uint256 totalStakedBalance = 0;\\n\\n        if (!_staker[_stakeIndex].didUnstake) {\\n            totalStakedBalance = totalStakedBalance.add(\\n                _staker[_stakeIndex].stakedBalance\\n            );\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    function getIndexedStakingReturn(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex,\\n        StakingPoolStorageStructure.LibParams storage _lps\\n    ) \\n        public\\n        view \\n        returns (uint256) \\n    {\\n        if (_staker.length == 0) return 0;\\n        if (_stakeIndex >= _staker.length) return 0;\\n\\n        uint256 reward = 0;\\n        \\n        uint256 rewardPerStake = CalculateRewardLib._getStakingRewardPerStake(\\n            _staker, \\n            _stakeIndex,\\n            _lps\\n        );\\n        reward = reward.add(rewardPerStake);\\n\\n        return reward;\\n    }\\n\\n    function getIndexedPrize(\\n        StakingPoolStorageStructure.StakeWithPrediction[] storage _staker, \\n        uint256 _stakeIndex,\\n        StakingPoolStorageStructure.LibParams storage _lps,\\n        StakingPoolStorageStructure.PrizeRewardRate[] storage _prizeRewardRates\\n    )\\n        public\\n        view\\n        returns (uint256, uint256)\\n    {\\n        if (!_lps.isMatured) return (0, 0);\\n\\n        if (_staker.length == 0) return (0, 0);\\n\\n        if (_stakeIndex >= _staker.length) return (0,0);\\n\\n        if (_staker[_stakeIndex].prizeRewardWithdrawn) return (0, 0);\\n\\n        uint256 maturingWrappedTokenPrizeAmount =\\n            (_lps.usdPrizeAmount.mul(10**oracleDecimal)).div(_lps.maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 wrappedTokenReward = 0;\\n\\n        uint256 _percent = CalculateRewardLib._getPercentageReward(\\n            _staker[_stakeIndex].rank,\\n            _prizeRewardRates\\n        );\\n\\n        reward = reward.add(\\n                        _lps.prizeAmount.mulBP(_percent)\\n                    );\\n\\n        wrappedTokenReward = wrappedTokenReward.add(\\n                        maturingWrappedTokenPrizeAmount\\n                            .mulBP(_percent)\\n                    );            \\n\\n        if (_lps.collaborativeReward > 0) {\\n            reward = reward.addBP(_lps.collaborativeReward);\\n            wrappedTokenReward = wrappedTokenReward.addBP(_lps.collaborativeReward);\\n        }\\n\\n        return (reward, wrappedTokenReward);\\n    }\\n}\\n\\n\",\"keccak256\":\"0x5c150375f4c5381c70540c62529dfde8cc15e3bffd033458837c8ba463aab7e7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 176,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 179,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 259,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 56,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 169,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1585,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "priceFeed",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1353,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "USDCContract",
        "offset": 0,
        "slot": "102",
        "type": "t_contract(IERC20)988"
      },
      {
        "astId": 1438,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "swapRouter",
        "offset": 0,
        "slot": "103",
        "type": "t_contract(IPancakeRouter02)7031"
      },
      {
        "astId": 1440,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "BUSD_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 1442,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "WRAPPED_Token_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 4405,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "stakingPoolImplementation",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 4407,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "poolCreator",
        "offset": 0,
        "slot": "107",
        "type": "t_address"
      },
      {
        "astId": 4409,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "oracleContract",
        "offset": 0,
        "slot": "108",
        "type": "t_address"
      },
      {
        "astId": 4462,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "lps",
        "offset": 0,
        "slot": "109",
        "type": "t_struct(LibParams)4430_storage"
      },
      {
        "astId": 4466,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "prizeRewardRates",
        "offset": 0,
        "slot": "118",
        "type": "t_array(t_struct(PrizeRewardRate)4459_storage)dyn_storage"
      },
      {
        "astId": 4470,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "stakers",
        "offset": 0,
        "slot": "119",
        "type": "t_array(t_struct(Staker)4454_storage)dyn_storage"
      },
      {
        "astId": 4474,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "sortedStakers",
        "offset": 0,
        "slot": "120",
        "type": "t_array(t_struct(Staker)4454_storage)dyn_storage"
      },
      {
        "astId": 4480,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "predictions",
        "offset": 0,
        "slot": "121",
        "type": "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)4449_storage)dyn_storage)"
      },
      {
        "astId": 4483,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "totemToken",
        "offset": 0,
        "slot": "122",
        "type": "t_contract(ITotemToken)7152"
      },
      {
        "astId": 4486,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "rewardManager",
        "offset": 0,
        "slot": "123",
        "type": "t_contract(IRewardManager)7059"
      },
      {
        "astId": 4489,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "wrappedToken",
        "offset": 0,
        "slot": "124",
        "type": "t_contract(IERC20)988"
      },
      {
        "astId": 4491,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "wrappedTokenSymbol",
        "offset": 0,
        "slot": "125",
        "type": "t_string_storage"
      },
      {
        "astId": 4493,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "poolType",
        "offset": 0,
        "slot": "126",
        "type": "t_string_storage"
      },
      {
        "astId": 4501,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "launchDate",
        "offset": 0,
        "slot": "127",
        "type": "t_uint256"
      },
      {
        "astId": 4503,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "lockTime",
        "offset": 0,
        "slot": "128",
        "type": "t_uint256"
      },
      {
        "astId": 4505,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "maturityTime",
        "offset": 0,
        "slot": "129",
        "type": "t_uint256"
      },
      {
        "astId": 4507,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "sizeAllocation",
        "offset": 0,
        "slot": "130",
        "type": "t_uint256"
      },
      {
        "astId": 4509,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "stakeApr",
        "offset": 0,
        "slot": "131",
        "type": "t_uint256"
      },
      {
        "astId": 4511,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "prizeAmount",
        "offset": 0,
        "slot": "132",
        "type": "t_uint256"
      },
      {
        "astId": 4514,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "usdPrizeAmount",
        "offset": 0,
        "slot": "133",
        "type": "t_uint256"
      },
      {
        "astId": 4516,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "stakeTaxRate",
        "offset": 0,
        "slot": "134",
        "type": "t_uint256"
      },
      {
        "astId": 4518,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "minimumStakeAmount",
        "offset": 0,
        "slot": "135",
        "type": "t_uint256"
      },
      {
        "astId": 4520,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "totalStaked",
        "offset": 0,
        "slot": "136",
        "type": "t_uint256"
      },
      {
        "astId": 4522,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "maturingPrice",
        "offset": 0,
        "slot": "137",
        "type": "t_uint256"
      },
      {
        "astId": 4524,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "potentialCollabReward",
        "offset": 0,
        "slot": "138",
        "type": "t_uint256"
      },
      {
        "astId": 4526,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "collaborativeRange",
        "offset": 0,
        "slot": "139",
        "type": "t_uint256"
      },
      {
        "astId": 4529,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "collaborativeReward",
        "offset": 0,
        "slot": "140",
        "type": "t_uint256"
      },
      {
        "astId": 4531,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isAnEmergency",
        "offset": 0,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4533,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isEnhancedEnabled",
        "offset": 1,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4535,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isActive",
        "offset": 2,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4537,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isLocked",
        "offset": 3,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4539,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isMatured",
        "offset": 4,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4541,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "isDeleted",
        "offset": 5,
        "slot": "141",
        "type": "t_bool"
      },
      {
        "astId": 4544,
        "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
        "label": "upgradeEnabled",
        "offset": 6,
        "slot": "141",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(PrizeRewardRate)4459_storage)dyn_storage": {
        "base": "t_struct(PrizeRewardRate)4459_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPoolStorageStructure.PrizeRewardRate[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StakeWithPrediction)4449_storage)dyn_storage": {
        "base": "t_struct(StakeWithPrediction)4449_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPoolStorageStructure.StakeWithPrediction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Staker)4454_storage)dyn_storage": {
        "base": "t_struct(Staker)4454_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPoolStorageStructure.Staker[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)988": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPancakeRouter02)7031": {
        "encoding": "inplace",
        "label": "contract IPancakeRouter02",
        "numberOfBytes": "20"
      },
      "t_contract(IRewardManager)7059": {
        "encoding": "inplace",
        "label": "contract IRewardManager",
        "numberOfBytes": "20"
      },
      "t_contract(ITotemToken)7152": {
        "encoding": "inplace",
        "label": "contract ITotemToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)4449_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolStorageStructure.StakeWithPrediction[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(StakeWithPrediction)4449_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(LibParams)4430_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolStorageStructure.LibParams",
        "members": [
          {
            "astId": 4411,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "launchDate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4413,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "lockTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4415,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "maturityTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4417,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "maturingPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4419,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "usdPrizeAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4421,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "prizeAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4423,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "stakeApr",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4425,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "collaborativeReward",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4427,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "isEnhancedEnabled",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 4429,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "isMatured",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(PrizeRewardRate)4459_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolStorageStructure.PrizeRewardRate",
        "members": [
          {
            "astId": 4456,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "rank",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4458,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "percentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StakeWithPrediction)4449_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolStorageStructure.StakeWithPrediction",
        "members": [
          {
            "astId": 4432,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "stakedBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4434,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "stakedTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4436,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4438,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "lastWithdrawalTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4440,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "pricePrediction",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4442,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "difference",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4444,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "rank",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4446,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "prizeRewardWithdrawn",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 4448,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "didUnstake",
            "offset": 1,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Staker)4454_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolStorageStructure.Staker",
        "members": [
          {
            "astId": 4451,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "stakerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4453,
            "contract": "contracts/Staking/StakingPoolStorageStructure.sol:StakingPoolStorageStructure",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "collaborativeReward()": {
        "notice": "Based on the white paper, the collaborative reward can be 20% (2000), 25% (2500) or 35% (3500)."
      },
      "getDecimals()": {
        "notice": "Returns decimals for oracle contract"
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price from oracle contract"
      },
      "usdPrizeAmount()": {
        "notice": "usdPrizeAmount is the enabler of WrappedToken rewarder; If it is set to 0  then the pool is only TOTM rewarder."
      }
    },
    "version": 1
  }
}