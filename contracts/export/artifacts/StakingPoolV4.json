{
    "contractName": "StakingPool",
    "sourceName": "contracts/Staking/StakingPool.sol",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_poolType",
            "type": "string"
          },
          {
            "internalType": "contract TotemToken",
            "name": "_totemToken",
            "type": "address"
          },
          {
            "internalType": "contract RewardManager",
            "name": "_rewardManager",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_poolCreator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_swapRouter",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_oracleContract",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_usdToken",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_btcToken",
            "type": "address"
          },
          {
            "internalType": "uint256[10]",
            "name": "_variables",
            "type": "uint256[10]"
          },
          {
            "internalType": "uint256[8]",
            "name": "_ranks",
            "type": "uint256[8]"
          },
          {
            "internalType": "uint256[8]",
            "name": "_percentages",
            "type": "uint256[8]"
          },
          {
            "internalType": "bool",
            "name": "_isEnhancedEnabled",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "ApproveTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "DistributedBTC",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "PoolDeleted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "PoolLocked",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "PoolMatured",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "PoolSorted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "ReceivedTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "pricePrediction",
            "type": "uint256"
          }
        ],
        "name": "Stake",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "TransferTokens",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "Unstake",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "btcAmount",
            "type": "uint256"
          }
        ],
        "name": "Withdraw",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "staker",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "_getIndexedStakingReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "staker",
            "type": "address"
          }
        ],
        "name": "_getStakingReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "btcToken",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "claimReward",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "collaborativeRange",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "collaborativeReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "declareEmergency",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "deletePool",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "emergentWithdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "endPool",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getAveragePricePrediction",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getBTCBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getDecimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "getEstimatedBTCForUSD",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "getIndexedPrizeReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "getIndexedReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "getIndexedStakedBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "getIndexedStakingReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getLatestPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getPathForUSDToBTC",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getPrizeReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getStakers",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "",
            "type": "uint256[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getStakingReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getTotalReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getTotalStakedBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getUSDBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getUSDToken",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getswapRouter",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "staker",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "hasUnStaked",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "stakeIndex",
            "type": "uint256"
          }
        ],
        "name": "indexedClaimReward",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isAnEmergency",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isDeleted",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isEnhancedEnabled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isLocked",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "isMatured",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "lockPool",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "lockTime",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "maturingPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "maturityTime",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "minimumStakeAmount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "oracleDecimal",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "poolCreator",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "poolType",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "potentialCollabReward",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "predictions",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "stakedBalance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stakedTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amountWithdrawn",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastWithdrawalTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "pricePrediction",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "difference",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "rank",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "prizeRewardWithdrawn",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "didUnstake",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "prizeAmount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "prizeRewardRates",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "rank",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "percentage",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "usdAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          }
        ],
        "name": "purchaseBTC",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "rewardManager",
        "outputs": [
          {
            "internalType": "contract RewardManager",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address[25]",
            "name": "addrArray",
            "type": "address[25]"
          },
          {
            "internalType": "uint256[25]",
            "name": "indexArray",
            "type": "uint256[25]"
          }
        ],
        "name": "setSortedStakers",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "sizeAllocation",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "sizeLimitRangeRate",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "sortedStakers",
        "outputs": [
          {
            "internalType": "address",
            "name": "stakerAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_pricePrediction",
            "type": "uint256"
          }
        ],
        "name": "stake",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakeApr",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "stakeTaxRate",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "stakers",
        "outputs": [
          {
            "internalType": "address",
            "name": "stakerAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "startDate",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalStaked",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totemToken",
        "outputs": [
          {
            "internalType": "contract TotemToken",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "updateMaturingPrice",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "usdPrizeAmount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_stuckToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          }
        ],
        "name": "withdrawStuckTokens",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "",
    "deployedBytecode": "",
    "linkReferences": {},
    "deployedLinkReferences": {},
    "devdoc": {
      "kind": "dev",
      "methods": {
        "getEstimatedBTCForUSD(uint256)": {
          "params": {
            "_amount": "Amount"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "evm": {
      "bytecode": {
        "generatedSources": [],
        "linkReferences": {},
        "opcodes": "PUSH2 0x260 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5104 CODESIZE SUB DUP1 PUSH3 0x5104 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x460 DUP2 LT ISZERO PUSH3 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x440 DUP9 ADD MLOAD SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 PUSH2 0x100 DUP2 ADD SWAP2 PUSH2 0x240 DUP3 ADD SWAP2 PUSH2 0x340 ADD SWAP1 DUP8 DUP7 DUP7 DUP10 PUSH1 0x0 PUSH3 0x144 PUSH3 0x375 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP6 DUP4 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE DUP12 MLOAD PUSH3 0x202 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP16 ADD SWAP1 PUSH3 0x39B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP13 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP12 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH3 0x245 DUP7 PUSH3 0x379 JUMP JUMPDEST PUSH1 0x60 DUP6 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0xE0 SWAP1 DUP2 MSTORE DUP7 MLOAD PUSH2 0x120 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x100 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP10 ADD MLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 MUL PUSH2 0x140 MSTORE SWAP5 DUP10 ADD MLOAD PUSH2 0x160 MSTORE PUSH1 0x80 DUP10 ADD MLOAD DUP6 MUL PUSH2 0x180 MSTORE PUSH1 0xA0 DUP10 ADD MLOAD DUP6 MUL PUSH2 0x1A0 MSTORE SWAP3 DUP9 ADD MLOAD PUSH2 0x200 MSTORE SWAP1 DUP8 ADD MLOAD PUSH2 0x220 MSTORE SWAP1 DUP7 ADD MLOAD PUSH2 0x1C0 MSTORE DUP6 ADD MLOAD MUL PUSH2 0x1E0 MSTORE DUP1 ISZERO ISZERO PUSH1 0xF8 SHL PUSH2 0x240 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH3 0x362 JUMPI DUP3 DUP2 PUSH1 0x8 DUP2 LT PUSH3 0x2E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH3 0x2F9 JUMPI PUSH3 0x362 JUMP JUMPDEST PUSH1 0xE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0x8 DUP2 LT PUSH3 0x313 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP5 PUSH1 0x8 DUP2 LT PUSH3 0x32A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH3 0x2D2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x447 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3D3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x41E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3EE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x41E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x41E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x41E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x401 JUMP JUMPDEST POP PUSH3 0x42C SWAP3 SWAP2 POP PUSH3 0x430 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x42C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x431 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH1 0xF8 SHR PUSH2 0x4B1D PUSH3 0x5E7 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1545 MSTORE DUP1 PUSH2 0x46C1 MSTORE POP DUP1 PUSH2 0xE4F MSTORE DUP1 PUSH2 0x3360 MSTORE POP DUP1 PUSH2 0xE19 MSTORE DUP1 PUSH2 0xE79 MSTORE DUP1 PUSH2 0x3318 MSTORE POP DUP1 PUSH2 0x1944 MSTORE DUP1 PUSH2 0x1BD7 MSTORE POP DUP1 PUSH2 0x1920 MSTORE DUP1 PUSH2 0x3980 MSTORE DUP1 PUSH2 0x39B0 MSTORE POP DUP1 PUSH2 0xD45 MSTORE DUP1 PUSH2 0x1A26 MSTORE DUP1 PUSH2 0x233F MSTORE DUP1 PUSH2 0x29DC MSTORE DUP1 PUSH2 0x2E93 MSTORE DUP1 PUSH2 0x3F70 MSTORE DUP1 PUSH2 0x45F8 MSTORE POP DUP1 PUSH2 0x1B5E MSTORE DUP1 PUSH2 0x3FF2 MSTORE DUP1 PUSH2 0x4641 MSTORE POP DUP1 PUSH2 0x2826 MSTORE DUP1 PUSH2 0x3787 MSTORE POP DUP1 PUSH2 0x158D MSTORE DUP1 PUSH2 0x1C40 MSTORE DUP1 PUSH2 0x1DB6 MSTORE DUP1 PUSH2 0x21BF MSTORE POP DUP1 PUSH2 0xCA2 MSTORE DUP1 PUSH2 0x1569 MSTORE DUP1 PUSH2 0x1870 MSTORE DUP1 PUSH2 0x373A MSTORE POP DUP1 PUSH2 0xBE8 MSTORE DUP1 PUSH2 0xCC3 MSTORE DUP1 PUSH2 0x1891 MSTORE DUP1 PUSH2 0x3718 MSTORE DUP1 PUSH2 0x4714 MSTORE POP DUP1 PUSH2 0xBC4 MSTORE DUP1 PUSH2 0xCE4 MSTORE DUP1 PUSH2 0x18B2 MSTORE DUP1 PUSH2 0x36F7 MSTORE DUP1 PUSH2 0x46F3 MSTORE POP DUP1 PUSH2 0xA1F MSTORE DUP1 PUSH2 0xFAA MSTORE DUP1 PUSH2 0x2A08 MSTORE DUP1 PUSH2 0x2EBF MSTORE POP DUP1 PUSH2 0xC0C MSTORE DUP1 PUSH2 0x2893 MSTORE DUP1 PUSH2 0x2922 MSTORE DUP1 PUSH2 0x2D4B MSTORE DUP1 PUSH2 0x2DDA MSTORE POP DUP1 PUSH2 0x1721 MSTORE DUP1 PUSH2 0x1C72 MSTORE DUP1 PUSH2 0x1D03 MSTORE DUP1 PUSH2 0x1E51 MSTORE DUP1 PUSH2 0x1F14 MSTORE DUP1 PUSH2 0x1F43 MSTORE DUP1 PUSH2 0x24FD MSTORE DUP1 PUSH2 0x2864 MSTORE DUP1 PUSH2 0x2B18 MSTORE DUP1 PUSH2 0x2D1C MSTORE DUP1 PUSH2 0x2FC8 MSTORE DUP1 PUSH2 0x333C MSTORE POP PUSH2 0x4B1D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFBBCBE GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xC6C1DECD GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xEDA2D424 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9C2 JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x9F8 JUMPI DUP1 PUSH4 0xFD8FD47F EQ PUSH2 0xA15 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xEDA2D424 EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xEEE39403 EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x9A5 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x90A JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x95A JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xD83DB49F EQ PUSH2 0x8ED JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xA4E2D634 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xB1DD61B6 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x8BD JUMPI DUP1 PUSH4 0xBF852196 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x8CD JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xA508BC71 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xB1B1E1C0 EQ PUSH2 0x823 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x95C2BA47 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0x9D9A62DF EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xA150194B EQ PUSH2 0x7B3 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76E JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x9234A39A EQ PUSH2 0x77E JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x305 JUMPI DUP1 PUSH4 0x765E14D8 GT PUSH2 0x298 JUMPI DUP1 PUSH4 0x7F2B6A0D GT PUSH2 0x267 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x857B21EE EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0x8A9920B7 EQ PUSH2 0x75E JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x765E14D8 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x668 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x7D1FCBFA EQ PUSH2 0x693 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x6847D0C5 GT PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x634 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x5B9F4F90 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x5E2E2FFC EQ PUSH2 0x614 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x31769EF7 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x444A4902 GT PUSH2 0x34C JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x5A8 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x31769EF7 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x31E244E5 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x49D JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xF4EF8A6 GT PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x1898A1A7 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x47D JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x74BC101 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x9082C29 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB97BC86 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x446 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x47B PUSH2 0xC47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xFA6 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x528 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x510 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x125C JUMP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x158B JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x191E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1942 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x69B PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0x225E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x226E JUMP JUMPDEST PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x22E2 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x248B JUMP JUMPDEST PUSH2 0x47B PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x69B PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x275A JUMP JUMPDEST PUSH2 0x58C PUSH2 0x2778 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x278D JUMP JUMPDEST PUSH2 0x7CB PUSH2 0x279D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x807 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7EF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x848 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x882 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x86A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8AF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x2D00 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x311B JUMP JUMPDEST PUSH2 0x42C PUSH2 0x325B JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x32A6 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x32B5 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0x3316 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x42C PUSH2 0x335E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3382 JUMP JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3399 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3430 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x345E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3572 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3597 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0xA60 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA9D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB7D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xBB1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 PUSH2 0xC3B PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC5B PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4987 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xD71 PUSH2 0xFA6 JUMP JUMPDEST PUSH2 0xDC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333631204254432052657761726473206E6F7420617661696C61626C650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0xE17 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE17 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 PUSH2 0xE47 PUSH2 0x311B JUMP JUMPDEST SWAP1 POP PUSH2 0xE73 DUP2 PUSH32 0x0 PUSH2 0x35A4 JUMP JUMPDEST PUSH2 0xE9C JUMPI PUSH32 0x0 PUSH1 0xC SSTORE JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xEB3 JUMPI PUSH1 0x9 SLOAD PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF47 JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x7 PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xED8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x9 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xF0F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF2B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xEBB JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA8 SHL OR AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x105A PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10C8 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1115 PUSH2 0x3612 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1162 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11AC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1221 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x123F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x11B2 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1270 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x1383 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x12CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x12F1 JUMPI PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x130A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x1332 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x12B8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13E4 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A5D PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x1511 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x151D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x1539 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x15E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x168E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x16BE JUMPI PUSH1 0x0 PUSH2 0x16A7 DUP7 DUP4 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP PUSH2 0x16B3 DUP4 DUP3 PUSH2 0x37E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1692 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16DA PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49D9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1829 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AB2 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1919 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x196E PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x197F PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x19DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A7B JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1B27 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x1B39 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B46 DUP7 DUP7 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B52 DUP3 DUP3 PUSH2 0x37E8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A88 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C6C PUSH1 0x64 PUSH2 0x1C66 PUSH32 0x0 PUSH1 0x5 PUSH2 0x3849 JUMP JUMPDEST SWAP1 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x1D30 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1DAC JUMPI PUSH2 0x1DA7 DUP6 DUP4 PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x1DDB PUSH32 0x0 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH2 0x1DFA DUP3 PUSH2 0x1DF4 DUP9 PUSH1 0xA SLOAD PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x391B JUMP JUMPDEST GT ISZERO PUSH2 0x1E37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49B3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E43 DUP7 DUP5 PUSH2 0x3978 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x1E7E PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP6 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0A SWAP1 POP DUP7 DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP6 POP DUP1 ISZERO PUSH2 0x2041 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x204E SWAP1 DUP8 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2069 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 PUSH2 0x2083 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x7 SWAP1 PUSH2 0x20E4 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH32 0x0 GT PUSH2 0x21EB JUMPI PUSH2 0x21EB PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x21F3 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2256 PUSH2 0x2251 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3A14 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22F6 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x233B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x239A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A3C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x23EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x243B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220646561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2445 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP PUSH2 0x2451 DUP2 DUP5 PUSH2 0x3A4B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP5 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2476 PUSH2 0x246F DUP4 PUSH2 0x12C PUSH2 0x3909 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0x2484 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x3B10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x69742773206E6F7420616E20656D657267656E6379 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH2 0x24EE PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3CA9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x25FF JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2532 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x258D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B6 SWAP1 POP PUSH2 0x25B1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3DE7 JUMP JUMPDEST PUSH2 0x25BE PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2616 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x265B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x270D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x273A JUMPI PUSH1 0x0 PUSH2 0x273C JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2256 PUSH2 0x2750 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x276E PUSH2 0x2768 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x4076 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x27DC JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2807 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2856 PUSH2 0x2768 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x29B7 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2903 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x29B7 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2957 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x29C8 PUSH2 0x29C2 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x40B0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C1D JUMPI PUSH32 0x0 ISZERO PUSH2 0x2AFB JUMPI DUP1 ISZERO PUSH2 0x2AEA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2A3D PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2AEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033333 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2AFB PUSH2 0x2AF5 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x416A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0E PUSH2 0x2B08 PUSH2 0x35A0 JUMP JUMPDEST DUP6 PUSH2 0x41F1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C1B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2B4D PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD2 SWAP1 POP PUSH2 0x2BCC PUSH2 0x35A0 JUMP JUMPDEST DUP6 PUSH2 0x4336 JUMP JUMPDEST PUSH2 0x2BDA PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x2C25 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2CF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CCD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D0E PUSH2 0x2251 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2E6F JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2E6F JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2E0F PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2E7F PUSH2 0x2E7A PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x43A3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30C7 JUMPI PUSH32 0x0 ISZERO PUSH2 0x2FB1 JUMPI DUP1 ISZERO PUSH2 0x2FA1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2EF4 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2FA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2FB1 PUSH2 0x2FAC PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x443C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBE PUSH2 0x24EE PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x30C5 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2FFD PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x306E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307C SWAP1 POP PUSH2 0x25B1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3084 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x30CF PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3130 JUMPI POP PUSH1 0x0 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x324C JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3151 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x3188 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x31A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x3241 SWAP2 PUSH2 0x323A SWAP2 SWAP1 PUSH2 0x3849 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3134 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x273C SWAP1 DUP3 SWAP1 PUSH2 0x38A2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 PUSH2 0x32D8 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH2 0x41F1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3394 PUSH2 0x338F PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x276E PUSH2 0x33A7 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x44A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x3466 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3477 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x34D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4961 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3394 PUSH2 0x24EE JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x35E2 JUMPI PUSH1 0xB SLOAD PUSH2 0x35BD DUP5 DUP5 PUSH2 0x391B JUMP JUMPDEST GT PUSH2 0x35CA JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x35DB SWAP1 PUSH2 0x1DF4 DUP6 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x35EF DUP5 DUP5 PUSH2 0x37E8 JUMP JUMPDEST LT PUSH2 0x35FC JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x35DB PUSH2 0x3609 DUP5 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x391B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x3677 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x3768 JUMPI TIMESTAMP PUSH2 0x376A JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x377B DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x46BD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37C3 PUSH2 0x37AC PUSH32 0x0 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x37BC SWAP1 DUP7 SWAP1 PUSH2 0x391B JUMP JUMPDEST DUP8 MLOAD PUSH2 0x47C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x37DC DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x391B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x3842 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3858 JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3865 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x3842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A1B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x38F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3901 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3842 PUSH2 0x2710 PUSH2 0x1C66 DUP6 DUP6 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3972 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x39AB JUMPI PUSH1 0x0 PUSH2 0x39D5 JUMP JUMPDEST PUSH2 0x39D5 PUSH32 0x0 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x39E9 JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x39F3 DUP6 DUP3 PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x3A07 PUSH2 0x3A00 DUP8 DUP5 PUSH2 0x3909 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3A25 DUP7 PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP PUSH2 0x3A30 DUP7 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3A3F DUP2 DUP5 PUSH2 0x37E8 JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x3B3E PUSH2 0x279D JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BB0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B98 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3D6E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3CDC JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3D88 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x16BE JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DA1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x3DDF JUMPI PUSH2 0x3DDC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DC1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3D8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E0B JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3E25 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E7C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3F44 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3EB2 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3F61 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2773 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3F99 SWAP1 PUSH2 0x1C66 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4039 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3FB6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x4031 JUMPI PUSH1 0x0 PUSH2 0x3FE8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3FD7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x48CD JUMP JUMPDEST SWAP1 POP PUSH2 0x401E PUSH2 0x4017 PUSH32 0x0 DUP4 PUSH2 0x3909 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x402D PUSH2 0x323A DUP7 DUP4 PUSH2 0x3909 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3FA1 JUMP JUMPDEST POP PUSH1 0xC SLOAD ISZERO PUSH2 0x406A JUMPI PUSH1 0xC SLOAD PUSH2 0x4050 SWAP1 DUP4 SWAP1 PUSH2 0x4938 JUMP JUMPDEST SWAP2 POP PUSH2 0x4067 PUSH1 0xC SLOAD DUP3 PUSH2 0x4938 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4088 DUP8 DUP8 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH2 0x4094 DUP8 DUP8 PUSH2 0x44A4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x40A3 DUP2 DUP5 PUSH2 0x37E8 JUMP JUMPDEST SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x40D4 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x40E2 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40EE DUP5 DUP5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x40FD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4142 DUP2 DUP4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4122 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x414E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x418E JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x419A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41BC JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x41CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x42B6 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4224 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x42D0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x42E2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x42F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x432E JUMPI PUSH2 0x432B DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4310 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x435A JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x4368 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4376 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x43C7 JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x0 PUSH2 0x43DF DUP5 DUP4 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x43EE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4413 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4122 JUMPI INVALID JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x441F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x43CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x4460 JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x447A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x4463 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44C5 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x458D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x44FB JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x45AA JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST DUP1 MLOAD DUP5 LT PUSH2 0x45BF JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST DUP1 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD ISZERO PUSH2 0x45E9 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4621 SWAP1 PUSH2 0x1C66 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4637 DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x3FD7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x4666 PUSH2 0x323A PUSH32 0x0 DUP4 PUSH2 0x3909 JUMP JUMPDEST SWAP3 POP PUSH2 0x467C PUSH2 0x4675 DUP6 DUP4 PUSH2 0x3909 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x46AF JUMPI PUSH1 0xC SLOAD PUSH2 0x4695 SWAP1 DUP5 SWAP1 PUSH2 0x4938 JUMP JUMPDEST SWAP3 POP PUSH2 0x46AC PUSH1 0xC SLOAD DUP4 PUSH2 0x4938 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x46EC JUMPI POP PUSH1 0x0 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4738 PUSH32 0x0 PUSH32 0x0 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4746 DUP3 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x475E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x4774 JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x478A JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x47A1 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x47B8 JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x47E1 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47FD PUSH2 0x1388 PUSH2 0x47F7 DUP6 DUP2 DUP11 DUP13 PUSH2 0x3849 JUMP JUMPDEST SWAP1 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4814 PUSH2 0x1388 PUSH2 0x47F7 DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x482D PUSH1 0x6 PUSH2 0x1C66 PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4850 PUSH1 0x2 PUSH2 0x1C66 DUP9 PUSH2 0x47F7 PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x3849 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4869 PUSH1 0x3 PUSH2 0x1C66 PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4883 DUP3 PUSH2 0x487D DUP7 DUP2 DUP12 DUP12 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4893 DUP4 PUSH2 0x1DF4 DUP4 DUP9 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0x48A3 DUP12 PUSH2 0x47F7 DUP4 DUP16 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH2 0x48BD PUSH5 0xE8D4A51000 PUSH2 0x1C66 PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x3849 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x492F JUMPI PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x48E8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0x4927 JUMPI PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x490D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x48D1 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4947 JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST DUP2 PUSH2 0x4953 JUMPI POP DUP2 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x3842 PUSH2 0x323A DUP5 DUP5 PUSH2 0x3909 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303334302054 PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH15 0x6F7420425443207265776172646572 ADDRESS CALLER CODESIZE ADDRESS KECCAK256 PUSH21 0x6869732061646472657373206469646E2774207374 PUSH2 0x6B65 KECCAK256 PUSH10 0x6E207468697320706F6F PUSH13 0x3033313120416D6F756E742063 PUSH2 0x6E27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333530204361 PUSH15 0x277420736574206D61747572696E67 KECCAK256 PUSH17 0x72696365206265666F726520746865206D PUSH2 0x7475 PUSH19 0x6974792074696D65A264697066735822122078 DUP8 PUSH10 0xE583BD50A5106717A90A 0x2A 0x23 0xAD SDIV MULMOD DUP4 0x1F BYTE 0xD8 0xFC PUSH3 0x86FCC5 DUP9 0x23 0xD6 LOG2 BYTE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
        "sourceMap": "219:30549:17:-:0;;;2820:1658;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2820:1658:17;;;;;;;;;;-1:-1:-1;2820:1658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2820:1658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2820:1658:17;;-1:-1:-1;2820:1658:17;;;;;;;;;;;;;;;;;;;;;;867:17:1;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:1;-1:-1:-1;;;;;909:18:1;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:1;942:43;;909:6;;942:43;-1:-1:-1;;;;;;353:21:11;;345:30;;;;;;385:9;:42;;-1:-1:-1;;;;;;385:42:11;;;-1:-1:-1;;;;;385:42:11;;;;;;;531:10:7;:48;;;;;;;;;;;;;;589:21;:43;;;;;;;;;;;;;;642:21;:43;;;;;;;;;;3345:20:17;;::::2;::::0;:8:::2;::::0;:20:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;3376:24:17;;;-1:-1:-1;;3376:24:17;;;::::2;::::0;3410:30;;;;;::::2;::::0;3451:11:::2;:26:::0;;-1:-1:-1;;;;;;3451:26:17::2;-1:-1:-1::0;;;;;3451:26:17;::::2;;::::0;;3488:22:::2;3500:9:::0;3488:11:::2;:22::i;:::-;3520:28;::::0;;;-1:-1:-1;;3520:28:17;::::2;::::0;;;3571:15:::2;3559:27;::::0;;;3611:13;;3596:28:::2;::::0;;;3611:13:::2;3645::::0;::::2;::::0;3634:24:::2;::::0;;;3777:13;;::::2;::::0;3793:6:::2;3776:24:::0;;::::2;3759:41;::::0;3821:13;;::::2;::::0;3810:24:::2;::::0;3859:13;;::::2;::::0;3858:24;::::2;3844:38;::::0;3910:13;;::::2;::::0;3909:24;::::2;3892:41;::::0;3967:13;;::::2;::::0;3943:37:::2;::::0;4011:13;;::::2;::::0;3990:34:::2;::::0;4049:13;;::::2;::::0;4034:28:::2;::::0;4094:13;::::2;::::0;4093:24:::2;4072:45;::::0;4131:38;::::2;;;;;::::0;3622:1:::2;4181:291;4205:13;4201:1;:17;4181:291;;;4244:12;4257:1;4244:15;;;;;;;;;;::::0;4240:31:::2;;4266:5;;4240:31;4286:16;4325:122;;;;;;;;4369:6;4376:1;4369:9;;;;;;;;;;;4325:122;;;;4413:12;4426:1;4413:15;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;4325:122;;;4286:175;;::::2;::::0;;::::2;::::0;;-1:-1:-1;4286:175:17;;;;;;;;;::::2;::::0;;::::2;;::::0;;;;::::2;::::0;;;::::2;::::0;4220:3:::2;4181:291;;;;2820:1658:::0;;;;;;;;;;;;219:30549;;598:104:5;685:10;598:104;:::o;372:118:8:-;441:12;:42;;-1:-1:-1;;;;;;441:42:8;-1:-1:-1;;;;;441:42:8;;;;;;;;;;372:118::o;219:30549:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;219:30549:17;;;-1:-1:-1;219:30549:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
      },
      "deployedBytecode": {
        "generatedSources": [],
        "immutableReferences": {
          "2530": [
            {
              "length": 32,
              "start": 5921
            },
            {
              "length": 32,
              "start": 7282
            },
            {
              "length": 32,
              "start": 7427
            },
            {
              "length": 32,
              "start": 7761
            },
            {
              "length": 32,
              "start": 7956
            },
            {
              "length": 32,
              "start": 8003
            },
            {
              "length": 32,
              "start": 9469
            },
            {
              "length": 32,
              "start": 10340
            },
            {
              "length": 32,
              "start": 11032
            },
            {
              "length": 32,
              "start": 11548
            },
            {
              "length": 32,
              "start": 12232
            },
            {
              "length": 32,
              "start": 13116
            }
          ],
          "2532": [
            {
              "length": 32,
              "start": 3084
            },
            {
              "length": 32,
              "start": 10387
            },
            {
              "length": 32,
              "start": 10530
            },
            {
              "length": 32,
              "start": 11595
            },
            {
              "length": 32,
              "start": 11738
            }
          ],
          "2534": [
            {
              "length": 32,
              "start": 2591
            },
            {
              "length": 32,
              "start": 4010
            },
            {
              "length": 32,
              "start": 10760
            },
            {
              "length": 32,
              "start": 11967
            }
          ],
          "2538": [
            {
              "length": 32,
              "start": 3012
            },
            {
              "length": 32,
              "start": 3300
            },
            {
              "length": 32,
              "start": 6322
            },
            {
              "length": 32,
              "start": 14071
            },
            {
              "length": 32,
              "start": 18163
            }
          ],
          "2540": [
            {
              "length": 32,
              "start": 3048
            },
            {
              "length": 32,
              "start": 3267
            },
            {
              "length": 32,
              "start": 6289
            },
            {
              "length": 32,
              "start": 14104
            },
            {
              "length": 32,
              "start": 18196
            }
          ],
          "2542": [
            {
              "length": 32,
              "start": 3234
            },
            {
              "length": 32,
              "start": 5481
            },
            {
              "length": 32,
              "start": 6256
            },
            {
              "length": 32,
              "start": 14138
            }
          ],
          "2544": [
            {
              "length": 32,
              "start": 5517
            },
            {
              "length": 32,
              "start": 7232
            },
            {
              "length": 32,
              "start": 7606
            },
            {
              "length": 32,
              "start": 8639
            }
          ],
          "2546": [
            {
              "length": 32,
              "start": 10278
            },
            {
              "length": 32,
              "start": 14215
            }
          ],
          "2548": [
            {
              "length": 32,
              "start": 7006
            },
            {
              "length": 32,
              "start": 16370
            },
            {
              "length": 32,
              "start": 17985
            }
          ],
          "2550": [
            {
              "length": 32,
              "start": 3397
            },
            {
              "length": 32,
              "start": 6694
            },
            {
              "length": 32,
              "start": 9023
            },
            {
              "length": 32,
              "start": 10716
            },
            {
              "length": 32,
              "start": 11923
            },
            {
              "length": 32,
              "start": 16240
            },
            {
              "length": 32,
              "start": 17912
            }
          ],
          "2552": [
            {
              "length": 32,
              "start": 6432
            },
            {
              "length": 32,
              "start": 14720
            },
            {
              "length": 32,
              "start": 14768
            }
          ],
          "2554": [
            {
              "length": 32,
              "start": 6468
            },
            {
              "length": 32,
              "start": 7127
            }
          ],
          "2577": [
            {
              "length": 32,
              "start": 3609
            },
            {
              "length": 32,
              "start": 3705
            },
            {
              "length": 32,
              "start": 13080
            }
          ],
          "2579": [
            {
              "length": 32,
              "start": 3663
            },
            {
              "length": 32,
              "start": 13152
            }
          ],
          "2587": [
            {
              "length": 32,
              "start": 5445
            },
            {
              "length": 32,
              "start": 18113
            }
          ]
        },
        "linkReferences": {},
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFBBCBE GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xC6C1DECD GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xEDA2D424 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9C2 JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x9F8 JUMPI DUP1 PUSH4 0xFD8FD47F EQ PUSH2 0xA15 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xEDA2D424 EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xEEE39403 EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x9A5 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xDE09EE20 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x90A JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x952 JUMPI DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x95A JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x8E5 JUMPI DUP1 PUSH4 0xD83DB49F EQ PUSH2 0x8ED JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xA4E2D634 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xB1DD61B6 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x8BD JUMPI DUP1 PUSH4 0xBF852196 EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x8CD JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xA508BC71 EQ PUSH2 0x7C3 JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xB1B1E1C0 EQ PUSH2 0x823 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x95C2BA47 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0x9D9A62DF EQ PUSH2 0x78E JUMPI DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xA150194B EQ PUSH2 0x7B3 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76E JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x9234A39A EQ PUSH2 0x77E JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x305 JUMPI DUP1 PUSH4 0x765E14D8 GT PUSH2 0x298 JUMPI DUP1 PUSH4 0x7F2B6A0D GT PUSH2 0x267 JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x6B4 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0x857B21EE EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0x8A9920B7 EQ PUSH2 0x75E JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x765E14D8 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x668 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0x7D1FCBFA EQ PUSH2 0x693 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x6847D0C5 GT PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x634 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x5B9F4F90 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0x5E2E2FFC EQ PUSH2 0x614 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x31769EF7 GT PUSH2 0x37D JUMPI DUP1 PUSH4 0x444A4902 GT PUSH2 0x34C JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x5A8 JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x31769EF7 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x31E244E5 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x49D JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0xF4EF8A6 GT PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x1898A1A7 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x47D JUMPI PUSH2 0x3E6 JUMP JUMPDEST DUP1 PUSH4 0x74BC101 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x9082C29 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xB97BC86 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x446 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F3 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x47B PUSH2 0xC47 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x42C PUSH2 0xFA6 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x528 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x510 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x125C JUMP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x158B JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15AF JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x191E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1942 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A48 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x1B5C JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x69B PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x58C PUSH2 0x225E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x226E JUMP JUMPDEST PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x22E2 JUMP JUMPDEST PUSH2 0x47B PUSH2 0x248B JUMP JUMPDEST PUSH2 0x47B PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x69B PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x275A JUMP JUMPDEST PUSH2 0x58C PUSH2 0x2778 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x278D JUMP JUMPDEST PUSH2 0x7CB PUSH2 0x279D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x807 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7EF JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x848 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x882 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x86A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8AF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x2D00 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x311B JUMP JUMPDEST PUSH2 0x42C PUSH2 0x325B JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x32A6 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x32B5 JUMP JUMPDEST PUSH2 0x58C PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x32CB JUMP JUMPDEST PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x32DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH2 0x3316 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x333A JUMP JUMPDEST PUSH2 0x42C PUSH2 0x335E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3382 JUMP JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3399 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x33AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3430 JUMP JUMPDEST PUSH2 0x47B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x345E JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3572 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x3578 JUMP JUMPDEST PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x42C PUSH2 0x3597 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0xA60 PUSH2 0x279D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA9D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB7D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xBB1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 PUSH2 0xC3B PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH2 0x1A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC5B PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4987 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDC2 JUMPI PUSH2 0xD71 PUSH2 0xFA6 JUMP JUMPDEST PUSH2 0xDC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333631204254432052657761726473206E6F7420617661696C61626C650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD ISZERO PUSH2 0xE17 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE17 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 PUSH2 0xE47 PUSH2 0x311B JUMP JUMPDEST SWAP1 POP PUSH2 0xE73 DUP2 PUSH32 0x0 PUSH2 0x35A4 JUMP JUMPDEST PUSH2 0xE9C JUMPI PUSH32 0x0 PUSH1 0xC SSTORE JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xEB3 JUMPI PUSH1 0x9 SLOAD PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF47 JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x7 PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xED8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x9 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xF0F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF2B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xEBB JUMP JUMPDEST POP PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA8 SHL OR AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x105A PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10C8 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1115 PUSH2 0x3612 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1162 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11AC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x11F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1221 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x123F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x11B2 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1270 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x1383 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x12CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x12F1 JUMPI PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x130A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x1332 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x12B8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x13E4 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A5D PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x1511 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x151D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x1539 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x15E2 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x168E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x16BE JUMPI PUSH1 0x0 PUSH2 0x16A7 DUP7 DUP4 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP PUSH2 0x16B3 DUP4 DUP3 PUSH2 0x37E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1692 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16DA PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49D9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x180D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1829 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x186E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AB2 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1919 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x196E PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x197F PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x19DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1B0D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1A7B JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1B27 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x1B39 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B46 DUP7 DUP7 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B52 DUP3 DUP3 PUSH2 0x37E8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A88 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C6C PUSH1 0x64 PUSH2 0x1C66 PUSH32 0x0 PUSH1 0x5 PUSH2 0x3849 JUMP JUMPDEST SWAP1 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x1D30 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1DAC JUMPI PUSH2 0x1DA7 DUP6 DUP4 PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x1DDB PUSH32 0x0 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH2 0x1DFA DUP3 PUSH2 0x1DF4 DUP9 PUSH1 0xA SLOAD PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x391B JUMP JUMPDEST GT ISZERO PUSH2 0x1E37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49B3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E43 DUP7 DUP5 PUSH2 0x3978 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x1E7E PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP6 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1EFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F0A SWAP1 POP DUP7 DUP4 PUSH2 0x391B JUMP JUMPDEST SWAP6 POP DUP1 ISZERO PUSH2 0x2041 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2028 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x203E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x204E SWAP1 DUP8 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2069 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH1 0x0 PUSH2 0x2083 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x7 SWAP1 PUSH2 0x20E4 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH32 0x0 GT PUSH2 0x21EB JUMPI PUSH2 0x21EB PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x21F3 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2256 PUSH2 0x2251 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3A14 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22F6 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x233B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x239A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A3C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x23EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x243B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220646561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2445 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP PUSH2 0x2451 DUP2 DUP5 PUSH2 0x3A4B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245C DUP5 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2476 PUSH2 0x246F DUP4 PUSH2 0x12C PUSH2 0x3909 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0x2484 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x3B10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x69742773206E6F7420616E20656D657267656E6379 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24F3 PUSH2 0x24EE PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3CA9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x25FF JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2532 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x258D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B6 SWAP1 POP PUSH2 0x25B1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3DE7 JUMP JUMPDEST PUSH2 0x25BE PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2616 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x265B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x270D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x273A JUMPI PUSH1 0x0 PUSH2 0x273C JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2256 PUSH2 0x2750 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x276E PUSH2 0x2768 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x4076 JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x27DC JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2807 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2856 PUSH2 0x2768 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x29B7 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2903 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x29B7 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2957 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x29C8 PUSH2 0x29C2 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x40B0 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C1D JUMPI PUSH32 0x0 ISZERO PUSH2 0x2AFB JUMPI DUP1 ISZERO PUSH2 0x2AEA JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2A3D PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2AEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033333 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2AFB PUSH2 0x2AF5 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x416A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0E PUSH2 0x2B08 PUSH2 0x35A0 JUMP JUMPDEST DUP6 PUSH2 0x41F1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C1B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2B4D PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BD2 SWAP1 POP PUSH2 0x2BCC PUSH2 0x35A0 JUMP JUMPDEST DUP6 PUSH2 0x4336 JUMP JUMPDEST PUSH2 0x2BDA PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x2C25 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2CF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CCD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D0E PUSH2 0x2251 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2E6F JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2E6F JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2E0F PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2E7F PUSH2 0x2E7A PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x43A3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30C7 JUMPI PUSH32 0x0 ISZERO PUSH2 0x2FB1 JUMPI DUP1 ISZERO PUSH2 0x2FA1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2EF4 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2FA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2FB1 PUSH2 0x2FAC PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x443C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FBE PUSH2 0x24EE PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x30C5 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2FFD PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3044 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3058 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x306E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307C SWAP1 POP PUSH2 0x25B1 PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x3084 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x30CF PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3130 JUMPI POP PUSH1 0x0 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x324C JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3151 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x8 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x3188 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x31A4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x3241 SWAP2 PUSH2 0x323A SWAP2 SWAP1 PUSH2 0x3849 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3134 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x273C SWAP1 DUP3 SWAP1 PUSH2 0x38A2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 PUSH2 0x32D8 PUSH2 0x35A0 JUMP JUMPDEST DUP4 PUSH2 0x41F1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3394 PUSH2 0x338F PUSH2 0x35A0 JUMP JUMPDEST PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x276E PUSH2 0x33A7 PUSH2 0x35A0 JUMP JUMPDEST DUP5 PUSH2 0x44A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x3466 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3477 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x34D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4961 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3394 PUSH2 0x24EE JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD DUP4 GT ISZERO PUSH2 0x35E2 JUMPI PUSH1 0xB SLOAD PUSH2 0x35BD DUP5 DUP5 PUSH2 0x391B JUMP JUMPDEST GT PUSH2 0x35CA JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x35DB SWAP1 PUSH2 0x1DF4 DUP6 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x35EF DUP5 DUP5 PUSH2 0x37E8 JUMP JUMPDEST LT PUSH2 0x35FC JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x35DB PUSH2 0x3609 DUP5 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x391B JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x3677 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x3768 JUMPI TIMESTAMP PUSH2 0x376A JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x377B DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x46BD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37C3 PUSH2 0x37AC PUSH32 0x0 DUP5 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x37BC SWAP1 DUP7 SWAP1 PUSH2 0x391B JUMP JUMPDEST DUP8 MLOAD PUSH2 0x47C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x37DC DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x391B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x3842 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3858 JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3865 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x3842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A1B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x38F8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x3901 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3842 PUSH2 0x2710 PUSH2 0x1C66 DUP6 DUP6 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3972 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x39AB JUMPI PUSH1 0x0 PUSH2 0x39D5 JUMP JUMPDEST PUSH2 0x39D5 PUSH32 0x0 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x39E9 JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST PUSH2 0x39F3 DUP6 DUP3 PUSH2 0x3909 JUMP JUMPDEST PUSH2 0x3A07 PUSH2 0x3A00 DUP8 DUP5 PUSH2 0x3909 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x391B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3A25 DUP7 PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP PUSH2 0x3A30 DUP7 PUSH2 0x3E5B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x3A3F DUP2 DUP5 PUSH2 0x37E8 JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3ACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x3B3E PUSH2 0x279D JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BB0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B98 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3C36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C95 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3C7D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3D6E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3CDC JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3D88 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x16BE JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DA1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x3DDF JUMPI PUSH2 0x3DDC DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3DC1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3D8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E0B JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3E25 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E7C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3F44 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3EB2 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3F61 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2773 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x3F99 SWAP1 PUSH2 0x1C66 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4039 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3FB6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x4031 JUMPI PUSH1 0x0 PUSH2 0x3FE8 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3FD7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x48CD JUMP JUMPDEST SWAP1 POP PUSH2 0x401E PUSH2 0x4017 PUSH32 0x0 DUP4 PUSH2 0x3909 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x402D PUSH2 0x323A DUP7 DUP4 PUSH2 0x3909 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3FA1 JUMP JUMPDEST POP PUSH1 0xC SLOAD ISZERO PUSH2 0x406A JUMPI PUSH1 0xC SLOAD PUSH2 0x4050 SWAP1 DUP4 SWAP1 PUSH2 0x4938 JUMP JUMPDEST SWAP2 POP PUSH2 0x4067 PUSH1 0xC SLOAD DUP3 PUSH2 0x4938 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4088 DUP8 DUP8 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP PUSH2 0x4094 DUP8 DUP8 PUSH2 0x44A4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x40A3 DUP2 DUP5 PUSH2 0x37E8 JUMP JUMPDEST SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x40D4 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x40E2 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40EE DUP5 DUP5 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x40FD JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4142 DUP2 DUP4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4122 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x414E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x418E JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x419A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41BC JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x41CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x42B6 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4224 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x42D0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x42E2 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x42F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0x432E JUMPI PUSH2 0x432B DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4310 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 PUSH2 0x37E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x435A JUMPI POP PUSH2 0x4166 JUMP JUMPDEST DUP1 SLOAD DUP3 LT PUSH2 0x4368 JUMPI POP PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4376 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x43C7 JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x0 PUSH2 0x43DF DUP5 DUP4 PUSH2 0x3650 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x43EE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4413 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4122 JUMPI INVALID JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x441F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x43CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x4460 JUMPI POP PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3E56 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x447A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x4463 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x44C5 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x458D JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x44FB JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x45AA JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST DUP1 MLOAD DUP5 LT PUSH2 0x45BF JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST DUP1 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD ISZERO PUSH2 0x45E9 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4621 SWAP1 PUSH2 0x1C66 PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4637 DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x3FD7 JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x4666 PUSH2 0x323A PUSH32 0x0 DUP4 PUSH2 0x3909 JUMP JUMPDEST SWAP3 POP PUSH2 0x467C PUSH2 0x4675 DUP6 DUP4 PUSH2 0x3909 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x37E8 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP3 POP ISZERO PUSH2 0x46AF JUMPI PUSH1 0xC SLOAD PUSH2 0x4695 SWAP1 DUP5 SWAP1 PUSH2 0x4938 JUMP JUMPDEST SWAP3 POP PUSH2 0x46AC PUSH1 0xC SLOAD DUP4 PUSH2 0x4938 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x46EC JUMPI POP PUSH1 0x0 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4738 PUSH32 0x0 PUSH32 0x0 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4746 DUP3 DUP6 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x475E JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x4774 JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x478A JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x47A1 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x47B8 JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x47E1 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x47FD PUSH2 0x1388 PUSH2 0x47F7 DUP6 DUP2 DUP11 DUP13 PUSH2 0x3849 JUMP JUMPDEST SWAP1 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4814 PUSH2 0x1388 PUSH2 0x47F7 DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x482D PUSH1 0x6 PUSH2 0x1C66 PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4850 PUSH1 0x2 PUSH2 0x1C66 DUP9 PUSH2 0x47F7 PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x3849 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4869 PUSH1 0x3 PUSH2 0x1C66 PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4883 DUP3 PUSH2 0x487D DUP7 DUP2 DUP12 DUP12 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 PUSH2 0x37E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4893 DUP4 PUSH2 0x1DF4 DUP4 DUP9 PUSH2 0x391B JUMP JUMPDEST SWAP1 POP PUSH2 0x48A3 DUP12 PUSH2 0x47F7 DUP4 DUP16 PUSH2 0x3849 JUMP JUMPDEST SWAP1 POP PUSH2 0x48BD PUSH5 0xE8D4A51000 PUSH2 0x1C66 PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x3849 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x492F JUMPI PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x48E8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0x4927 JUMPI PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x490D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x48D1 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4947 JUMPI POP PUSH1 0x0 PUSH2 0xC41 JUMP JUMPDEST DUP2 PUSH2 0x4953 JUMPI POP DUP2 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x3842 PUSH2 0x323A DUP5 DUP5 PUSH2 0x3909 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303334302054 PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH15 0x6F7420425443207265776172646572 ADDRESS CALLER CODESIZE ADDRESS KECCAK256 PUSH21 0x6869732061646472657373206469646E2774207374 PUSH2 0x6B65 KECCAK256 PUSH10 0x6E207468697320706F6F PUSH13 0x3033313120416D6F756E742063 PUSH2 0x6E27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333530204361 PUSH15 0x277420736574206D61747572696E67 KECCAK256 PUSH17 0x72696365206265666F726520746865206D PUSH2 0x7475 PUSH19 0x6974792074696D65A264697066735822122078 DUP8 PUSH10 0xE583BD50A5106717A90A 0x2A 0x23 0xAD SDIV MULMOD DUP4 0x1F BYTE 0xD8 0xFC PUSH3 0x86FCC5 DUP9 0x23 0xD6 LOG2 BYTE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
        "sourceMap": "219:30549:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:32;;;:::i;:::-;;;;-1:-1:-1;;;;;971:32:17;;;;;;;;;;;;;;1305:353:7;;;;;;;;;;;;;;;;-1:-1:-1;1305:353:7;;:::i;:::-;;;;;;;;;;;;;;;;1039:34:17;;;:::i;1079:33::-;;;:::i;921:44::-;;;:::i;27444:159::-;;;;;;;;;;;;;;;;-1:-1:-1;27444:159:17;;:::i;12400:1573::-;;;:::i;:::-;;1954:98:7;;;:::i;10225:112:17:-;;;:::i;29926:110::-;;;:::i;11945:71::-;;;:::i;15123:439::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14557:560;;;;;;;;;;;;;;;;-1:-1:-1;14557:560:17;;;;:::i;29411:509::-;;;;;;;;;;;;;;;;-1:-1:-1;29411:509:17;;-1:-1:-1;;;;;29411:509:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2328:39;;;:::i;1118:37::-;;;:::i;1162:39::-;;;:::i;17736:443::-;;;;;;;;;;;;;;;;-1:-1:-1;17736:443:17;-1:-1:-1;;;;;17736:443:17;;:::i;28942:357::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;28942:357:17;;;;;;;;;;;;;;;;;:::i;12118:272::-;;;:::i;1442:37::-;;;:::i;1485:43::-;;;:::i;1700:145:1:-;;;:::i;1396:39:17:-;;;:::i;18185:466::-;;;;;;;;;;;;;;;;-1:-1:-1;18185:466:17;;-1:-1:-1;;;;;18185:466:17;;;;;;:::i;1247:36::-;;;:::i;4484:2335::-;;;;;;;;;;;;;;;;-1:-1:-1;4484:2335:17;;;;;;;:::i;28199:120::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2399:21;;;:::i;1666:26::-;;;:::i;1535:60::-;;;;;;;;;;;;;;;;-1:-1:-1;1535:60:17;;-1:-1:-1;;;;;1535:60:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9390:829;;;;;;;;;;;;;;;;-1:-1:-1;9390:829:17;;;;;;;:::i;30042:558::-;;;:::i;13978:108::-;;;:::i;1068:85:1:-;;;:::i;707:174:11:-;;;:::i;27609:120:17:-;;;:::i;1850:46::-;;;:::i;28324:154::-;;;;;;;;;;;;;;;;-1:-1:-1;28324:154:17;;:::i;2296:25::-;;;:::i;1973:41::-;;;:::i;2373:20::-;;;:::i;1664:230:7:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:33:17;;;:::i;8205:1179::-;;;;;;;;;;;;;;;;-1:-1:-1;8205:1179:17;;:::i;1010:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6825:1374;;;:::i;11345:594::-;;;:::i;657:118:8:-;;;:::i;2264:26:17:-;;;:::i;1816:28::-;;;:::i;2426:21::-;;;:::i;28034:159::-;;;;;;;;;;;;;;;;-1:-1:-1;28034:159:17;;:::i;1630:29::-;;;;;;;;;;;;;;;;-1:-1:-1;1630:29:17;;:::i;:::-;;;;-1:-1:-1;;;;;1630:29:17;;;;;;;;;;;;;;;;;;;;;;2021:46;;;:::i;877:38::-;;;:::i;2073:43::-;;;:::i;27324:115::-;;;:::i;27734:164::-;;;;;;;;;;;;;;;;-1:-1:-1;27734:164:17;;:::i;500:132:11:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2454:41:17;;;;;;;;;;;;;;;;-1:-1:-1;2454:41:17;;:::i;1994:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;1994:240:1;-1:-1:-1;;;;;1994:240:1;;:::i;2223:34:17:-;;;:::i;781:100:8:-;;;:::i;1601:23:17:-;;;;;;;;;;;;;;;;-1:-1:-1;1601:23:17;;:::i;27904:125::-;;;:::i;971:32::-;;;:::o;1305:353:7:-;1462:10;;1398:7;;;;-1:-1:-1;;;;;1462:10:7;:24;1487:7;1496:20;:18;:20::i;:::-;1462:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1462:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1462:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:96;;1639:9;1649:1;1639:12;;;;;;;;;;;;;;1632:19;;;1305:353;;;;:::o;1039:34:17:-;;;:::o;1079:33::-;;;:::o;921:44::-;;;:::o;27444:159::-;27520:7;27546:50;27571:12;:10;:12::i;:::-;27585:10;27546:24;:50::i;:::-;27539:57;27444:159;-1:-1:-1;;27444:159:17:o;12400:1573::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:12:::1;12514:8;12502:9;:20;:35;12483:15;:54;;12462:145;;;;-1:-1:-1::0;;;12462:145:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12630:14;:18:::0;12626:159:::1;;12689:15;:13;:15::i;:::-;12664:110;;;::::0;;-1:-1:-1;;;12664:110:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;12799:7;:14:::0;:18;12795:155:::1;;12858:13;:20:::0;12833:106:::1;;;::::0;;-1:-1:-1;;;12833:106:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;12833:106:17;;;;;;;;;;;;;::::1;;13048:21;:25:::0;13044:404:::1;;13227:26;13256:27;:25;:27::i;:::-;13227:56;;13301:54;13316:18;13336;13301:14;:54::i;:::-;13297:141;;13402:21;13380:19;:43:::0;13297:141:::1;13044:404;;13548:13;:20:::0;13534:11:::1;::::0;13571:2:::1;-1:-1:-1::0;13548:53:17::1;;13581:13;:20:::0;13548:53:::1;;;13576:2;13548:53;13534:67;;13616:9;13611:155;13635:3;13631:1;:7;13611:155;;;13750:1;13754;13750:5;13659:11;:43;13671:13;13685:1;13671:16;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:30:::0;-1:-1:-1;;;;;13671:30:17::1;13659:43:::0;;;::::1;::::0;;;;;;;;13703:13:::1;:16:::0;;13717:1;;13703:16;::::1;;;;;;;;;;;;;;;:22;;;13659:67;;;;;;;;;::::0;;;::::1;::::0;;;:72:::1;:67;::::0;;::::1;;:72;:96:::0;13640:3:::1;;13611:155;;;-1:-1:-1::0;13896:8:17::1;:15:::0;;-1:-1:-1;;;;;;;;13896:15:17;;::::1;-1:-1:-1::0;;;13896:15:17::1;13921:16;-1:-1:-1::0;;;13921:16:17::1;::::0;;13953:13:::1;::::0;::::1;::::0;-1:-1:-1;;13953:13:17::1;30758:1;12400:1573::o:0;1954:98:7:-;2034:10;;-1:-1:-1;;;;;2034:10:7;1954:98;;:::o;10225:112:17:-;10297:33;;;-1:-1:-1;;;10297:33:17;;10324:4;10297:33;;;;;;10271:7;;-1:-1:-1;;;;;10297:8:17;:18;;;;:33;;;;;;;;;;;;;;;:18;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10297:33:17;;-1:-1:-1;10225:112:17;:::o;29926:110::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30009:13:::1;:20:::0;;-1:-1:-1;;;;30009:20:17::1;-1:-1:-1::0;;;30009:20:17::1;::::0;;29926:110::o;11945:71::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11998:11:::1;:9;:11::i;:::-;11945:71::o:0;15123:439::-;15192:16;15210;15243:22;15282:7;:14;;;;15268:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15268:29:17;-1:-1:-1;15348:7:17;:14;15243:54;;-1:-1:-1;15307:24:17;;15334:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15334:29:17;;15307:56;;15379:9;15374:148;15398:7;:14;15394:18;;15374:148;;;15444:7;15452:1;15444:10;;;;;;;;;;;;;;;;;;;;;:24;15433:8;;-1:-1:-1;;;;;15444:24:17;;;;15433:8;;15439:1;;15433:8;;;;;;-1:-1:-1;;;;;15433:35:17;;;:8;;;;;;;;;;;:35;15495:7;:10;;15503:1;;15495:10;;;;;;;;;;;;;;;;:16;;;15482:7;15490:1;15482:10;;;;;;;;;;;;;;;;;:29;15414:3;;15374:148;;;-1:-1:-1;15540:5:17;;-1:-1:-1;15547:7:17;-1:-1:-1;15123:439:17;;:::o;14557:560::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14711:9:::1;14706:377;14730:16;14726:1;:20;14706:377;;;14893:1;14869:9:::0;14879:1;14869:12:::1;::::0;::::1;;;;;;;;;-1:-1:-1::0;;;;;14869:12:17::1;:26;14865:37;;;14897:5;;14865:37;14917:13;14949:109;;;;;;;;14989:9;14999:1;14989:12;;;;;;;;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;;;;14989:12:17::1;14949:109:::0;;::::1;15026:10:::0;15037:1;15026:13:::1;::::0;::::1;;;;;;::::0;;::::1;::::0;;;::::1;;14949:109:::0;;;14917:155;;::::1;::::0;;::::1;::::0;;-1:-1:-1;14917:155:17;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;14917:155:17::1;-1:-1:-1::0;;;;;14917:155:17;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;14748:3:::1;14706:377;;;-1:-1:-1::0;15098:12:17::1;::::0;::::1;::::0;;;::::1;14557:560:::0;;:::o;29411:509::-;-1:-1:-1;;;;;29549:19:17;;29491:4;29549:19;;;:11;:19;;;;;;;;29507:61;;;;;;;;;;;;;;;;;29491:4;;;;29507:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29620:1;29600:10;:17;:21;29579:111;;;;-1:-1:-1;;;29579:111:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29735:10;:17;29722:10;:30;29701:100;;;;;-1:-1:-1;;;29701:100:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;29821:10;29832;29821:22;;;;;;;;;;;;;;:33;;;29817:75;;;29877:4;29870:11;;;;;29817:75;-1:-1:-1;29908:5:17;;29411:509;-1:-1:-1;;;29411:509:17:o;2328:39::-;;;:::o;1118:37::-;;;:::o;1162:39::-;;;:::o;17736:443::-;-1:-1:-1;;;;;17861:19:17;;17800:7;17861:19;;;:11;:19;;;;;;;;17819:61;;;;;;;;;;;;;;;;;17800:7;;;;17819:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17894:10;:17;17915:1;17894:22;17890:36;;;17925:1;17918:8;;;;;17890:36;17937:14;17970:9;17965:184;17989:10;:17;17985:1;:21;17965:184;;;18027:22;18052:36;18078:6;18086:1;18052:25;:36::i;:::-;18027:61;-1:-1:-1;18112:26:17;:6;18027:61;18112:10;:26::i;:::-;18103:35;-1:-1:-1;;18008:3:17;;17965:184;;;-1:-1:-1;18166:6:17;17736:443;-1:-1:-1;;;17736:443:17:o;28942:357::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29125:10:::1;-1:-1:-1::0;;;;;29102:34:17;;::::1;::::0;;::::1;;;29081:115;;;;-1:-1:-1::0;;;29081:115:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29255:37;::::0;;-1:-1:-1;;;29255:37:17;;-1:-1:-1;;;;;29255:37:17;;::::1;;::::0;::::1;::::0;;;;;;;;;29233:11;;29255:19;::::1;::::0;-1:-1:-1;;29255:37:17;;;;;::::1;::::0;;;;;;;;-1:-1:-1;29255:19:17;:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;;28942:357:17:o;12118:272::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12248:12:::1;12237:8;12225:9;:20;:35;12206:15;:54;;12185:155;;;;-1:-1:-1::0;;;12185:155:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12367:16;:14;:16::i;:::-;12351:13;:32:::0;12118:272::o;1442:37::-;;;:::o;1485:43::-;;;:::o;1700:145:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:1;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:1::1;::::0;;1700:145::o;1396:39:17:-;;;:::o;18185:466::-;-1:-1:-1;;;;;18337:19:17;;18276:7;18337:19;;;:11;:19;;;;;;;;18295:61;;;;;;;;;;;;;;;;;18276:7;;;;18295:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18370:10;:17;18391:1;18370:22;18366:36;;;18401:1;18394:8;;;;;18366:36;18430:10;:17;18416:10;:31;18412:45;;18456:1;18449:8;;;;;18412:45;18468:14;18505:22;18530:45;18556:6;18564:10;18530:25;:45::i;:::-;18505:70;-1:-1:-1;18594:26:17;:6;18505:70;18594:10;:26::i;:::-;18585:35;18185:466;-1:-1:-1;;;;;;18185:466:17:o;1247:36::-;;;:::o;4484:2335::-;4570:8;;-1:-1:-1;;;4570:8:17;;;;4569:9;4561:41;;;;;-1:-1:-1;;;4561:41:17;;;;;;;;;;;;-1:-1:-1;;;4561:41:17;;;;;;;;;;;;;;;4631:18;4620:7;:29;;4612:84;;;;-1:-1:-1;;;4612:84:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4707:18;4728:47;4771:3;4728:38;:14;1895:1;4728:18;:38::i;:::-;:42;;:47::i;:::-;4707:68;;4785:15;4803:10;-1:-1:-1;;;;;4803:18:17;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4803:20:17;;-1:-1:-1;4833:11:17;4859:10;-1:-1:-1;;;;;4859:20:17;;4880:12;:10;:12::i;:::-;4859:34;;;;;;;;;;;;;-1:-1:-1;;;;;4859:34:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4859:34:17;:63;;4900:22;:7;4914;4900:13;:22::i;:::-;4859:63;;;4896:1;4859:63;4833:89;-1:-1:-1;5070:30:17;:14;5089:10;5070:18;:30::i;:::-;5033:33;5062:3;5033:24;5049:7;5033:11;;:15;;:24;;;;:::i;:::-;:28;;:33::i;:::-;:67;;4937:227;;;;-1:-1:-1;;;4937:227:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5176:22;5345:31;5359:7;5368;5345:13;:31::i;:::-;5317:59;-1:-1:-1;5317:59:17;-1:-1:-1;5387:10:17;-1:-1:-1;;;;;5387:23:17;;5424:12;:10;:12::i;:::-;5387:126;;;-1:-1:-1;5387:126:17;;;-1:-1:-1;;;;;;5387:126:17;;;-1:-1:-1;;;;;5387:126:17;;;;;;;;5458:4;5387:126;;;;5478:24;;;5387:126;;;;;;;;;;;;;;;;;;;-1:-1:-1;5387:126:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5607:16:17;;-1:-1:-1;5607:7:17;5619:3;5607:11;:16::i;:::-;5597:26;-1:-1:-1;5638:18:17;;5634:100;;5690:27;;;-1:-1:-1;;;5690:27:17;;;;-1:-1:-1;;;;;5670:10:17;:19;;;;;;5690:25;;:27;;;;;;;;;;;;;;5670:19;5690:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5690:27:17;5670:64;;;-1:-1:-1;5670:64:17;;;-1:-1:-1;;;;;;5670:64:17;;;-1:-1:-1;;;;;5670:64:17;;;;;;;;;;;;;;;;;;;5690:27;;5670:64;;;;;;;-1:-1:-1;5670:64:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5634:100:17;5759:11;;:24;;5775:7;5759:15;:24::i;:::-;5745:11;:38;;;;5794:7;5820:124;;;;;;;;5860:12;:10;:12::i;:::-;-1:-1:-1;;;;;5820:124:17;;;;;5897:11;:25;5909:12;:10;:12::i;:::-;-1:-1:-1;;;;;5897:25:17;;;;;;;;;;;;;;;;;-1:-1:-1;5897:25:17;;;:32;5820:124;;;5794:160;;-1:-1:-1;5794:160:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5794:160:17;;;;;;;;;;;;;;;;5965:11;;5977:12;:10;:12::i;:::-;-1:-1:-1;;;;;5965:25:17;;;;;;;;;;;;;;;-1:-1:-1;5965:25:17;;;6009:572;;;;;;;;;;6099:15;6009:572;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6009:572:17;;;;;;;;;;;;;;;;;;;;;;;;5965:626;;-1:-1:-1;5965:626:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5965:626:17;;;;;;;;;;;-1:-1:-1;;5965:626:17;;;;;;;;;;6606:11;;6621:14;-1:-1:-1;6602:149:17;;6729:11;:9;:11::i;:::-;6772:12;:10;:12::i;:::-;6766:46;;;;;;;;;;;;;;-1:-1:-1;;;;;6766:46:17;;;;;;;;;;;;;;;;4484:2335;;;;;;:::o;28199:120::-;28248:7;28257;28283:29;28299:12;:10;:12::i;:::-;28283:15;:29::i;:::-;28276:36;;;;28199:120;;:::o;2399:21::-;;;-1:-1:-1;;;2399:21:17;;;;;:::o;1666:26::-;;;;:::o;1535:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1535:60:17;;-1:-1:-1;1535:60:17;;;;;;;;;;;;;;;;;:::o;9390:829::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9528:1:::1;9511:14;:18;9503:64;;;;-1:-1:-1::0;;;9503:64:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9606:1;9594:9;:13;9586:51;;;::::0;;-1:-1:-1;;;9586:51:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9668:15;9656:8;:27;;9648:60;;;::::0;;-1:-1:-1;;;9648:60:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9648:60:17;;;;;;;;;;;;;::::1;;9766:25;9794:15;:13;:15::i;:::-;9766:43;;9819;9833:17;9852:9;9819:13;:43::i;:::-;9917:17;9937:32;9959:9;9937:21;:32::i;:::-;9917:52:::0;-1:-1:-1;9980:29:17::1;10024:35;10038:20;9917:52:::0;10054:3:::1;10038:15;:20::i;:::-;10024:9:::0;;:13:::1;:35::i;:::-;9980:79;;10070:142;10117:4;10136:9;10159:21;10194:8;10070:25;:142::i;:::-;30758:1;;;9390:829:::0;;:::o;30042:558::-;30110:13;;-1:-1:-1;;;30110:13:17;;;;30089:81;;;;;-1:-1:-1;;;30089:81:17;;;;;;;;;;;;-1:-1:-1;;;30089:81:17;;;;;;;;;;;;;;;30235:21;30259:36;30282:12;:10;:12::i;:::-;30259:22;:36::i;:::-;30235:60;-1:-1:-1;30309:17:17;;30305:289;;-1:-1:-1;;;;;30342:10:17;:19;;30362:12;:10;:12::i;:::-;30376:13;30342:48;;;;;;;;;;;;;-1:-1:-1;;;;;30342:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30491:36:17;;-1:-1:-1;30514:12:17;:10;:12::i;:::-;30491:22;:36::i;:::-;30555:12;:10;:12::i;:::-;30547:36;;;;;;;;-1:-1:-1;;;;;30547:36:17;;;;;;;;;;;;;;30305:289;30042:558;:::o;13978:108::-;30678:11;;-1:-1:-1;;;;;30678:11:17;30662:12;:10;:12::i;:::-;-1:-1:-1;;;;;30662:27:17;;30641:107;;;;-1:-1:-1;;;30641:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14035:9:::1;:16:::0;;-1:-1:-1;;;;14035:16:17::1;-1:-1:-1::0;;;14035:16:17::1;::::0;;14066:13:::1;::::0;::::1;::::0;-1:-1:-1;;14066:13:17::1;13978:108::o:0;1068:85:1:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:1;;1068:85::o;707:174:11:-;798:9;;:27;;;-1:-1:-1;;;798:27:11;;;;754:7;;;;-1:-1:-1;;;;;798:9:11;;;;:25;;:27;;;;;-1:-1:-1;;798:27:11;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;798:27:11;;;;-1:-1:-1;852:1:11;843:10;;;:31;;873:1;843:31;;;864:5;843:31;836:38;;;707:174;:::o;27609:120:17:-;27658:7;27667;27693:29;27709:12;:10;:12::i;:::-;27693:15;:29::i;1850:46::-;1895:1;1850:46;:::o;28324:154::-;28393:7;28402;28428:43;28446:12;:10;:12::i;:::-;28460:10;28428:17;:43::i;:::-;28421:50;;;;28324:154;;;;:::o;2296:25::-;;;-1:-1:-1;;;2296:25:17;;;;;:::o;1973:41::-;2013:1;1973:41;:::o;2373:20::-;;;-1:-1:-1;;;2373:20:17;;;;;:::o;1664:230:7:-;1767:16;;;1781:1;1767:16;;;1715;1767;;;;;1715;1743:21;;1767:16;1781:1;1767:16;;;;;;;;-1:-1:-1;;1803:21:7;;1793:7;;;;-1:-1:-1;;;;;;1803:21:7;;1793:7;;-1:-1:-1;1803:21:7;;1793:7;;;;-1:-1:-1;;;;;1793:31:7;;;:7;;;;;;;;;:31;1844:21;;1834:7;;1844:21;;;1834:7;;-1:-1:-1;;1834:7:7;;;;;;-1:-1:-1;;;;;1834:31:7;;;;:7;;;;;;;;;;;:31;1883:4;1664:230;-1:-1:-1;1664:230:7:o;1207:33:17:-;;;:::o;8205:1179::-;8273:14;8289:17;8310:43;8328:12;:10;:12::i;8310:43::-;8272:81;;-1:-1:-1;8272:81:17;-1:-1:-1;8368:10:17;;8364:264;;8483:44;;;-1:-1:-1;;;8483:44:17;;-1:-1:-1;;;;;8512:13:17;8483:44;;;;;;;;8531:6;;8483:10;:20;;;;:44;;;;;;;;;;;;;;:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8483:44:17;:54;8479:139;;-1:-1:-1;;;;;8557:13:17;:24;;8582:12;:10;:12::i;:::-;8596:6;8557:46;;;;;;;;;;;;;-1:-1:-1;;;;;8557:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8479:139;8646:55;8676:12;:10;:12::i;:::-;8690:10;8646:29;:55::i;:::-;8725:9;;-1:-1:-1;;;8725:9:17;;;;8721:600;;;8767:14;:18;8763:207;;8809:13;;8805:78;;-1:-1:-1;;;;;8832:8:17;:17;;8850:12;:10;:12::i;:::-;8864:9;8832:42;;;;;;;;;;;;;-1:-1:-1;;;;;8832:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8832:42:17;8824:59;;;;;-1:-1:-1;;;8824:59:17;;;;;;;;;;;;;;;-1:-1:-1;;;8824:59:17;;;;;;;;;;;;;;;8902:53;8930:12;:10;:12::i;:::-;8944:10;8902:27;:53::i;:::-;8985:21;9009:50;9034:12;:10;:12::i;:::-;9048:10;9009:24;:50::i;:::-;8985:74;-1:-1:-1;9077:17:17;;9073:238;;-1:-1:-1;;;;;9114:10:17;:19;;9134:12;:10;:12::i;:::-;9148:13;9114:48;;;;;;;;;;;;;-1:-1:-1;;;;;9114:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9181:55:17;;-1:-1:-1;9211:12:17;:10;:12::i;:::-;9225:10;9181:29;:55::i;:::-;9268:12;:10;:12::i;:::-;9260:36;;;;;;;;-1:-1:-1;;;;;9260:36:17;;;;;;;;;;;;;;9073:238;8721:600;;9345:12;:10;:12::i;:::-;9336:41;;;;;;;;;;;;;;-1:-1:-1;;;;;9336:41:17;;;;;;;;;;;;;;;;8205:1179;;;:::o;1010:22::-;;;;;;;;;;;;;;;-1:-1:-1;;1010:22:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6825:1374::-;6868:14;6884:17;6905:29;6921:12;:10;:12::i;6905:29::-;6867:67;;-1:-1:-1;6867:67:17;-1:-1:-1;6949:10:17;;6945:262;;6979:44;;;-1:-1:-1;;;6979:44:17;;-1:-1:-1;;;;;7008:13:17;6979:44;;;;;;;;7027:6;;6979:10;:20;;;;:44;;;;;;;;;;;;;;:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6979:44:17;:54;6975:222;;-1:-1:-1;;;;;7136:13:17;:24;;7161:12;:10;:12::i;:::-;7175:6;7136:46;;;;;;;;;;;;;-1:-1:-1;;;;;7136:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6975:222;7307:36;7330:12;:10;:12::i;:::-;7307:22;:36::i;:::-;7367:9;;-1:-1:-1;;;7367:9:17;;;;7363:773;;;7397:14;:18;7393:278;;7439:13;;7435:78;;-1:-1:-1;;;;;7462:8:17;:17;;7480:12;:10;:12::i;:::-;7494:9;7462:42;;;;;;;;;;;;;-1:-1:-1;;;;;7462:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7462:42:17;7454:59;;;;;-1:-1:-1;;;7454:59:17;;;;;;;;;;;;;;;-1:-1:-1;;;7454:59:17;;;;;;;;;;;;;;;7622:34;7643:12;:10;:12::i;:::-;7622:20;:34::i;:::-;7743:21;7767:36;7790:12;:10;:12::i;7767:36::-;7743:60;-1:-1:-1;7821:17:17;;7817:309;;-1:-1:-1;;;;;7858:10:17;:19;;7878:12;:10;:12::i;:::-;7892:13;7858:48;;;;;;;;;;;;;-1:-1:-1;;;;;7858:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8015:36:17;;-1:-1:-1;8038:12:17;:10;:12::i;8015:36::-;8083:12;:10;:12::i;:::-;8075:36;;;;;;;;-1:-1:-1;;;;;8075:36:17;;;;;;;;;;;;;;7817:309;7363:773;;8160:12;:10;:12::i;:::-;8151:41;;;;;;;;;;;;;;-1:-1:-1;;;;;8151:41:17;;;;;;;;;;;;;;;;6825:1374;;:::o;11345:594::-;11403:7;11426:11;;11441:1;11426:16;11422:30;;;-1:-1:-1;11451:1:17;11444:8;;11422:30;11462:26;11508:9;11503:327;11527:7;:14;11523:18;;11503:327;;;11562:37;11618:11;:37;11630:7;11638:1;11630:10;;;;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;11630:24:17;11618:37;;;;;;;;;;;;11656:7;:10;;11664:1;;11656:10;;;;;;;;;;;;;;;;:16;;;11618:55;;;;;;;;;;;;;;;;;11562:111;;;;;;;;11618:55;;;;;;;11562:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11709:110:17;;11749:56;;11562:111;11749:30;:56::i;:::-;11709:18;;:22;:110::i;:::-;11688:131;-1:-1:-1;;11543:3:17;;11503:327;;;-1:-1:-1;11884:11:17;;11861:35;;:18;;:22;:35::i;657:118:8:-;731:12;;:37;;;-1:-1:-1;;;731:37:8;;762:4;731:37;;;;;;-1:-1:-1;;;;;;;731:12:8;;-1:-1:-1;;731:37:8;;;;;;;;;;;;;;:12;:37;;;;;;;;;;2264:26:17;;;-1:-1:-1;;;;;2264:26:17;;:::o;1816:28::-;;;;:::o;2426:21::-;;;-1:-1:-1;;;2426:21:17;;;;;:::o;28034:159::-;28110:7;28136:50;28161:12;:10;:12::i;:::-;28175:10;28136:24;:50::i;1630:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1630:29:17;;;;-1:-1:-1;1630:29:17;:::o;2021:46::-;;;:::o;877:38::-;;;:::o;2073:43::-;;;:::o;27324:115::-;27375:7;27401:31;27419:12;:10;:12::i;:::-;27401:17;:31::i;:::-;27394:38;;27324:115;:::o;27734:164::-;27808:7;27817;27843:48;27866:12;:10;:12::i;:::-;27880:10;27843:22;:48::i;500:132:11:-;580:9;;:20;;;-1:-1:-1;;;580:20:11;;;;546:5;;;;-1:-1:-1;;;;;580:9:11;;;;:18;;:20;;;;;;;;;;;;;;;:9;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;580:20:11;;-1:-1:-1;;500:132:11;:::o;2454:41:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2454:41:17;:::o;1994:240:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2082:22:1;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:1;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:1::1;-1:-1:-1::0;;;;;2210:17:1;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2223:34:17:-;;;;:::o;781:100:8:-;861:12;;-1:-1:-1;;;;;861:12:8;;781:100::o;1601:23:17:-;;;;;;;;;;;;27904:125;27960:7;27986:36;28009:12;598:104:5;685:10;598:104;:::o;14092:459:17:-;14198:7;14238:13;;14225:10;:26;14221:324;;;14296:13;;14271:21;:10;14286:5;14271:14;:21::i;:::-;:38;14267:118;;-1:-1:-1;14318:1:17;14311:8;;14267:118;14371:13;;14345:40;;:21;:10;14360:5;14345:14;:21::i;:40::-;14338:47;;;;14221:324;14445:13;;14420:21;:10;14435:5;14420:14;:21::i;:::-;:38;14416:118;;-1:-1:-1;14467:1:17;14460:8;;14416:118;14494:40;14512:21;:10;14527:5;14512:14;:21::i;:::-;14494:13;;;:17;:40::i;12022:90::-;12062:8;:15;;-1:-1:-1;;;;12062:15:17;-1:-1:-1;;;12062:15:17;;;12093:12;;;;-1:-1:-1;;12093:12:17;12022:90::o;15568:884::-;-1:-1:-1;;;;;15748:19:17;;15686:7;15748:19;;;:11;:19;;;;;:31;;15686:7;;15748:19;15768:10;;15748:31;;;;;;;;;;;;;;15709:70;;;;;;;;15748:31;;;;;;;15709:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15812:9:17;15824:8;15812:20;15835:12;15812:35;;15887:15;:30;-1:-1:-1;15887:63:17;;15935:15;15887:63;;;15920:12;15887:63;15858:92;;15961:19;15983:44;16006:9;:20;;;15983:22;:44::i;:::-;15961:66;-1:-1:-1;16161:22:17;16186:154;16218:25;:8;15961:66;16218:12;:25::i;:::-;16268:20;;;;16257:32;;:6;;:10;:32::i;:::-;16303:23;;16186:18;:154::i;:::-;16161:179;;16368:45;16387:9;:25;;;16368:14;:18;;:45;;;;:::i;:::-;16351:62;15568:884;-1:-1:-1;;;;;;;;15568:884:17:o;2682:175:2:-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:2:o;3530:215::-;3588:7;3611:6;3607:20;;-1:-1:-1;3626:1:2;3619:8;;3607:20;3649:5;;;3653:1;3649;:5;:1;3672:5;;;;;:10;3664:56;;;;-1:-1:-1;;;3664:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:150;4267:7;4298:1;4294;:5;4286:44;;;;;-1:-1:-1;;;4286:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;;4209:150;-1:-1:-1;;;4209:150:2:o;227:125:6:-;290:7;316:29;215:5;316:11;:3;324:2;316:7;:11::i;3128:155:2:-;3186:7;3218:1;3213;:6;;3205:49;;;;;-1:-1:-1;;;3205:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3271:5:2;;;3128:155::o;28484:452:17:-;28592:7;28601;28624:23;28677:12;28662;:27;:64;;28725:1;28662:64;;;28692:30;:12;28709;28692:16;:30::i;:::-;28624:102;-1:-1:-1;28740:20:17;28736:69;;28784:1;28787:6;28776:18;;;;;;;28736:69;28835:29;:6;28848:15;28835:12;:29::i;:::-;28878:41;28889:29;:6;28902:15;28889:12;:29::i;:::-;28878:6;;:10;:41::i;:::-;28814:115;;;;;28484:452;;;;;;:::o;26245:501::-;26333:7;26342;26498:19;26527:22;26559:21;26583:25;26601:6;26583:17;:25::i;:::-;26559:49;;26650:23;26666:6;26650:15;:23::i;:::-;26618:55;;-1:-1:-1;26618:55:17;-1:-1:-1;26692:30:17;:13;26618:55;26692:17;:30::i;:::-;26684:55;-1:-1:-1;26724:14:17;;-1:-1:-1;;;26245:501:17;;;:::o;496:155:8:-;568:12;;:34;;;-1:-1:-1;;;568:34:8;;-1:-1:-1;;;;;568:34:8;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;;568:34:8;;;;;;;;;;;;;;-1:-1:-1;568:12:8;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:27:8;;;;;;;;-1:-1:-1;;;;;617:27:8;;;;;;;;;568:34;617:27;;;496:155;;:::o;821:433:7:-;-1:-1:-1;;;;;993:17:7;;985:26;;;;;;1080:10;;-1:-1:-1;;;;;1080:10:7;:35;1129:10;1153;1177:20;:18;:20::i;:::-;1211:3;1228:9;1080:167;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1080:167:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1080:167:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1080:167:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:433;;;;:::o;24414:564:17:-;-1:-1:-1;;;;;24574:19:17;;24509:7;24574:19;;;:11;:19;;;;;;;;24532:61;;;;;;;;;;;;;;;;;24509:7;;;;24532:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24607:10;:17;24628:1;24607:22;24603:36;;;24638:1;24631:8;;;;;24603:36;24650:26;24695:9;24690:246;24714:10;:17;24710:1;:21;24690:246;;;24757:10;24768:1;24757:13;;;;;;;;;;;;;;:24;;;24752:174;;24822:89;24866:10;24877:1;24866:13;;;;;;;;;;;;;;:27;;;24822:18;:22;;:89;;;;:::i;:::-;24801:110;;24752:174;24733:3;;24690:246;;25628:294;-1:-1:-1;;;;;25738:19:17;;25695:40;25738:19;;;:11;:19;;;;;25771:17;;25767:35;;25795:7;;;25767:35;25817:9;25812:104;25836:17;;25832:21;;25812:104;;;25901:4;25874:10;25885:1;25874:13;;;;;;;;;;;;;;;;:24;:13;;;;;:24;:31;;;;;;;-1:-1:-1;;25874:31:17;;;;;;;;;:24;25855:3;25812:104;;;;25628:294;;:::o;20489:1389::-;20684:9;;20577:7;;;;-1:-1:-1;;;20684:9:17;;;;20679:29;;-1:-1:-1;20703:1:17;;-1:-1:-1;20703:1:17;20695:13;;20679:29;-1:-1:-1;;;;;20761:19:17;;20719:39;20761:19;;;:11;:19;;;;;;;;20719:61;;;;;;;;;;;;;;;;;;;20761:19;;20719:61;:39;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20854:10;:17;20875:1;20854:22;20850:41;;;20886:1;20889;20878:13;;;;;;;20850:41;20991:13;;20902:30;;20947:58;;20948:37;:14;20967:17;20948:18;:37::i;20947:58::-;20902:103;;21016:14;21044:17;21081:9;21076:591;21100:10;:17;21096:1;:21;21076:591;;;21228:10;21239:1;21228:13;;;;;;;;;;;;;;:34;;;21223:434;;21283:16;21302:40;21323:10;21334:1;21323:13;;;;;;;;;;;;;;:18;;;21302:20;:40::i;:::-;21283:59;-1:-1:-1;21370:93:17;21410:27;:11;21283:59;21410:17;:27::i;:::-;21370:6;;:10;:93::i;:::-;21361:102;-1:-1:-1;21494:140:17;21537:71;:22;21599:8;21537:61;:71::i;21494:140::-;21482:152;;21223:434;;21119:3;;21076:591;;;-1:-1:-1;21681:19:17;;:23;21677:158;;21742:19;;21729:33;;:6;;:12;:33::i;:::-;21720:42;;21788:36;21804:19;;21788:9;:15;;:36;;;;:::i;:::-;21776:48;;21677:158;21853:6;;-1:-1:-1;21861:9:17;-1:-1:-1;;;20489:1389:17;;;:::o;26757:561::-;26867:7;26876;27032:19;27061:22;27093:21;27117:44;27142:6;27150:10;27117:24;:44::i;:::-;27093:68;;27203:42;27226:6;27234:10;27203:22;:42::i;:::-;27171:74;;-1:-1:-1;27171:74:17;-1:-1:-1;27264:30:17;:13;27171:74;27264:17;:30::i;:::-;27256:55;27296:14;;-1:-1:-1;26757:561:17;;-1:-1:-1;;;;;26757:561:17:o;19177:542::-;-1:-1:-1;;;;;19314:19:17;;19271:40;19314:19;;;:11;:19;;;;;19347:17;;19343:35;;19371:7;;;19343:35;19405:17;;19391:31;;19387:44;;19424:7;;;19387:44;19441:22;19466:45;19492:6;19500:10;19466:25;:45::i;:::-;19441:70;;19566:15;19522:10;19533;19522:22;;;;;;;;;;;;;;;;;;:41;;:59;;;;19632:80;19688:14;19632:10;19643;19632:22;;;;;;;;;;;;;;;;;;:38;;;:42;;:80;;;;:::i;:::-;19591:10;19602;19591:22;;;;;;;;;;;;;;;;;;:38;;:121;;;;19177:542;;;;;:::o;24017:331::-;-1:-1:-1;;;;;24152:19:17;;24109:40;24152:19;;;:11;:19;;;;;24185:17;;24181:35;;24209:7;;;24181:35;24229:10;24240;24229:22;;;;;;;;;;;;;;;;:43;:22;;;;;:43;;;;24225:56;;;24274:7;;;24225:56;24337:4;24291:10;24302;24291:22;;;;;;;;;;;;;;;;;;;;;:43;;:50;;-1:-1:-1;;24291:50:17;;;;;;;;;;-1:-1:-1;;;24017:331:17:o;25049:573::-;-1:-1:-1;;;;;25231:19:17;;25166:7;25231:19;;;:11;:19;;;;;;;;25189:61;;;;;;;;;;;;;;;;;25166:7;;;;25189:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25264:10;:17;25285:1;25264:22;25260:36;;;25295:1;25288:8;;;;;25260:36;25324:10;:17;25310:10;:31;25306:45;;25350:1;25343:8;;;;;25306:45;25363:26;25409:10;25420;25409:22;;;;;;;;;;;;;;:33;;;25404:176;;25479:90;25519:10;25530;25519:22;;;;;;;;;;;;;;:36;;;25479:18;:22;;:90;;;;:::i;:::-;25458:111;;25404:176;25597:18;25049:573;-1:-1:-1;;;;25049:573:17:o;25928:311::-;-1:-1:-1;;;;;26065:19:17;;26022:40;26065:19;;;:11;:19;;;;;26098:17;;26094:35;;26122:7;;;26094:35;26156:17;;26142:31;;26138:44;;26175:7;;;26138:44;26228:4;26192:10;26203;26192:22;;;;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;25928:311;;;:::o;18657:514::-;-1:-1:-1;;;;;18767:19:17;;18724:40;18767:19;;;:11;:19;;;;;18800:17;;18796:35;;18824:7;;;18796:35;18846:9;18841:324;18865:17;;18861:21;;18841:324;;;18903:22;18928:36;18954:6;18962:1;18928:25;:36::i;:::-;18903:61;;19014:15;18979:10;18990:1;18979:13;;;;;;;;;;;;;;;;;;:32;;:50;;;;19075:79;19126:14;19075:10;19086:1;19075:13;;;;;;;:79;19043:10;19054:1;19043:13;;;;;;;;;;;;;;;;:29;:13;;;;;:29;:111;-1:-1:-1;18884:3:17;;18841:324;;23709:302;-1:-1:-1;;;;;23817:19:17;;23774:40;23817:19;;;:11;:19;;;;;23850:17;;23846:35;;23874:7;;;23846:35;23896:9;23891:114;23915:17;;23911:21;;23891:114;;;23990:4;23953:10;23964:1;23953:13;;;;;;;;;;;;;;;;;;;;;:34;;:41;;-1:-1:-1;;23953:41:17;;;;;;;;;;-1:-1:-1;23934:3:17;23891:114;;22225:1478;22447:9;;22340:7;;;;-1:-1:-1;;;22447:9:17;;;;22442:29;;-1:-1:-1;22466:1:17;;-1:-1:-1;22466:1:17;22458:13;;22442:29;-1:-1:-1;;;;;22524:19:17;;22482:39;22524:19;;;:11;:19;;;;;;;;22482:61;;;;;;;;;;;;;;;;;;;22524:19;;22482:61;:39;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22617:10;:17;22638:1;22617:22;22613:41;;;22649:1;22652;22641:13;;;;;;;22613:41;22746:10;:17;22732:10;:31;22728:49;;22773:1;22775;22765:12;;;;;;;22728:49;22912:10;22923;22912:22;;;;;;;;;;;;;;:43;;;22908:62;;;22965:1;22968;22957:13;;;;;;;22908:62;23070:13;;22981:30;;23026:58;;23027:37;:14;23046:17;23027:18;:37::i;23026:58::-;22981:103;;23095:14;23123:17;23155:16;23174:49;23195:10;23206;23195:22;;;;;;;23174:49;23155:68;-1:-1:-1;23243:85:17;23279:27;:11;23155:68;23279:17;:27::i;23243:85::-;23234:94;-1:-1:-1;23351:128:17;23390:67;:22;23448:8;23390:57;:67::i;:::-;23351:9;;:13;:128::i;:::-;23506:19;;23339:140;;-1:-1:-1;23506:23:17;23502:158;;23567:19;;23554:33;;:6;;:12;:33::i;:::-;23545:42;;23613:36;23629:19;;23613:9;:15;;:36;;;;:::i;:::-;23601:48;;23502:158;-1:-1:-1;23678:6:17;;;;-1:-1:-1;22225:1478:17;-1:-1:-1;;;;;22225:1478:17:o;19725:758::-;19824:7;19932:17;19927:57;;-1:-1:-1;19972:1:17;19965:8;;19927:57;19994:16;20013:23;:9;20027:8;20013:13;:23::i;:::-;19994:42;-1:-1:-1;20046:18:17;20067:24;19994:42;20080:10;20067:12;:24::i;:::-;20046:45;;20119:8;20106:10;:21;20102:375;;;20150:1;20143:8;;;;;;20102:375;20185:8;20172:10;:21;20168:309;;;20216:3;20209:10;;;;;;20168:309;20253:8;20240:10;:21;20236:241;;;20284:3;20277:10;;;;;;20236:241;20321:9;20308:10;:22;20304:173;;;20353:3;20346:10;;;;;;20304:173;20390:9;20377:10;:22;20373:104;;;20422:3;20415:10;;;;;;20373:104;20463:3;20456:10;;;;;;16458:1272;16610:7;16658:8;16610:7;16693:42;16694:16;16729:5;16693:35;:42::i;:::-;16677:58;-1:-1:-1;16746:14:17;16763:102;16860:4;16763:79;16828:13;16763:79;:12;16793:15;16763:29;:46::i;:::-;:64;;:79::i;:102::-;16746:119;-1:-1:-1;16884:13:17;16900:73;16968:4;16900:50;:15;16948:1;16933:16;;16900:32;:50::i;:73::-;16884:89;-1:-1:-1;16984:13:17;17000:74;17072:1;17000:54;17052:1;17001:15;;;;17035:18;;17000:34;:54::i;:74::-;16984:90;;17085:13;17101:101;17200:1;17101:81;17168:13;17101:49;17148:1;17131:15;:18;17101:12;:29;;:49;;;;:::i;:101::-;17085:117;-1:-1:-1;17213:13:17;17229:75;17302:1;17229:55;17282:1;17230:18;;;;17267:16;;17229:37;:55::i;:75::-;17213:91;-1:-1:-1;17316:22:17;17341:39;17213:91;17341:28;17363:5;17341:28;:5;17351:6;17341:9;:17::i;:::-;:21;;:28::i;:39::-;17316:64;-1:-1:-1;17408:36:17;17438:5;17408:25;17316:64;17427:5;17408:18;:25::i;:36::-;17391:53;-1:-1:-1;17472:79:17;17538:12;17472:48;17391:53;17504:15;17472:31;:48::i;:79::-;17455:96;-1:-1:-1;17579:111:17;17683:6;17579:86;17663:1;17648:16;;17579:86;17455:96;17611:18;17579:31;:51::i;:111::-;17562:128;16458:1272;-1:-1:-1;;;;;;;;;;;;16458:1272:17:o;21884:327::-;21976:7;;21999:187;22023:16;:23;22019:27;;21999:187;;;22080:16;22097:1;22080:19;;;;;;;;;;;;;;;;;;:24;;;22071:5;:33;22067:109;;22131:16;22148:1;22131:19;;;;;;;;;;;;;;;;;;:30;;;22124:37;;;;;22067:109;22048:3;;21999:187;;;-1:-1:-1;22203:1:17;;21884:327;-1:-1:-1;;21884:327:17:o;540:184:6:-;603:7;626:8;622:22;;-1:-1:-1;643:1:6;636:8;;622:22;658:7;654:23;;-1:-1:-1;674:3:6;667:10;;654:23;694;702:14;708:3;713:2;702:5;:14::i"
      },
      "gasEstimates": {
        "creation": {
          "codeDepositCost": "3845800",
          "executionCost": "infinite",
          "totalCost": "infinite"
        },
        "external": {
          "_getIndexedStakingReward(address,uint256)": "infinite",
          "_getStakingReward(address)": "infinite",
          "btcToken()": "infinite",
          "claimReward()": "infinite",
          "collaborativeRange()": "infinite",
          "collaborativeReward()": "1086",
          "declareEmergency()": "infinite",
          "deletePool()": "infinite",
          "emergentWithdraw()": "infinite",
          "endPool()": "infinite",
          "getAveragePricePrediction()": "infinite",
          "getBTCBalance()": "infinite",
          "getDecimals()": "infinite",
          "getEstimatedBTCForUSD(uint256)": "infinite",
          "getIndexedPrizeReward(uint256)": "infinite",
          "getIndexedReward(uint256)": "infinite",
          "getIndexedStakedBalance(uint256)": "infinite",
          "getIndexedStakingReward(uint256)": "infinite",
          "getLatestPrice()": "infinite",
          "getPathForUSDToBTC()": "infinite",
          "getPrizeReward()": "infinite",
          "getStakers()": "infinite",
          "getStakingReward()": "infinite",
          "getTotalReward()": "infinite",
          "getTotalStakedBalance()": "infinite",
          "getUSDBalance()": "infinite",
          "getUSDToken()": "1147",
          "getswapRouter()": "1173",
          "hasUnStaked(address,uint256)": "infinite",
          "indexedClaimReward(uint256)": "infinite",
          "isAnEmergency()": "1139",
          "isDeleted()": "1139",
          "isEnhancedEnabled()": "infinite",
          "isLocked()": "1095",
          "isMatured()": "1094",
          "lockPool()": "infinite",
          "lockTime()": "infinite",
          "maturingPrice()": "1088",
          "maturityTime()": "infinite",
          "minimumStakeAmount()": "infinite",
          "oracleDecimal()": "332",
          "owner()": "1128",
          "poolCreator()": "1105",
          "poolType()": "infinite",
          "potentialCollabReward()": "infinite",
          "predictions(address,uint256)": "8050",
          "prizeAmount()": "infinite",
          "prizeRewardRates(uint256)": "2920",
          "purchaseBTC(uint256,uint256)": "infinite",
          "renounceOwnership()": "24367",
          "rewardManager()": "infinite",
          "setSortedStakers(address[25],uint256[25])": "infinite",
          "sizeAllocation()": "infinite",
          "sizeLimitRangeRate()": "266",
          "sortedStakers(uint256)": "2899",
          "stake(uint256,uint256)": "infinite",
          "stakeApr()": "infinite",
          "stakeTaxRate()": "infinite",
          "stakers(uint256)": "2964",
          "startDate()": "infinite",
          "totalStaked()": "1087",
          "totemToken()": "infinite",
          "transferOwnership(address)": "infinite",
          "updateMaturingPrice()": "infinite",
          "usdPrizeAmount()": "infinite",
          "withdrawStuckTokens(address,uint256,address)": "infinite"
        },
        "internal": {
          "_calcStakingReturn(uint256,uint256,uint256)": "infinite",
          "_getDifference(uint256,uint256)": "infinite",
          "_getEnhancedRewardRate(uint256)": "infinite",
          "_getIndexedPrizeReward(address,uint256)": "infinite",
          "_getIndexedReward(address,uint256)": "infinite",
          "_getIndexedStakedBalance(address,uint256)": "infinite",
          "_getPercentageReward(uint256)": "infinite",
          "_getPrizeReward(address)": "infinite",
          "_getStakingRewardPerStake(address,uint256)": "infinite",
          "_getTotalReward(address)": "infinite",
          "_getTotalStakedBalance(address)": "infinite",
          "_lockPool()": "21622",
          "_withdrawIndexedPrizeReward(address,uint256)": "24408",
          "_withdrawIndexedStakedBalance(address,uint256)": "23565",
          "_withdrawIndexedStakingReward(address,uint256)": "infinite",
          "_withdrawPrizeReward(address)": "infinite",
          "_withdrawStakedBalance(address)": "infinite",
          "_withdrawStakingReward(address)": "infinite",
          "getPredictionRange(uint256)": "infinite",
          "getStakingTax(uint256,uint256)": "infinite"
        }
      },
      "methodIdentifiers": {
        "_getIndexedStakingReward(address,uint256)": "765e14d8",
        "_getStakingReward(address)": "5b9f4f90",
        "btcToken()": "074bc101",
        "claimReward()": "b88a802f",
        "collaborativeRange()": "eb850ae1",
        "collaborativeReward()": "f3d9dc0d",
        "declareEmergency()": "31e244e5",
        "deletePool()": "8bfbbcbe",
        "emergentWithdraw()": "8a9920b7",
        "endPool()": "2d42cf7d",
        "getAveragePricePrediction()": "bf852196",
        "getBTCBalance()": "31769ef7",
        "getDecimals()": "f0141d84",
        "getEstimatedBTCForUSD(uint256)": "09082c29",
        "getIndexedPrizeReward(uint256)": "eee39403",
        "getIndexedReward(uint256)": "9d9a62df",
        "getIndexedStakedBalance(uint256)": "d83db49f",
        "getIndexedStakingReward(uint256)": "1898a1a7",
        "getLatestPrice()": "8e15f473",
        "getPathForUSDToBTC()": "a508bc71",
        "getPrizeReward()": "9234a39a",
        "getStakers()": "43352d61",
        "getStakingReward()": "eda2d424",
        "getTotalReward()": "7d1fcbfa",
        "getTotalStakedBalance()": "fd8fd47f",
        "getUSDBalance()": "c1201054",
        "getUSDToken()": "f5e96fc9",
        "getswapRouter()": "2e577d07",
        "hasUnStaked(address,uint256)": "45e91319",
        "indexedClaimReward(uint256)": "b1b1e1c0",
        "isAnEmergency()": "a08b2c79",
        "isDeleted()": "d7efb6b7",
        "isEnhancedEnabled()": "4bc4eeb2",
        "isLocked()": "a4e2d634",
        "isMatured()": "7f2b6a0d",
        "lockPool()": "4026478e",
        "lockTime()": "0d668087",
        "maturingPrice()": "d025188b",
        "maturityTime()": "4e8bfdaa",
        "minimumStakeAmount()": "6b036f45",
        "oracleDecimal()": "a150194b",
        "owner()": "8da5cb5b",
        "poolCreator()": "c6c1decd",
        "poolType()": "b1dd61b6",
        "potentialCollabReward()": "e425df8c",
        "predictions(address,uint256)": "850fa7cb",
        "prizeAmount()": "785fa627",
        "prizeRewardRates(uint256)": "f1b17a8b",
        "purchaseBTC(uint256,uint256)": "857b21ee",
        "renounceOwnership()": "715018a6",
        "rewardManager()": "0f4ef8a6",
        "setSortedStakers(address[25],uint256[25])": "444a4902",
        "sizeAllocation()": "51eacbf0",
        "sizeLimitRangeRate()": "95c2ba47",
        "sortedStakers(uint256)": "de09ee20",
        "stake(uint256,uint256)": "7b0472f0",
        "stakeApr()": "aa7bcb57",
        "stakeTaxRate()": "6847d0c5",
        "stakers(uint256)": "fd5e6dd1",
        "startDate()": "0b97bc86",
        "totalStaked()": "817b1cd2",
        "totemToken()": "e8153c93",
        "transferOwnership(address)": "f2fde38b",
        "updateMaturingPrice()": "5e2e2ffc",
        "usdPrizeAmount()": "73f31703",
        "withdrawStuckTokens(address,uint256,address)": "5d2631e2"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_poolType\",\"type\":\"string\"},{\"internalType\":\"contract TotemToken\",\"name\":\"_totemToken\",\"type\":\"address\"},{\"internalType\":\"contract RewardManager\",\"name\":\"_rewardManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_btcToken\",\"type\":\"address\"},{\"internalType\":\"uint256[10]\",\"name\":\"_variables\",\"type\":\"uint256[10]\"},{\"internalType\":\"uint256[8]\",\"name\":\"_ranks\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[8]\",\"name\":\"_percentages\",\"type\":\"uint256[8]\"},{\"internalType\":\"bool\",\"name\":\"_isEnhancedEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApproveTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributedBTC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolMatured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolSorted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"btcAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"_getIndexedStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"_getStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declareEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deletePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAveragePricePrediction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBTCBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getEstimatedBTCForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedPrizeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"getIndexedStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPathForUSDToBTC\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"hasUnStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"indexedClaimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAnEmergency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnhancedEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMatured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialCollabReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithdrawalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizeRewardWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"didUnstake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"purchaseBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract RewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[25]\",\"name\":\"addrArray\",\"type\":\"address[25]\"},{\"internalType\":\"uint256[25]\",\"name\":\"indexArray\",\"type\":\"uint256[25]\"}],\"name\":\"setSortedStakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeLimitRangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedStakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePrediction\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeApr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totemToken\",\"outputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateMaturingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stuckToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getEstimatedBTCForUSD(uint256)\":{\"params\":{\"_amount\":\"Amount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDecimals()\":{\"notice\":\"Returns decimals for oracle contract\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price from oracle contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0x8344571960f250b1c03ba9f259c452b26b04370ac4723ef262969d822174bee6\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/BTCDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../PancakeSwap/IPancakeRouter.sol\\\";\\n\\n// TODO: this contract should handle other coins like ETH too\\ncontract BTCDistributor {\\n    IPancakeRouter02 internal swapRouter;\\n    address internal USDC_CONTRACT_ADDRESS;\\n    address internal WBTC_CONTRACT_ADDRESS;\\n\\n    event DistributedBTC(address indexed to, uint256 amount);\\n\\n    constructor(\\n        address swapRouterAddress,\\n        address USDCContractAddress,\\n        address wBTCContractAddress\\n    ) {\\n        swapRouter = IPancakeRouter02(swapRouterAddress);\\n        USDC_CONTRACT_ADDRESS = USDCContractAddress;\\n        WBTC_CONTRACT_ADDRESS = wBTCContractAddress;\\n    }\\n\\n    /**\\n     * @param _to Reciever address\\n     * @param _usdAmount USD Amount\\n     * @param _btcAmount BTC Amount\\n     */\\n    function transferTokensThroughSwap(\\n        address _to,\\n        uint256 _usdAmount,\\n        uint256 _btcAmount,\\n        uint256 _deadline\\n    ) internal {\\n        require(_to != address(0));\\n        // Get max USD price we can spend for this amount.\\n        swapRouter.swapExactTokensForTokens(\\n            _usdAmount,\\n            _btcAmount,\\n            getPathForUSDToBTC(),\\n            _to,\\n            _deadline\\n        );\\n    }\\n\\n    /**\\n     * @param _amount Amount\\n     */\\n    function getEstimatedBTCForUSD(uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256[] memory btcAmount =\\n            swapRouter.getAmountsOut(_amount, getPathForUSDToBTC());\\n        // since in the path the btc is the second one, so we should retuen the second one also here    \\n        return btcAmount[1];\\n    }\\n\\n    function getPathForUSDToBTC() public view returns (address[] memory) {\\n        address[] memory path = new address[](2);\\n        path[0] = USDC_CONTRACT_ADDRESS;\\n        path[1] = WBTC_CONTRACT_ADDRESS;\\n\\n        return path;\\n    }\\n\\n    // the function should be rename to getSwapRouter\\n    function getswapRouter() public view returns (address) {\\n        return address(swapRouter);\\n    }\\n}\\n\",\"keccak256\":\"0xf6d599415d5fdd448b560a389feb2cf807508be0306cf11727d52394cf793e20\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/USDRetriever.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract USDRetriever {\\n    IERC20 internal USDCContract;\\n\\n    event ReceivedTokens(address indexed from, uint256 amount);\\n    event TransferTokens(address indexed to, uint256 amount);\\n    event ApproveTokens(address indexed to, uint256 amount);\\n\\n    function setUSDToken(address _usdContractAddress) internal {\\n        USDCContract = IERC20(_usdContractAddress);\\n    }\\n\\n    function approveTokens(address _to, uint256 _amount) internal {\\n        USDCContract.approve(_to, _amount);\\n        emit ApproveTokens(_to, _amount);\\n    }\\n\\n    function getUSDBalance() external view returns (uint256) {\\n        return USDCContract.balanceOf(address(this));\\n    }\\n\\n    function getUSDToken() external view returns (address) {\\n        return address(USDCContract);\\n    }\\n}\\n\",\"keccak256\":\"0x5f65c50276ea5c113b1e51e0d646d7e91c9aa15d12214543ddd320769de308f2\",\"license\":\"UNLICENSED\"},\"contracts/ILocker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface ILocker {\\n    /**\\n     * @dev Fails if transaction is not allowed.\\n     * Return values can be ignored for AntiBot launches\\n     */\\n    function lockOrGetPenalty(address source, address dest)\\n        external\\n        returns (bool, uint256);\\n}\\n\\ninterface ILockerUser {\\n    function locker() external view returns (ILocker);\\n\\n    /**\\n     * @dev Emitted when setLocker is called.\\n     */\\n    event SetLocker(address indexed locker);\\n}\\n\\n\",\"keccak256\":\"0x51a18df7a6b1708e8d614f547eb09dd79e64093413bb0081dbb8f0f411ce0e96\",\"license\":\"UNLICENSED\"},\"contracts/PancakeSwap/IPancakeRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n}\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2b582633995bad7e354c4a36176081b0a41b234e75ed9458ac9ac53afd82e84e\",\"license\":\"UNLICENSED\"},\"contracts/Price/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceConsumer {\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * @param _oracle The chainlink node oracle address to send requests\\n     */\\n    constructor(address _oracle) {\\n        require(_oracle != address(0));\\n        priceFeed = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * Returns decimals for oracle contract\\n     */\\n    function getDecimals() external view returns (uint8) {\\n        uint8 decimals = priceFeed.decimals();\\n        return decimals;\\n    }\\n\\n    /**\\n     * Returns the latest price from oracle contract\\n     */\\n    function getLatestPrice() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return price >= 0 ? uint256(price) : 0;\\n    }\\n\\n    // TODO: a function must be added to get the price on a specific timestamp\\n    // at the moment chainlink provide a function to get the price on a round ID\\n    // but all round IDs don't return a valid price and mapping the round IDs to\\n    // timestamps is not very well defined\\n}\\n\",\"keccak256\":\"0x8c901b68ad33e7cffb2fcdfc58db252abad119fc7e404f9f7e6a485456df2380\",\"license\":\"UNLICENSED\"},\"contracts/Role/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Operator is Context {\\n    using Roles for Roles.Role;\\n\\n    event OperatorAdded(address indexed account);\\n    event OperatorRemoved(address indexed account);\\n\\n    Roles.Role private _operators;\\n\\n    constructor() {\\n        if (!isOperator(_msgSender())) {\\n            _addOperator(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            isOperator(_msgSender()),\\n            \\\"OperatorRole: caller does not have the Operator role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator(address account) public view returns (bool) {\\n        return _operators.has(account);\\n    }\\n\\n    function addOperator(address account) public onlyOperator {\\n        _addOperator(account);\\n    }\\n\\n    function renounceOperator() public {\\n        _removeOperator(_msgSender());\\n    }\\n\\n    function _addOperator(address account) internal {\\n        _operators.add(account);\\n        emit OperatorAdded(account);\\n    }\\n\\n    function _removeOperator(address account) internal {\\n        _operators.remove(account);\\n        emit OperatorRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe3ed3896ec9e9cc477f1318e9e5f109704eac51255bca6caa36e20fed6965de9\",\"license\":\"UNLICENSED\"},\"contracts/Role/Rewarder.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Rewarder is Context {\\n    using Roles for Roles.Role;\\n\\n    event RewarderAdded(address indexed account);\\n    event RewarderRemoved(address indexed account);\\n\\n    Roles.Role private _rewarders;\\n\\n    constructor() {\\n        if (!isRewarder(_msgSender())) {\\n            _addRewarder(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyRewarder() {\\n        require(\\n            isRewarder(_msgSender()),\\n            \\\"RewarderRole: caller does not have the Rewarder role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isRewarder(address account) public view returns (bool) {\\n        return _rewarders.has(account);\\n    }\\n\\n    function addRewarder(address account) public onlyRewarder {\\n        _addRewarder(account);\\n    }\\n\\n    function renounceRewarder() public {\\n        _removeRewarder(_msgSender());\\n    }\\n\\n    function _addRewarder(address account) internal {\\n        _rewarders.add(account);\\n        emit RewarderAdded(account);\\n    }\\n\\n    function _removeRewarder(address account) internal {\\n        _rewarders.remove(account);\\n        emit RewarderRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x854556cd27f92d4f52e87247d947760942df133464e01f580d4716cc64fe4e5c\",\"license\":\"UNLICENSED\"},\"contracts/Role/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping(address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x1156e37e7835772537d5dfb53649b1e39b1eff5791f6bd759664168fcc7c8462\",\"license\":\"UNLICENSED\"},\"contracts/Staking/RewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"../TotemToken.sol\\\";\\nimport \\\"../Role/Operator.sol\\\";\\nimport \\\"../Role/Rewarder.sol\\\";\\n\\ncontract RewardManager is Context, Ownable, Operator, Rewarder {\\n    TotemToken totemToken;\\n\\n    event SetOperator(address operator);\\n    event SetRewarder(address rewarder);\\n\\n    constructor(TotemToken _totemToken) {\\n        totemToken = _totemToken;\\n    }\\n\\n    function setOperator(address _newOperator) public onlyOwner {\\n        require(\\n            _newOperator != address(0),\\n            \\\"0200 New Operator address cannot be zero.\\\"\\n        );\\n\\n        addOperator(_newOperator);\\n        emit SetOperator(_newOperator);\\n    }\\n\\n    function addPool(address _poolAddress) public onlyOperator {\\n        require(\\n            _poolAddress != address(0),\\n            \\\"0210 Pool address cannot be zero.\\\"\\n        );\\n\\n        addRewarder(_poolAddress);\\n        emit SetRewarder(_poolAddress);\\n    }\\n\\n    function rewardUser(address _user, uint256 _amount) public onlyRewarder {\\n        require(_user != address(0), \\\"0230 User address cannot be zero.\\\");\\n\\n        require(totemToken.transfer(_user, _amount));\\n    }\\n}\",\"keccak256\":\"0x8022b860bf7f1c529cf76ea3c5cd6a9ea5a0ca663c40550effa98b6aa9d74d60\",\"license\":\"UNLICENSED\"},\"contracts/Staking/StakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../Price/PriceConsumer.sol\\\";\\nimport \\\"../Distribution/BTCDistributor.sol\\\";\\nimport \\\"../Distribution/USDRetriever.sol\\\";\\nimport \\\"./RewardManager.sol\\\";\\n\\ncontract StakingPool is\\n    Context,\\n    Ownable,\\n    PriceConsumer,\\n    USDRetriever,\\n    BTCDistributor\\n{\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    struct StakeWithPrediction {\\n        uint256 stakedBalance;\\n        uint256 stakedTime;\\n        uint256 amountWithdrawn;\\n        uint256 lastWithdrawalTime;\\n        uint256 pricePrediction;\\n        uint256 difference;\\n        uint256 rank;\\n        bool prizeRewardWithdrawn;\\n        bool didUnstake;\\n    }\\n\\n    struct Staker {\\n        address stakerAddress;\\n        uint256 index;\\n    }\\n\\n    struct PrizeRewardRate {\\n        uint256 rank;\\n        uint256 percentage;\\n    }\\n\\n    TotemToken public immutable totemToken;\\n    RewardManager public immutable rewardManager;\\n    IERC20 public immutable btcToken;\\n\\n    string public poolType;\\n\\n    uint256 public immutable startDate;\\n    uint256 public immutable lockTime;\\n    uint256 public immutable maturityTime;\\n\\n    uint256 public immutable sizeAllocation;\\n    uint256 public immutable stakeApr;\\n\\n    uint256 public immutable prizeAmount;\\n\\n    // usdPrizeAmount is the enabler of BTC rewarder if it would be 0 then the pool is only TOTM rewarder\\n    uint256 public immutable usdPrizeAmount;\\n\\n    uint256 public immutable stakeTaxRate;\\n    uint256 public immutable minimumStakeAmount;\\n\\n    mapping(address => StakeWithPrediction[]) public predictions;\\n    Staker[] public stakers;\\n    Staker[] public sortedStakers;\\n\\n    uint256 public totalStaked;\\n\\n    // TODO: the maturing price is not the real maturity price and it depends on\\n    // the calling endPool function\\n    uint256 public maturingPrice;\\n    uint256 public constant sizeLimitRangeRate = 5;\\n    // TODO: implement a mechanism to get the decimals from the oracle\\n    uint256 public constant oracleDecimal = 8;\\n\\n    uint256 public immutable potentialCollabReward;\\n    uint256 public immutable collaborativeRange;\\n    // based on the white paper the collaborative reward can be 20% (2000), 25% (2500) or 35% (3500)\\n    uint256 public collaborativeReward;\\n\\n    address public poolCreator;\\n    bool public isAnEmergency;\\n\\n    bool public immutable isEnhancedEnabled;\\n    bool public isLocked;\\n    bool public isMatured;\\n    bool public isDeleted;\\n\\n    PrizeRewardRate[] public prizeRewardRates;\\n\\n    event Stake(address indexed user, uint256 amount, uint256 pricePrediction);\\n\\n    event Withdraw(address indexed user, uint256 amount, uint256 btcAmount);\\n\\n    event Unstake(address indexed user, uint256 amount);\\n\\n    event PoolLocked();\\n\\n    event PoolSorted();\\n\\n    event PoolMatured();\\n    event PoolDeleted();\\n\\n    constructor(\\n        string memory _poolType,\\n        TotemToken _totemToken,\\n        RewardManager _rewardManager,\\n        address _poolCreator,\\n        address _swapRouter,\\n        address _oracleContract,\\n        address _usdToken,\\n        address _btcToken,\\n        uint256[10] memory _variables,\\n        uint256[8] memory _ranks,\\n        uint256[8] memory _percentages,\\n        bool _isEnhancedEnabled\\n    )\\n        PriceConsumer(_oracleContract)\\n        BTCDistributor(_swapRouter, _usdToken, _btcToken)\\n    {\\n\\n        poolType = _poolType;\\n\\n        totemToken = _totemToken;\\n        rewardManager = _rewardManager;\\n\\n        poolCreator = _poolCreator;\\n\\n        setUSDToken(_usdToken);\\n        btcToken = IERC20(_btcToken);\\n\\n        startDate = block.timestamp;\\n        maturityTime = _variables[0];\\n        lockTime = _variables[1];\\n\\n        // variables which are amounts now getting their decimals here not in the factory\\n        sizeAllocation = (_variables[2])*(10**18);\\n        stakeApr = _variables[3];\\n        prizeAmount = (_variables[4])*(10**18);\\n        usdPrizeAmount = (_variables[5])*(10**18);\\n        potentialCollabReward = _variables[6];\\n        collaborativeRange = _variables[7];\\n        stakeTaxRate = _variables[8];\\n        minimumStakeAmount = (_variables[9])*(10**18);   \\n\\n        isEnhancedEnabled = _isEnhancedEnabled; \\n\\n        for (uint256 i = 0; i < _ranks.length; i++) {\\n\\n            if (_percentages[i] == 0) break;\\n\\n            prizeRewardRates.push(\\n                PrizeRewardRate({\\n                    rank: _ranks[i], \\n                    percentage: _percentages[i]\\n                })\\n            );\\n        }\\n    }\\n\\n    function stake(uint256 _amount, uint256 _pricePrediction) external {\\n        require(!isLocked, \\\"0310 Pool is locked\\\");\\n        require(_amount >= minimumStakeAmount, \\\"0311 Amount can't be less than the minimum\\\");\\n\\n        uint256 limitRange = sizeAllocation.mul(sizeLimitRangeRate).div(100);\\n        uint256 taxRate = totemToken.taxRate();\\n        uint256 tax =\\n            totemToken.taxExempt(_msgSender()) ? 0 : _amount.mulBP(taxRate);\\n    \\n        require(\\n            // the total amount of stakes can exceed size allocation by 5%\\n            totalStaked.add(_amount).sub(tax) <= sizeAllocation.add(limitRange),\\n            \\\"0312 Can't stake above size allocation\\\"\\n        );\\n\\n\\n        uint256 stakeTaxAmount;\\n        // now the stakeTaxAmount is the staking tax and the _amount is initial amount minus the staking tax\\n        (stakeTaxAmount, _amount) = getStakingTax(_amount, taxRate);\\n\\n        totemToken.transferFrom(\\n            _msgSender(),\\n            address(this),\\n            (_amount + stakeTaxAmount)\\n        );\\n\\n        // This is to remove token tax (not staking tax) from the amount\\n        _amount = _amount.sub(tax);\\n\\n        if (stakeTaxAmount > 0)\\n            totemToken.transfer(totemToken.taxationWallet(), stakeTaxAmount);\\n\\n        totalStaked = totalStaked.add(_amount);\\n\\n        stakers.push(\\n            Staker({\\n                stakerAddress: _msgSender(),\\n                index: predictions[_msgSender()].length\\n            })\\n        );\\n\\n        predictions[_msgSender()].push(\\n            StakeWithPrediction({\\n                stakedBalance: _amount,\\n                stakedTime: block.timestamp,\\n                amountWithdrawn: 0,\\n                lastWithdrawalTime: block.timestamp,\\n                pricePrediction: _pricePrediction,\\n                // maybe it's better to use the max number available for rank and differece\\n                // because the 0 is the best number\\n                difference: type(uint256).max,\\n                rank: type(uint256).max,\\n                prizeRewardWithdrawn: false,\\n                didUnstake: false\\n            })\\n        );\\n\\n        if (totalStaked >= sizeAllocation) {\\n            // if the staking pool has not anymore capacity then it is locked\\n            _lockPool();\\n        }\\n\\n        emit Stake(_msgSender(), _amount, _pricePrediction);\\n    }\\n\\n    function claimReward() external {\\n        (uint256 reward, uint256 btcReward) = _getTotalReward(_msgSender());\\n\\n        if (reward > 0) {\\n            if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n                // all transfers should be in require, rewardUser is using require\\n                rewardManager.rewardUser(_msgSender(), reward);\\n            }\\n        }\\n        \\n        // _wthdraw don't withdraw actually, and only update the array in the map\\n        _withdrawStakingReward(_msgSender());\\n        \\n\\n        if (isMatured) {\\n\\n            if (usdPrizeAmount > 0) {\\n                if (btcReward > 0) require(btcToken.transfer(_msgSender(), btcReward), \\\"0320\\\");\\n\\n                // _wthdraw don't withdraw actually, and only update the array in the map\\n                _withdrawPrizeReward(_msgSender());\\n            }\\n\\n            // Users can't unstake until the pool matures\\n            uint256 stakedBalance = _getTotalStakedBalance(_msgSender());\\n            if (stakedBalance > 0) {\\n                totemToken.transfer(_msgSender(), stakedBalance);\\n\\n                // _wthdraw don't withdraw actually, and only update the array in the map\\n                _withdrawStakedBalance(_msgSender());\\n\\n                emit Unstake(_msgSender(), stakedBalance);\\n            }\\n        }\\n\\n        emit Withdraw(_msgSender(), reward, btcReward);\\n    }\\n\\n    function indexedClaimReward(uint256 stakeIndex) external {\\n        (uint256 reward, uint256 btcReward) = _getIndexedReward(_msgSender(), stakeIndex);\\n\\n        if (reward > 0) {\\n            // Send the token reward only when the rewardManager has the enough fund\\n            if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n                rewardManager.rewardUser(_msgSender(), reward);\\n            }\\n        }\\n        \\n        _withdrawIndexedStakingReward(_msgSender(), stakeIndex);\\n        \\n\\n        if (isMatured) {\\n            \\n            if (usdPrizeAmount > 0) {\\n                if (btcReward > 0) require(btcToken.transfer(_msgSender(), btcReward), \\\"0330\\\");\\n\\n                _withdrawIndexedPrizeReward(_msgSender(), stakeIndex);\\n            }\\n\\n\\n            uint256 stakedBalance = _getIndexedStakedBalance(_msgSender(), stakeIndex);\\n            if (stakedBalance > 0) {\\n                totemToken.transfer(_msgSender(), stakedBalance);\\n\\n                _withdrawIndexedStakedBalance(_msgSender(), stakeIndex);\\n\\n                emit Unstake(_msgSender(), stakedBalance);\\n            }\\n        }\\n\\n        emit Withdraw(_msgSender(), reward, btcReward);\\n    }\\n\\n    function purchaseBTC(uint256 usdAmount, uint256 deadline)\\n        external\\n        onlyPoolCreator\\n    {\\n        require(usdPrizeAmount > 0, \\\"0340 The pool is not BTC rewarder\\\");\\n        \\n        require(usdAmount > 0, \\\"0341 Amount can't be zero\\\");\\n\\n        require(deadline >= block.timestamp, \\\"0342 deadline is low\\\");\\n\\n        // This approves tokens to swap router\\n        address swapRouterAddress = getswapRouter();\\n        approveTokens(swapRouterAddress, usdAmount);\\n        // Get equivalent USD amount for BTC\\n        uint256 btcAmount = getEstimatedBTCForUSD(usdAmount);\\n\\n        uint256 btcAmountWithSlippage =\\n            btcAmount.sub(btcAmount.mulBP(300));\\n\\n        transferTokensThroughSwap(\\n            address(this),\\n            usdAmount,\\n            btcAmountWithSlippage,\\n            deadline\\n        );\\n    }\\n\\n    function getBTCBalance() public view returns (uint256) {\\n        return btcToken.balanceOf(address(this));\\n    }\\n\\n    function getPredictionRange(uint256 amount)\\n        internal\\n        pure\\n        returns (uint256)\\n    {\\n        uint256[4] memory steps =\\n            [uint256(27500), 30000, 17500, type(uint256).max];\\n        uint256[4] memory ranges = [uint256(1000), 700, 375, 200];\\n        uint256 totalRange = 0;\\n\\n        for (uint256 i = 0; i < steps.length; i++) {\\n            uint256 stepAmount =\\n                i == steps.length - 1 ? amount : steps[i].mul(10**18);\\n            uint256 step = amount > stepAmount ? stepAmount : amount;\\n            totalRange = totalRange.add(\\n                // the use of oracleDecimal -2 is because of ranges element (100 = 1 dollar range)\\n                step.mul(ranges[i]).mul(10**(oracleDecimal-2)).div(500).div(10**18)\\n            );\\n\\n            if (amount <= stepAmount) break;\\n\\n            amount = amount.sub(stepAmount);\\n        }\\n        return totalRange;\\n    }\\n\\n    // This function is to get the avg price prediction for calculating collaborative reward\\n    function getAveragePricePrediction() public view returns (uint256) {\\n        if (totalStaked == 0) return 0;\\n        uint256 avgPricePrediction = 0;\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            StakeWithPrediction memory prediction =\\n                predictions[stakers[i].stakerAddress][stakers[i].index];\\n\\n            avgPricePrediction = avgPricePrediction.add(\\n                prediction.pricePrediction.mul(prediction.stakedBalance)\\n            );\\n        }\\n\\n        avgPricePrediction = avgPricePrediction.div(totalStaked);\\n\\n        return avgPricePrediction;\\n    }\\n\\n    function lockPool() public onlyPoolCreator {\\n        _lockPool();\\n    }\\n\\n    function _lockPool() internal {\\n        isLocked = true;\\n\\n        emit PoolLocked();\\n    }\\n\\n    function updateMaturingPrice() external onlyPoolCreator {\\n\\n        require(\\n            block.timestamp >= startDate + lockTime + maturityTime,\\n            \\\"0350 Can't set maturing price before the maturity time\\\"\\n        );\\n\\n        maturingPrice = getLatestPrice();\\n    }\\n    \\n    function endPool() external onlyPoolCreator {\\n                require(\\n            block.timestamp >= startDate + lockTime + maturityTime,\\n            \\\"0360 Can't end pool before the maturity time\\\"\\n        );\\n        \\n        if (usdPrizeAmount > 0) {\\n            require(\\n                getBTCBalance() != 0, \\n                \\\"0361 BTC Rewards not available\\\"\\n            );\\n        }\\n\\n        if (stakers.length > 0) {\\n            require(\\n                sortedStakers.length != 0,\\n                \\\"0362 first should sort\\\"\\n            );\\n        }\\n\\n        // potentialCollabReward allows the admin to set the collaborateive reward \\n        if (potentialCollabReward > 0) {\\n            // the collaborative reward only gave to the pools that the average price predicted with \\n            // the accuracy of 25 $\\n            uint256 avgPricePrediction = getAveragePricePrediction();\\n            if (_getDifference(avgPricePrediction, collaborativeRange) == 0) {\\n                collaborativeReward = potentialCollabReward;\\n            }\\n        }\\n\\n        // TODO: this function should be removed\\n        // _sortStakers();\\n        uint256 max = sortedStakers.length > 25 ? 25 : sortedStakers.length;\\n        for (uint256 i = 0; i < max; i++) {\\n            predictions[sortedStakers[i].stakerAddress][sortedStakers[i].index].rank =\\n                i + 1;\\n        }\\n\\n        // there is possibility that the size allocation is not reached \\n        // and the isLocked is not set to ture\\n        isLocked = true;\\n        isMatured = true;\\n\\n        emit PoolMatured();\\n    }\\n    function deletePool() external onlyPoolCreator {\\n        isDeleted = true;\\n        emit PoolDeleted();\\n    }\\n\\n    function _getDifference(uint256 prediction, uint256 range)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        if (prediction > maturingPrice) {\\n            if (prediction.sub(range) <= maturingPrice) return 0;\\n            else return prediction.sub(range).sub(maturingPrice);\\n        } else {\\n            if (prediction.add(range) >= maturingPrice) return 0;\\n            else return maturingPrice.sub(prediction.add(range));\\n        }\\n    }\\n\\n    function setSortedStakers(address[25] calldata addrArray, uint256[25] calldata indexArray)\\n        external \\n        onlyPoolCreator \\n    {\\n\\n        for (uint256 i = 0; i < addrArray.length; i++) {\\n\\n            // the first 0 address means the other addresses are also 0 so they won't be checked\\n            if (addrArray[i] == address(0)) break;\\n\\n            sortedStakers.push(\\n            Staker({\\n                stakerAddress: addrArray[i],\\n                index: indexArray[i]\\n                })\\n            );\\n        }\\n\\n        emit PoolSorted();\\n    }\\n\\n    function getStakers() \\n        public \\n        view \\n        returns(address[] memory, uint256[] memory) \\n    {\\n        address[] memory addrs = new address[](stakers.length);\\n        uint256[] memory indexes = new uint256[](stakers.length);\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            addrs[i] = stakers[i].stakerAddress;\\n            indexes[i] = stakers[i].index;\\n        }\\n\\n        return (addrs, indexes);\\n    }\\n\\n    function _getStakingRewardPerStake(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction memory userStake = predictions[staker][stakeIndex];\\n        uint256 maturityDate = startDate + lockTime + maturityTime;\\n\\n        uint256 timeTo =\\n            block.timestamp > maturityDate ? maturityDate : block.timestamp;\\n\\n        uint256 enhancedApr = _getEnhancedRewardRate(userStake.stakedTime);\\n\\n        // the reward formula is ((1 + stakeAPR +enhancedReward)^((MaturingDate - StakingDate)/365) - 1) * StakingBalance\\n\\n        uint256 rewardPerStake = _calcStakingReturn(\\n            stakeApr.add(enhancedApr),\\n            timeTo.sub(userStake.stakedTime),\\n            userStake.stakedBalance\\n            );\\n\\n        rewardPerStake = rewardPerStake.sub(userStake.amountWithdrawn);\\n\\n        return rewardPerStake;\\n    }\\n\\n    function _calcStakingReturn(uint256 totalRewardRate, uint256 timeDuration, uint256 totalStakedBalance) \\n        internal \\n        pure\\n        returns (uint256) \\n    {\\n        uint256 yearInSeconds = 365 days;\\n\\n        uint256 first = (yearInSeconds**2)\\n            .mul(10**8);\\n\\n        uint256 second = timeDuration\\n            .mul(totalRewardRate) \\n            .mul(yearInSeconds)\\n            .mul(5000);\\n        \\n        uint256 third = totalRewardRate\\n            .mul(yearInSeconds**2)\\n            .mul(5000);\\n\\n        uint256 forth = (timeDuration**2)\\n            .mul(totalRewardRate**2)\\n            .div(6);\\n\\n        uint256 fifth = timeDuration\\n            .mul(totalRewardRate**2)\\n            .mul(yearInSeconds)\\n            .div(2);\\n\\n        uint256 sixth = (totalRewardRate**2)\\n            .mul(yearInSeconds**2)\\n            .div(3);\\n \\n        uint256 rewardPerStake = first.add(second).add(forth).add(sixth);\\n\\n        rewardPerStake = rewardPerStake.sub(third).sub(fifth);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalRewardRate)\\n            .mul(timeDuration);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalStakedBalance)\\n            .div(yearInSeconds**3)\\n            .div(10**12);\\n\\n        return rewardPerStake; \\n    }\\n\\n    function _getStakingReward(address staker) public view returns (uint256) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 reward = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            reward = reward.add(rewardPerStake);\\n        }\\n\\n        return reward;\\n    }\\n\\n    function _getIndexedStakingReward(address staker, uint256 stakeIndex) public view returns (uint256) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n        if (stakeIndex >= userStakes.length) return 0;\\n\\n        uint256 reward = 0;\\n        \\n        uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n        reward = reward.add(rewardPerStake);\\n\\n        return reward;\\n    }\\n\\n    function _withdrawStakingReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            userStakes[i].lastWithdrawalTime = block.timestamp;\\n            userStakes[i].amountWithdrawn = userStakes[i].amountWithdrawn.add(\\n                rewardPerStake\\n            );\\n        }\\n    }\\n\\n    function _withdrawIndexedStakingReward(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (stakeIndex >= userStakes.length) return;\\n\\n        uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n\\n        userStakes[stakeIndex].lastWithdrawalTime = block.timestamp;\\n        userStakes[stakeIndex].amountWithdrawn = userStakes[stakeIndex].amountWithdrawn.add(\\n            rewardPerStake\\n        );\\n    }\\n\\n    function _getEnhancedRewardRate(uint256 stakedTime)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n\\n        // if the enhanced reward is not enabled so consider enhanced raward 0\\n        if (!isEnhancedEnabled) {\\n            return 0;\\n        }\\n\\n        uint256 lockDate = startDate.add(lockTime);\\n        uint256 difference = lockDate.sub(stakedTime);\\n\\n        if (difference < 48 hours) {\\n            return 0;\\n        } else if (difference < 72 hours) {\\n            return 100;\\n        } else if (difference < 96 hours) {\\n            return 200;\\n        } else if (difference < 120 hours) {\\n            return 300;\\n        } else if (difference < 144 hours) {\\n            return 400;\\n        } else {\\n            return 500;\\n        }\\n    }\\n\\n    function _getPrizeReward(address staker)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // wihtout the maturing price calculating prize is impossible\\n        if (!isMatured) return (0, 0);\\n\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        // users that don't stake don't get any prize also\\n        if (userStakes.length == 0) return (0, 0);\\n\\n        uint256 maturingBTCPrizeAmount =\\n            (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 btcReward = 0;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            // only calculate the prize amount for stakes that are not withdrawn yet\\n            if (!userStakes[i].prizeRewardWithdrawn) {\\n\\n                uint256 _percent = _getPercentageReward(userStakes[i].rank);\\n\\n                reward = reward.add(\\n                            prizeAmount.mulBP(_percent)\\n                        );\\n\\n                btcReward = btcReward.add(\\n                            maturingBTCPrizeAmount\\n                                .mulBP(_percent)\\n                        );        \\n            }\\n        }\\n\\n        if (collaborativeReward > 0) {\\n            reward = reward.addBP(collaborativeReward);\\n            btcReward = btcReward.addBP(collaborativeReward);\\n        }\\n\\n        return (reward, btcReward);\\n    }\\n\\n    function _getPercentageReward(uint256 _rank)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        for (uint256 i = 0; i < prizeRewardRates.length; i++) {\\n            if (_rank <= prizeRewardRates[i].rank) {\\n                return prizeRewardRates[i].percentage;\\n            }\\n        }\\n\\n        return 0;\\n    }        \\n\\n    function _getIndexedPrizeReward(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // wihtout the maturing price calculating prize is impossible\\n        if (!isMatured) return (0, 0);\\n\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        // users that don't stake don't get any prize also\\n        if (userStakes.length == 0) return (0, 0);\\n\\n        // the prize reward considered 0 if stakeIndex exceeds\\n        if (stakeIndex >= userStakes.length) return (0,0);\\n\\n        // If the first prize reward is withdrawn, we can assume that all the prize/collaborative rewards are withdrawn\\n        if (userStakes[stakeIndex].prizeRewardWithdrawn) return (0, 0);\\n\\n        uint256 maturingBTCPrizeAmount =\\n            (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 btcReward = 0;\\n\\n        uint256 _percent = _getPercentageReward(userStakes[stakeIndex].rank);\\n\\n        reward = reward.add(\\n                        prizeAmount.mulBP(_percent)\\n                    );\\n\\n        btcReward = btcReward.add(\\n                        maturingBTCPrizeAmount\\n                            .mulBP(_percent)\\n                    );            \\n\\n        if (collaborativeReward > 0) {\\n            reward = reward.addBP(collaborativeReward);\\n            btcReward = btcReward.addBP(collaborativeReward);\\n        }\\n\\n        return (reward, btcReward);\\n    }\\n\\n    function _withdrawPrizeReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].prizeRewardWithdrawn = true;\\n        }\\n    }\\n\\n    function _withdrawIndexedPrizeReward(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (userStakes[stakeIndex].prizeRewardWithdrawn) return;\\n\\n        userStakes[stakeIndex].prizeRewardWithdrawn = true;\\n    }\\n\\n    // getTotalStakedBalance return remained staked balance\\n    function _getTotalStakedBalance(address staker)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 totalStakedBalance = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            if (!userStakes[i].didUnstake) {\\n                totalStakedBalance = totalStakedBalance.add(\\n                    userStakes[i].stakedBalance\\n                );\\n            }\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    // getIndexedStakedBalance return the remained staked amount\\n    function _getIndexedStakedBalance(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n        if (stakeIndex >= userStakes.length) return 0; \\n\\n        uint256 totalStakedBalance = 0;\\n\\n        if (!userStakes[stakeIndex].didUnstake) {\\n            totalStakedBalance = totalStakedBalance.add(\\n                userStakes[stakeIndex].stakedBalance\\n            );\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    function _withdrawStakedBalance(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].didUnstake = true;\\n        }\\n    }\\n\\n    function _withdrawIndexedStakedBalance(address staker, uint256 stakeIndex) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n        if (stakeIndex >= userStakes.length) return;\\n\\n        userStakes[stakeIndex].didUnstake = true;\\n    }\\n\\n    function _getTotalReward(address staker)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // since in the getPrizeReward function the maturingPrice is used\\n        // so we got error if it would not be maturityDate\\n        uint256 prizeReward;\\n        uint256 btcPrizeReward;\\n        uint256 stakingReward = _getStakingReward(staker);\\n        (prizeReward, btcPrizeReward) = _getPrizeReward(staker);\\n\\n        return (stakingReward.add(prizeReward), btcPrizeReward);\\n    }\\n\\n    \\n    function _getIndexedReward(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // since in the getPrizeReward function the maturingPrice is used\\n        // so we got error if it would not be maturityDate\\n        uint256 prizeReward;\\n        uint256 btcPrizeReward;\\n        uint256 stakingReward = _getIndexedStakingReward(staker, stakeIndex);\\n        (prizeReward, btcPrizeReward) = _getIndexedPrizeReward(staker, stakeIndex);\\n\\n        return (stakingReward.add(prizeReward), btcPrizeReward);\\n    }\\n\\n    function getStakingReward() external view returns (uint256) {\\n        return _getStakingReward(_msgSender());\\n    }\\n    function getIndexedStakingReward(uint256 stakeIndex) external view returns (uint256) {\\n        return _getIndexedStakingReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getPrizeReward() external view returns (uint256, uint256) {\\n        return _getPrizeReward(_msgSender());\\n    }\\n    function getIndexedPrizeReward(uint256 stakeIndex) external view returns (uint256, uint256) {\\n        return _getIndexedPrizeReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getTotalStakedBalance() external view returns (uint256) {\\n        return _getTotalStakedBalance(_msgSender());\\n    }\\n    function getIndexedStakedBalance(uint256 stakeIndex) external view returns (uint256) {\\n        return _getIndexedStakedBalance(_msgSender(), stakeIndex);\\n    }\\n\\n    function getTotalReward() external view returns (uint256, uint256) {\\n        return _getTotalReward(_msgSender());\\n    }\\n    function getIndexedReward(uint256 stakeIndex) external view returns (uint256, uint256) {\\n        return _getIndexedReward(_msgSender(), stakeIndex);\\n    }\\n\\n    function getStakingTax(uint256 amount, uint256 tokenTaxRate)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        uint256 newStakeTaxRate =\\n            stakeTaxRate > tokenTaxRate ? stakeTaxRate.sub(tokenTaxRate) : 0;\\n        if (newStakeTaxRate == 0) {\\n            return (0, amount);\\n        }\\n        return (\\n            amount.mulBP(newStakeTaxRate),\\n            amount.sub(amount.mulBP(newStakeTaxRate))\\n        );\\n    }\\n\\n    function withdrawStuckTokens(address _stuckToken, uint256 amount, address receiver)\\n        external\\n        onlyPoolCreator\\n    {\\n        require(\\n            _stuckToken != address(totemToken), \\n            \\\"0370 totems can not be transfered\\\"\\n        );\\n        IERC20 stuckToken = IERC20(_stuckToken);\\n        stuckToken.transfer(receiver, amount);\\n    }\\n\\n    // hasUnStaked return true if the user staked in the pool and then has unStaked it (in claim usecase)\\n    function hasUnStaked(address staker, uint256 stakeIndex) external view returns (bool) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        require(\\n            userStakes.length > 0,\\n            \\\"0380 this address didn't stake in this pool\\\"\\n        );\\n\\n        require(\\n            stakeIndex < userStakes.length,\\n            \\\"0381 this index exceeds\\\"\\n        );\\n    \\n\\n        if (userStakes[stakeIndex].didUnstake) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function declareEmergency()\\n        external\\n        onlyPoolCreator\\n    {\\n        isAnEmergency = true;\\n    }\\n\\n    function emergentWithdraw() external {\\n        require(\\n            isAnEmergency,\\n            \\\"it's not an emergency\\\"\\n        );\\n\\n        // Users can't unstake until the pool matures\\n        uint256 stakedBalance = _getTotalStakedBalance(_msgSender());\\n        if (stakedBalance > 0) {\\n            totemToken.transfer(_msgSender(), stakedBalance);\\n\\n            // _wthdraw don't withdraw actually, and only update the array in the map\\n            _withdrawStakedBalance(_msgSender());\\n\\n            emit Unstake(_msgSender(), stakedBalance);\\n        }\\n    }\\n\\n    modifier onlyPoolCreator {\\n        require(\\n            _msgSender() == poolCreator,\\n            \\\"0300 caller is not a pool creator\\\"\\n        );\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x32af7023955064c4cec0aac9c07b7becd29a5bd6fc81da1aedbb1523e4935212\",\"license\":\"UNLICENSED\"},\"contracts/TotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"./ILocker.sol\\\";\\nimport \\\"./BasisPoints.sol\\\";\\n\\ncontract TotemToken is ILockerUser, Context, ERC20, Ownable {\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    string public constant NAME = \\\"Totem Token\\\";\\n    string public constant SYMBOL = \\\"TOTM\\\";\\n    uint8 public constant DECIMALS = 18;\\n    uint256 public constant INITIAL_SUPPLY = 10000000 * (10**uint256(DECIMALS));\\n\\n    address public CommunityDevelopmentAddr;\\n    address public StakingRewardsAddr;\\n    address public LiquidityPoolAddr;\\n    address public PublicSaleAddr;\\n    address public AdvisorsAddr;\\n    address public SeedInvestmentAddr;\\n    address public PrivateSaleAddr;\\n    address public TeamAllocationAddr;\\n    address public StrategicRoundAddr;\\n\\n    uint256 public constant COMMUNITY_DEVELOPMENT =\\n        1000000 * (10**uint256(DECIMALS)); // 10% for Community development\\n    uint256 public constant STAKING_REWARDS = 1650000 * (10**uint256(DECIMALS)); // 16.5% for Staking Revawards\\n    uint256 public constant LIQUIDITY_POOL = 600000 * (10**uint256(DECIMALS)); // 6% for Liquidity pool\\n    uint256 public constant ADVISORS = 850000 * (10**uint256(DECIMALS)); // 8.5% for Advisors\\n    uint256 public constant SEED_INVESTMENT = 450000 * (10**uint256(DECIMALS)); // 4.5% for Seed investment\\n    uint256 public constant PRIVATE_SALE = 2000000 * (10**uint256(DECIMALS)); // 20% for Private Sale\\n    uint256 public constant TEAM_ALLOCATION = 1500000 * (10**uint256(DECIMALS)); // 15% for Team allocation\\n\\n    uint256 public constant LAUNCH_POOL =\\n        5882352941 * (10**uint256(DECIMALS - 5)); // 58823.52941 for LaunchPool\\n    uint256 public constant PUBLIC_SALE =\\n        450000 * (10**uint256(DECIMALS)) + LAUNCH_POOL; // 4.5% for Public Sale\\n    uint256 public constant STRATEGIC_ROUND =\\n        1500000 * (10**uint256(DECIMALS)) - LAUNCH_POOL; // 15% for Strategic Round\\n    uint256 public taxRate = 300;\\n    address public taxationWallet;\\n\\n    bool private _isDistributionComplete = false;\\n\\n    mapping(address => bool) public taxExempt;\\n\\n    ILocker public override locker;\\n\\n    constructor() ERC20(NAME, SYMBOL) {\\n        taxationWallet = _msgSender();\\n\\n        _mint(address(this), INITIAL_SUPPLY);\\n    }\\n\\n    function setLocker(address _locker) external onlyOwner() {\\n        require(_locker != address(0), \\\"_locker cannot be address(0)\\\");\\n        locker = ILocker(_locker);\\n        emit SetLocker(_locker);\\n    }\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) public onlyOwner {\\n        require(!_isDistributionComplete);\\n\\n        require(_CommunityDevelopmentAddr != address(0));\\n        require(_StakingRewardsAddr != address(0));\\n        require(_LiquidityPoolAddr != address(0));\\n        require(_PublicSaleAddr != address(0));\\n        require(_AdvisorsAddr != address(0));\\n        require(_SeedInvestmentAddr != address(0));\\n        require(_PrivateSaleAddr != address(0));\\n        require(_TeamAllocationAddr != address(0));\\n        require(_StrategicRoundAddr != address(0));\\n        // set parnters addresses\\n        CommunityDevelopmentAddr = _CommunityDevelopmentAddr;\\n        StakingRewardsAddr = _StakingRewardsAddr;\\n        LiquidityPoolAddr = _LiquidityPoolAddr;\\n        PublicSaleAddr = _PublicSaleAddr;\\n        AdvisorsAddr = _AdvisorsAddr;\\n        SeedInvestmentAddr = _SeedInvestmentAddr;\\n        PrivateSaleAddr = _PrivateSaleAddr;\\n        TeamAllocationAddr = _TeamAllocationAddr;\\n        StrategicRoundAddr = _StrategicRoundAddr;\\n    }\\n\\n    function distributeTokens() public onlyOwner {\\n        require((!_isDistributionComplete));\\n\\n        _transfer(\\n            address(this),\\n            CommunityDevelopmentAddr,\\n            COMMUNITY_DEVELOPMENT\\n        );\\n        _transfer(address(this), StakingRewardsAddr, STAKING_REWARDS);\\n        _transfer(address(this), LiquidityPoolAddr, LIQUIDITY_POOL);\\n        _transfer(address(this), PublicSaleAddr, PUBLIC_SALE);\\n        _transfer(address(this), AdvisorsAddr, ADVISORS);\\n        _transfer(address(this), SeedInvestmentAddr, SEED_INVESTMENT);\\n        _transfer(address(this), PrivateSaleAddr, PRIVATE_SALE);\\n        _transfer(address(this), TeamAllocationAddr, TEAM_ALLOCATION);\\n        _transfer(address(this), StrategicRoundAddr, STRATEGIC_ROUND);\\n\\n        // Whitelist these addresses as tex exempt\\n        setTaxExemptStatus(CommunityDevelopmentAddr, true);\\n        setTaxExemptStatus(StakingRewardsAddr, true);\\n        setTaxExemptStatus(LiquidityPoolAddr, true);\\n        setTaxExemptStatus(PublicSaleAddr, true);\\n        setTaxExemptStatus(AdvisorsAddr, true);\\n        setTaxExemptStatus(SeedInvestmentAddr, true);\\n        setTaxExemptStatus(PrivateSaleAddr, true);\\n        setTaxExemptStatus(TeamAllocationAddr, true);\\n        setTaxExemptStatus(StrategicRoundAddr, true);\\n\\n        _isDistributionComplete = true;\\n    }\\n\\n    function setTaxRate(uint256 newTaxRate) public onlyOwner {\\n        require(newTaxRate < 10000, \\\"Tax connot be over 100% (10000 BP)\\\");\\n        taxRate = newTaxRate;\\n    }\\n\\n    function setTaxExemptStatus(address account, bool status) public onlyOwner {\\n        require(account != address(0));\\n        taxExempt[account] = status;\\n    }\\n\\n    function setTaxationWallet(address newTaxationWallet) public onlyOwner {\\n        require(newTaxationWallet != address(0));\\n        taxationWallet = newTaxationWallet;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        if (address(locker) != address(0)) {\\n            locker.lockOrGetPenalty(sender, recipient);\\n        }\\n        ERC20._transfer(sender, recipient, amount);\\n    }\\n\\n    function _transferWithTax(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(sender != recipient, \\\"Cannot self transfer\\\");\\n\\n        uint256 tax = amount.mulBP(taxRate);\\n        uint256 tokensToTransfer = amount.sub(tax);\\n\\n        _transfer(sender, taxationWallet, tax);\\n        _transfer(sender, recipient, tokensToTransfer);\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        require(_msgSender() != recipient, \\\"ERC20: cannot self transfer\\\");\\n        !taxExempt[_msgSender()]\\n            ? _transferWithTax(_msgSender(), recipient, amount)\\n            : _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        !taxExempt[sender]\\n            ? _transferWithTax(sender, recipient, amount)\\n            : _transfer(sender, recipient, amount);\\n\\n        approve(\\n            _msgSender(),\\n            allowance(sender, _msgSender()).sub(\\n                amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xfa21ba84a53a411dd96bf813d4c25a1168b631e1e5d098bb892c7e46a5e83ab0\",\"license\":\"UNLICENSED\"}},\"version\":1}",
    "storageLayout": {
      "storage": [
        {
          "astId": 53,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "_owner",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 1873,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "priceFeed",
          "offset": 0,
          "slot": "1",
          "type": "t_contract(AggregatorV3Interface)45"
        },
        {
          "astId": 1373,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "USDCContract",
          "offset": 0,
          "slot": "2",
          "type": "t_contract(IERC20)1091"
        },
        {
          "astId": 1232,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "swapRouter",
          "offset": 0,
          "slot": "3",
          "type": "t_contract(IPancakeRouter02)1868"
        },
        {
          "astId": 1234,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "USDC_CONTRACT_ADDRESS",
          "offset": 0,
          "slot": "4",
          "type": "t_address"
        },
        {
          "astId": 1236,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "WBTC_CONTRACT_ADDRESS",
          "offset": 0,
          "slot": "5",
          "type": "t_address"
        },
        {
          "astId": 2536,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "poolType",
          "offset": 0,
          "slot": "6",
          "type": "t_string_storage"
        },
        {
          "astId": 2559,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "predictions",
          "offset": 0,
          "slot": "7",
          "type": "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)2518_storage)dyn_storage)"
        },
        {
          "astId": 2562,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "stakers",
          "offset": 0,
          "slot": "8",
          "type": "t_array(t_struct(Staker)2523_storage)dyn_storage"
        },
        {
          "astId": 2565,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "sortedStakers",
          "offset": 0,
          "slot": "9",
          "type": "t_array(t_struct(Staker)2523_storage)dyn_storage"
        },
        {
          "astId": 2567,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "totalStaked",
          "offset": 0,
          "slot": "10",
          "type": "t_uint256"
        },
        {
          "astId": 2569,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "maturingPrice",
          "offset": 0,
          "slot": "11",
          "type": "t_uint256"
        },
        {
          "astId": 2581,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "collaborativeReward",
          "offset": 0,
          "slot": "12",
          "type": "t_uint256"
        },
        {
          "astId": 2583,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "poolCreator",
          "offset": 0,
          "slot": "13",
          "type": "t_address"
        },
        {
          "astId": 2585,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "isAnEmergency",
          "offset": 20,
          "slot": "13",
          "type": "t_bool"
        },
        {
          "astId": 2589,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "isLocked",
          "offset": 21,
          "slot": "13",
          "type": "t_bool"
        },
        {
          "astId": 2591,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "isMatured",
          "offset": 22,
          "slot": "13",
          "type": "t_bool"
        },
        {
          "astId": 2593,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "isDeleted",
          "offset": 23,
          "slot": "13",
          "type": "t_bool"
        },
        {
          "astId": 2596,
          "contract": "contracts/Staking/StakingPool.sol:StakingPool",
          "label": "prizeRewardRates",
          "offset": 0,
          "slot": "14",
          "type": "t_array(t_struct(PrizeRewardRate)2528_storage)dyn_storage"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_array(t_struct(PrizeRewardRate)2528_storage)dyn_storage": {
          "base": "t_struct(PrizeRewardRate)2528_storage",
          "encoding": "dynamic_array",
          "label": "struct StakingPool.PrizeRewardRate[]",
          "numberOfBytes": "32"
        },
        "t_array(t_struct(StakeWithPrediction)2518_storage)dyn_storage": {
          "base": "t_struct(StakeWithPrediction)2518_storage",
          "encoding": "dynamic_array",
          "label": "struct StakingPool.StakeWithPrediction[]",
          "numberOfBytes": "32"
        },
        "t_array(t_struct(Staker)2523_storage)dyn_storage": {
          "base": "t_struct(Staker)2523_storage",
          "encoding": "dynamic_array",
          "label": "struct StakingPool.Staker[]",
          "numberOfBytes": "32"
        },
        "t_bool": {
          "encoding": "inplace",
          "label": "bool",
          "numberOfBytes": "1"
        },
        "t_contract(AggregatorV3Interface)45": {
          "encoding": "inplace",
          "label": "contract AggregatorV3Interface",
          "numberOfBytes": "20"
        },
        "t_contract(IERC20)1091": {
          "encoding": "inplace",
          "label": "contract IERC20",
          "numberOfBytes": "20"
        },
        "t_contract(IPancakeRouter02)1868": {
          "encoding": "inplace",
          "label": "contract IPancakeRouter02",
          "numberOfBytes": "20"
        },
        "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)2518_storage)dyn_storage)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => struct StakingPool.StakeWithPrediction[])",
          "numberOfBytes": "32",
          "value": "t_array(t_struct(StakeWithPrediction)2518_storage)dyn_storage"
        },
        "t_string_storage": {
          "encoding": "bytes",
          "label": "string",
          "numberOfBytes": "32"
        },
        "t_struct(PrizeRewardRate)2528_storage": {
          "encoding": "inplace",
          "label": "struct StakingPool.PrizeRewardRate",
          "members": [
            {
              "astId": 2525,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "rank",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 2527,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "percentage",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_struct(StakeWithPrediction)2518_storage": {
          "encoding": "inplace",
          "label": "struct StakingPool.StakeWithPrediction",
          "members": [
            {
              "astId": 2501,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "stakedBalance",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256"
            },
            {
              "astId": 2503,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "stakedTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256"
            },
            {
              "astId": 2505,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "amountWithdrawn",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            },
            {
              "astId": 2507,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "lastWithdrawalTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256"
            },
            {
              "astId": 2509,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "pricePrediction",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256"
            },
            {
              "astId": 2511,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "difference",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256"
            },
            {
              "astId": 2513,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "rank",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256"
            },
            {
              "astId": 2515,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "prizeRewardWithdrawn",
              "offset": 0,
              "slot": "7",
              "type": "t_bool"
            },
            {
              "astId": 2517,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "didUnstake",
              "offset": 1,
              "slot": "7",
              "type": "t_bool"
            }
          ],
          "numberOfBytes": "256"
        },
        "t_struct(Staker)2523_storage": {
          "encoding": "inplace",
          "label": "struct StakingPool.Staker",
          "members": [
            {
              "astId": 2520,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "stakerAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address"
            },
            {
              "astId": 2522,
              "contract": "contracts/Staking/StakingPool.sol:StakingPool",
              "label": "index",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256"
            }
          ],
          "numberOfBytes": "64"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getDecimals()": {
          "notice": "Returns decimals for oracle contract"
        },
        "getLatestPrice()": {
          "notice": "Returns the latest price from oracle contract"
        }
      },
      "version": 1
    }
  }