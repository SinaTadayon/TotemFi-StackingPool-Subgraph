{
  "contractName": "StakingPool",
  "sourceName": "contracts/Staking/StakingPool.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_wrappedTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_poolType",
          "type": "string"
        },
        {
          "internalType": "contract TotemToken",
          "name": "_totemToken",
          "type": "address"
        },
        {
          "internalType": "contract RewardManager",
          "name": "_rewardManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolCreator",
          "type": "address"
        },
        {
          "internalType": "address[4]",
          "name": "_addrs",
          "type": "address[4]"
        },
        {
          "internalType": "uint256[11]",
          "name": "_variables",
          "type": "uint256[11]"
        },
        {
          "internalType": "uint256[8]",
          "name": "_ranks",
          "type": "uint256[8]"
        },
        {
          "internalType": "uint256[8]",
          "name": "_percentages",
          "type": "uint256[8]"
        },
        {
          "internalType": "bool",
          "name": "_isEnhancedEnabled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ApproveTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DistributedBTC",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolMatured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PoolSorted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePrediction",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wrappedTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collaborativeRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collaborativeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "declareEmergency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deletePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergentWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAveragePricePrediction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prediction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_range",
          "type": "uint256"
        }
      ],
      "name": "getDifference",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getEstimatedWrappedTokenForUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPathForUSDToWrappedToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPredictionRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getPrizeReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getStakingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getTotalReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getTotalStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUSDToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWrappedTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeIndex",
          "type": "uint256"
        }
      ],
      "name": "hasUnStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAnEmergency",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDeleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isEnhancedEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMatured",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launchDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDecimal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "potentialCollabReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "predictions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePrediction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "difference",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "prizeRewardWithdrawn",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "didUnstake",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "prizeRewardRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rank",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "purchaseWrappedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardManager",
      "outputs": [
        {
          "internalType": "contract RewardManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_activationStatus",
          "type": "bool"
        }
      ],
      "name": "setActivationStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[25]",
          "name": "addrArray",
          "type": "address[25]"
        },
        {
          "internalType": "uint256[25]",
          "name": "indexArray",
          "type": "uint256[25]"
        }
      ],
      "name": "setSortedStakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sizeLimitRangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sortedStakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePrediction",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeApr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeTaxRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totemToken",
      "outputs": [
        {
          "internalType": "contract TotemToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updateMaturingPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdPrizeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stuckToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawStuckTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedTokenSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103db5760003560e01c80638a9920b71161020a578063bf85219611610125578063eb850ae1116100b8578063f3d9dc0d11610087578063f3d9dc0d146109f6578063f5e96fc9146109fe578063f8e829c314610a06578063f8eeed6214610a0e578063fd5e6dd114610a16576103db565b8063eb850ae11461098d578063f0141d8414610995578063f1b17a8b146109b3578063f2fde38b146109d0576103db565b8063d7efb6b7116100f4578063d7efb6b714610935578063de09ee201461093d578063e425df8c1461097d578063e8153c9314610985576103db565b8063bf85219614610915578063c12010541461091d578063c6c1decd14610925578063d025188b1461092d576103db565b8063a150194b1161019d578063aa7bcb571161016c578063aa7bcb57146108f5578063b1dd61b6146108fd578063b88a802f14610905578063bece75321461090d576103db565b8063a150194b14610870578063a35ef3a714610878578063a4e2d634146108d0578063a7a48681146108d8576103db565b806395c2ba47116101d957806395c2ba4714610839578063996c6cc314610841578063a08b2c7914610849578063a118c9a714610851576103db565b80638a9920b7146108195780638bfbbcbe146108215780638da5cb5b146108295780638e15f47314610831576103db565b80634bc4eeb2116102fa578063715018a61161028d5780637b0472f01161025c5780637b0472f01461076f5780637f2b6a0d14610792578063817b1cd21461079a578063850fa7cb146107a2576103db565b8063715018a61461073157806373f3170314610739578063785fa6271461074157806378f4d41314610749576103db565b806351eacbf0116102c957806351eacbf0146106e35780635d2631e2146106eb5780636847d0c5146107215780636b036f4514610729576103db565b80634bc4eeb21461068d5780634c7c77fc146106955780634ddc1bdc146106b85780634e8bfdaa146106db576103db565b80633299ac5f116103725780634026478e116103415780634026478e1461059657806343352d611461059e578063444a49021461063f57806345e9131914610661576103db565b80633299ac5f146104f757806334381749146105145780633ac58b9a146105535780633fcdd82c14610579576103db565b8063238a6c74116103ae578063238a6c74146104605780632d42cf7d146104dd5780632e577d07146104e757806331e244e5146104ef576103db565b80630d668087146103e05780630f4ef8a6146103fa578063183521cc1461041e57806322f3e2d414610444575b600080fd5b6103e8610a33565b60408051918252519081900360200190f35b610402610a57565b604080516001600160a01b039092168252519081900360200190f35b6103e86004803603602081101561043457600080fd5b50356001600160a01b0316610a7b565b61044c610bc3565b604080519115158252519081900360200190f35b610468610bd3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104a257818101518382015260200161048a565b50505050905090810190601f1680156104cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e5610c61565b005b610402610f9a565b6104e5610faa565b6103e86004803603602081101561050d57600080fd5b5035611021565b61053a6004803603602081101561052a57600080fd5b50356001600160a01b0316611148565b6040805192835260208301919091528051918290030190f35b61053a6004803603602081101561056957600080fd5b50356001600160a01b0316611180565b6103e86004803603602081101561058f57600080fd5b503561139b565b6104e561151b565b6105a661157c565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156105ea5781810151838201526020016105d2565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610629578181015183820152602001610611565b5050505090500194505050505060405180910390f35b6104e5600480360361064081101561065657600080fd5b5061032081016116c1565b61044c6004803603604081101561067757600080fd5b506001600160a01b03813516906020013561182a565b61044c6119be565b6103e8600480360360408110156106ab57600080fd5b50803590602001356119e2565b6104e5600480360360408110156106ce57600080fd5b5080359060200135611a56565b6103e8611bff565b6103e8611c23565b6104e56004803603606081101561070157600080fd5b506001600160a01b03813581169160208101359160409091013516611c47565b6103e8611d96565b6103e8611dba565b6104e5611dde565b6103e8611e9c565b6103e8611ec0565b6103e86004803603602081101561075f57600080fd5b50356001600160a01b0316611ee4565b6104e56004803603604081101561078557600080fd5b5080359060200135611ff3565b61044c612733565b6103e8612743565b6107ce600480360360408110156107b857600080fd5b506001600160a01b038135169060200135612749565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a086015260c0850152151560e0840152151561010083015251908190036101200190f35b6104e56127b7565b6104e561292e565b6104026129c5565b6103e86129d4565b6103e8612a6e565b610402612a73565b61044c612a97565b6104e56004803603602081101561086757600080fd5b50351515612aa7565b6103e8612b1e565b610880612b23565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156108bc5781810151838201526020016108a4565b505050509050019250505060405180910390f35b61044c612baa565b6104e5600480360360208110156108ee57600080fd5b5035612bba565b6103e8612cde565b610468612d02565b6104e5612d5d565b61040261317d565b6103e861318c565b6103e86132c5565b610402613341565b6103e8613350565b61044c613356565b61095a6004803603602081101561095357600080fd5b5035613366565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6103e861339e565b6104026133c2565b6103e86133e6565b61099d61340a565b6040805160ff9092168252519081900360200190f35b61053a600480360360208110156109c957600080fd5b503561348d565b6104e5600480360360208110156109e657600080fd5b50356001600160a01b03166134bb565b6103e86135cf565b6104026135d5565b6103e86135e4565b6103e8613653565b61095a60048036036020811015610a2c57600080fd5b5035613677565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116600090815260086020908152604080832080548251818502810185019093528083528493849084015b82821015610b4057600084815260209081902060408051610120810182526008860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c08401526007015460ff808216151560e085015261010091829004161515908301529083529092019101610aae565b505050509050805160001415610b5a576000915050610bbe565b6000805b8251811015610bb957828181518110610b7357fe5b60200260200101516101000151610bb157610bae838281518110610b9357fe5b6020026020010151600001518361368790919063ffffffff16565b91505b600101610b5e565b509150505b919050565b600f54600160a81b900460ff1681565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c595780601f10610c2e57610100808354040283529160200191610c59565b820191906000526020600020905b815481529060010190602001808311610c3c57829003601f168201915b505050505081565b600e546001600160a01b0316610c756136e8565b6001600160a01b031614610cba5760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000000101421015610d5d5760405162461bcd60e51b815260040180806020018281038252602c8152602001806141ad602c913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000015610dc657610d8b6135e4565b610dc65760405162461bcd60e51b81526004018080602001828103825260278152602001806142b76027913960400191505060405180910390fd5b60095415610e1b57600a54610e1b576040805162461bcd60e51b81526020600482015260166024820152750c0ccd8c88199a5c9cdd081cda1bdd5b19081cdbdc9d60521b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000015610ea2576000610e4b61318c565b9050610e77817f00000000000000000000000000000000000000000000000000000000000000006119e2565b610ea0577f0000000000000000000000000000000000000000000000000000000000000000600d555b505b600a54600090601910610eb757600a54610eba565b60195b905060005b81811015610f4b578060010160086000600a8481548110610edc57fe5b600091825260208083206002909202909101546001600160a01b031683528201929092526040019020600a805484908110610f1357fe5b90600052602060002090600202016001015481548110610f2f57fe5b6000918252602090912060066008909202010155600101610ebf565b50600f805460ff60b81b1960ff60b01b19909116600160b01b1716600160b81b1790556040517fe8ef7a17c92d025d9c1ead1c6b3ca3b44d3283d0ee954f615c5c476911f629a590600090a150565b6003546001600160a01b03165b90565b600e546001600160a01b0316610fbe6136e8565b6001600160a01b0316146110035760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b600f805461ffff60a01b1916600160a01b17905561101f6136ec565b565b6000806040518060800160405280616b6c8152602001617530815260200161445c81526020016000198152509050600060405180608001604052806103e881526020016102bc8152602001610177815260200160c881525090506000805b600481101561113f576000600382146110ba576110b5670de0b6b3a76400008684600481106110aa57fe5b60200201519061372a565b6110bc565b865b905060008188116110cd57876110cf565b815b9050611119611112670de0b6b3a764000061110c6101f481620f42406111068c8b600481106110fa57fe5b6020020151899061372a565b9061372a565b90613783565b8590613687565b935081881161112957505061113f565b61113388836137ea565b9750505060010161107f565b50949350505050565b600080600080600061115986611ee4565b905061116486611180565b90935091506111738184613687565b945090925050505b915091565b600f546000908190600160b81b900460ff166111a15750600090508061117b565b6001600160a01b038316600090815260086020908152604080832080548251818502810185019093528083529192909190849084015b8282101561126957600084815260209081902060408051610120810182526008860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c08401526007015460ff808216151560e0850152610100918290041615159083015290835290920191016111d7565b50505050905080516000141561128657600080925092505061117b565b600c546000906112be9061110c7f00000000000000000000000000000000000000000000000000000000000000006305f5e10061372a565b905060008060005b845181101561135e578481815181106112db57fe5b602002602001015160e0015161135657600061130d8683815181106112fc57fe5b602002602001015160c00151613847565b905061133c6111127f0000000000000000000000000000000000000000000000000000000000000000836138b2565b935061135261134b86836138b2565b8490613687565b9250505b6001016112c6565b50600d541561138f57600d546113759083906138c4565b915061138c600d54826138c490919063ffffffff16565b90505b90945092505050915091565b60035460009081906001600160a01b031663d06ca61f846113ba612b23565b6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561140f5781810151838201526020016113f7565b50505050905001935050505060006040518083038186803b15801561143357600080fd5b505afa158015611447573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561147057600080fd5b810190808051604051939291908464010000000082111561149057600080fd5b9083019060208201858111156114a557600080fd5b82518660208202830111640100000000821117156114c257600080fd5b82525081516020918201928201910280838360005b838110156114ef5781810151838201526020016114d7565b5050505090500160405250505090508060018151811061150b57fe5b6020026020010151915050919050565b600e546001600160a01b031661152f6136e8565b6001600160a01b0316146115745760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b61101f6136ec565b606080600060098054905067ffffffffffffffff8111801561159d57600080fd5b506040519080825280602002602001820160405280156115c7578160200160208202803683370190505b5060095490915060009067ffffffffffffffff811180156115e757600080fd5b50604051908082528060200260200182016040528015611611578160200160208202803683370190505b50905060005b6009548110156116b7576009818154811061162e57fe5b600091825260209091206002909102015483516001600160a01b039091169084908390811061165957fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506009818154811061168657fe5b9060005260206000209060020201600101548282815181106116a457fe5b6020908102919091010152600101611617565b5090925090509091565b600e546001600160a01b03166116d56136e8565b6001600160a01b03161461171a5760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b600a541561172e5761172e600a600061411d565b60005b60198110156117fc57600083826019811061174857fe5b60200201356001600160a01b03166001600160a01b0316141561176a576117fc565b600a604051806040016040528085846019811061178357fe5b60200201356001600160a01b03166001600160a01b031681526020018484601981106117ab57fe5b60209081029190910135909152825460018082018555600094855293829020835160029092020180546001600160a01b0319166001600160a01b039092169190911781559101519082015501611731565b506040517f5c243cc6e4f210bf2dd86b8eca0ca891d3f8ad2eb09fbf91735eb348bc199c7e90600090a15050565b6001600160a01b038216600090815260086020908152604080832080548251818502810185019093528083528493849084015b828210156118ef57600084815260209081902060408051610120810182526008860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c08401526007015460ff808216151560e08501526101009182900416151590830152908352909201910161185d565b50505050905060008151116119355760405162461bcd60e51b815260040180806020018281038252602b815260200180614262602b913960400191505060405180910390fd5b8051831061198a576040805162461bcd60e51b815260206004820152601760248201527f30333831207468697320696e6465782065786365656473000000000000000000604482015290519081900360640190fd5b80838151811061199657fe5b60200260200101516101000151156119b25760019150506119b8565b60009150505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600c54831115611a2657600c546119fb84846137ea565b11611a08575060006119b8565b600c54611a1f90611a1985856137ea565b906137ea565b90506119b8565b600c54611a338484613687565b10611a40575060006119b8565b611a1f611a4d8484613687565b600c54906137ea565b600e546001600160a01b0316611a6a6136e8565b6001600160a01b031614611aaf5760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000011611b0e5760405162461bcd60e51b81526004018080602001828103825260238152602001806141646023913960400191505060405180910390fd5b60008211611b63576040805162461bcd60e51b815260206004820152601960248201527f3033343120416d6f756e742063616e2774206265207a65726f00000000000000604482015290519081900360640190fd5b42811015611baf576040805162461bcd60e51b81526020600482015260146024820152733033343220446561646c696e65206973206c6f7760601b604482015290519081900360640190fd5b6000611bb9610f9a565b9050611bc581846138ec565b6000611bd08461139b565b90506000611bea611be38361012c6138b2565b83906137ea565b9050611bf8308683876139b1565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e546001600160a01b0316611c5b6136e8565b6001600160a01b031614611ca05760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03161415611d115760405162461bcd60e51b81526004018080602001828103825260218152602001806141ff6021913960400191505060405180910390fd5b6040805163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529151859283169163a9059cbb9160448083019260209291908290030181600087803b158015611d6457600080fd5b505af1158015611d78573d6000803e3d6000fd5b505050506040513d6020811015611d8e57600080fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b611de66136e8565b6001600160a01b0316611df76129c5565b6001600160a01b031614611e52576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116600090815260086020908152604080832080548251818502810185019093528083528493849084015b82821015611fa957600084815260209081902060408051610120810182526008860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a0840152600681015460c08401526007015460ff808216151560e085015261010091829004161515908301529083529092019101611f17565b505050509050805160001415611fc3576000915050610bbe565b6000805b8251811015610bb9576000611fdc8683613b4a565b9050611fe88382613687565b925050600101611fc7565b600f54600160a81b900460ff16801561202b57507f000000000000000000000000000000000000000000000000000000000000000042115b61207c576040805162461bcd60e51b815260206004820152601760248201527f3033313320706f6f6c206973206e6f7420616374697665000000000000000000604482015290519081900360640190fd5b600f54600160b01b900460ff16156120d1576040805162461bcd60e51b81526020600482015260136024820152720c0ccc4c08141bdbdb081a5cc81b1bd8dad959606a1b604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000008210156121305760405162461bcd60e51b815260040180806020018281038252602a81526020018061428d602a913960400191505060405180910390fd5b6000612162606461110c7f0000000000000000000000000000000000000000000000000000000000000000600561372a565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663771a3a1d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156121bf57600080fd5b505afa1580156121d3573d6000803e3d6000fd5b505050506040513d60208110156121e957600080fd5b5051905060006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d1ecfc686122266136e8565b6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561226357600080fd5b505afa158015612277573d6000803e3d6000fd5b505050506040513d602081101561228d57600080fd5b50516122a25761229d85836138b2565b6122a5565b60005b90506122d17f000000000000000000000000000000000000000000000000000000000000000084613687565b6122ea82611a1988600b5461368790919063ffffffff16565b11156123275760405162461bcd60e51b81526004018080602001828103825260268152602001806141d96026913960400191505060405180910390fd5b60006123338684613ce2565b965090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166323b872dd61236e6136e8565b604080516001600160e01b031960e085901b1681526001600160a01b03909216600483015230602483015289850160448301525160648083019260209291908290030181600087803b1580156123c357600080fd5b505af11580156123d7573d6000803e3d6000fd5b505050506040513d60208110156123ed57600080fd5b506123fa905086836137ea565b95508015612531577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634a5db0a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561248a57600080fd5b505afa15801561249e573d6000803e3d6000fd5b505050506040513d60208110156124b457600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482018590525160448083019260209291908290030181600087803b15801561250457600080fd5b505af1158015612518573d6000803e3d6000fd5b505050506040513d602081101561252e57600080fd5b50505b600b5461253e9087613687565b600b81905550600960405180604001604052806125596136e8565b6001600160a01b03168152602001600860006125736136e8565b6001600160a01b0390811682526020808301939093526040909101600090812054909352845460018082018755958452828420855160029092020180546001600160a01b0319169190921617815592015191909201556008906125d46136e8565b6001600160a01b03168152602080820192909252604090810160009081208251610120810184528a81524281860181815294820184815260608301918252608083018c815260001960a0850181815260c0860191825260e086018881526101008088018a8152895460018082018c559a8c529c909a2097516008909c029097019a8b559851968a01969096559151600289015591516003880155905160048701559151600586015590516006850155915160079093018054915160ff19929092169315159390931761ff001916901515909102179055600b547f0000000000000000000000000000000000000000000000000000000000000000116126db576126db6136ec565b6126e36136e8565b6001600160a01b03167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b68787604051808381526020018281526020019250505060405180910390a2505050505050565b600f54600160b81b900460ff1681565b600b5481565b6008602052816000526040600020818154811061276557600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850154600586015460068701546007909701549598509396509194909391929160ff8082169161010090041689565b600f54600160a01b900460ff1661280d576040805162461bcd60e51b815260206004820152601560248201527469742773206e6f7420616e20656d657267656e637960581b604482015290519081900360640190fd5b600061281f61281a6136e8565b610a7b565b9050801561292b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb61285e6136e8565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156128a557600080fd5b505af11580156128b9573d6000803e3d6000fd5b505050506040513d60208110156128cf57600080fd5b506128e290506128dd6136e8565b613d7e565b6128ea6136e8565b6001600160a01b03167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd826040518082815260200191505060405180910390a25b50565b600e546001600160a01b03166129426136e8565b6001600160a01b0316146129875760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b600f805460ff60c01b1916600160c01b1790556040517f9331b2a38c658c57a39ea19b2709d928c28a12cc8fbb838d12b85148550f937d90600090a1565b6000546001600160a01b031690565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015612a2557600080fd5b505afa158015612a39573d6000803e3d6000fd5b505050506040513d60a0811015612a4f57600080fd5b506020015190506000811215612a66576000612a68565b805b91505090565b600581565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f54600160a01b900460ff1681565b600e546001600160a01b0316612abb6136e8565b6001600160a01b031614612b005760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b600f8054911515600160a81b0260ff60a81b19909216919091179055565b600881565b60408051600280825260608083018452926000929190602083019080368337505060045482519293506001600160a01b031691839150600090612b6257fe5b6001600160a01b039283166020918202929092010152600554825191169082906001908110612b8d57fe5b6001600160a01b0390921660209283029190910190910152905090565b600f54600160b01b900460ff1681565b600e546001600160a01b0316612bce6136e8565b6001600160a01b031614612c135760405162461bcd60e51b81526004018080602001828103825260218152602001806142206021913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000000101421015612cb65760405162461bcd60e51b81526004018080602001828103825260368152602001806142de6036913960400191505060405180910390fd5b600f546001600160a01b0316612cd057600c81905561292b565b612cd86129d4565b600c5550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c595780601f10610c2e57610100808354040283529160200191610c59565b600080612d70612d6b6136e8565b611148565b90925090508115612ed157817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612e0957600080fd5b505afa158015612e1d573d6000803e3d6000fd5b505050506040513d6020811015612e3357600080fd5b505110612ed1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e4e103dc612e716136e8565b846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015612eb857600080fd5b505af1158015612ecc573d6000803e3d6000fd5b505050505b612ee1612edc6136e8565b613df2565b600f54600160b81b900460ff1615613129577f000000000000000000000000000000000000000000000000000000000000000015613013578015613003577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb612f566136e8565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015612f9d57600080fd5b505af1158015612fb1573d6000803e3d6000fd5b505050506040513d6020811015612fc757600080fd5b5051613003576040805162461bcd60e51b815260206004808301919091526024820152630303332360e41b604482015290519081900360640190fd5b61301361300e6136e8565b613eab565b600061302061281a6136e8565b90508015613127577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb61305f6136e8565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156130a657600080fd5b505af11580156130ba573d6000803e3d6000fd5b505050506040513d60208110156130d057600080fd5b506130de90506128dd6136e8565b6130e66136e8565b6001600160a01b03167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd826040518082815260200191505060405180910390a25b505b6131316136e8565b6001600160a01b03167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688383604051808381526020018281526020019250505060405180910390a25050565b600f546001600160a01b031681565b6000600b54600014156131a157506000610fa7565b6000805b6009548110156132b657600060086000600984815481106131c257fe5b600091825260208083206002909202909101546001600160a01b03168352820192909252604001902060098054849081106131f957fe5b9060005260206000209060020201600101548154811061321557fe5b600091825260209182902060408051610120810182526008909302909101805480845260018201549484019490945260028101549183019190915260038101546060830152600481015460808301819052600582015460a0840152600682015460c084015260079091015460ff808216151560e085015261010091829004161515908301529092506132ab9161134b919061372a565b9250506001016131a5565b50600b54612a68908290613783565b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561331057600080fd5b505afa158015613324573d6000803e3d6000fd5b505050506040513d602081101561333a57600080fd5b5051905090565b600e546001600160a01b031681565b600c5481565b600f54600160c01b900460ff1681565b600a818154811061337657600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561345b57600080fd5b505afa15801561346f573d6000803e3d6000fd5b505050506040513d602081101561348557600080fd5b505191505090565b6010818154811061349d57600080fd5b60009182526020909120600290910201805460019091015490915082565b6134c36136e8565b6001600160a01b03166134d46129c5565b6001600160a01b03161461352f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166135745760405162461bcd60e51b81526004018080602001828103825260268152602001806141876026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600d5481565b6002546001600160a01b031690565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561331057600080fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b6009818154811061337657600080fd5b6000828201838110156136e1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b600f805460ff60b01b1916600160b01b1790556040517f2e136745550967f28b779ce8c395ca060a2f844edfb5b06631fe677f66f9e30590600090a1565b600082613739575060006119b8565b8282028284828161374657fe5b04146136e15760405162461bcd60e51b81526004018080602001828103825260218152602001806142416021913960400191505060405180910390fd5b60008082116137d9576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816137e257fe5b049392505050565b600082821115613841576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000805b6010548110156138a9576010818154811061386257fe5b90600052602060002090600202016000015483116138a1576010818154811061388757fe5b906000526020600020906002020160010154915050610bbe565b60010161384b565b50600092915050565b60006136e161271061110c858561372a565b6000826138d3575060006119b8565b816138df5750816119b8565b6136e161134b84846138b2565b6002546040805163095ea7b360e01b81526001600160a01b038581166004830152602482018590529151919092169163095ea7b39160448083019260209291908290030181600087803b15801561394257600080fd5b505af1158015613956573d6000803e3d6000fd5b505050506040513d602081101561396c57600080fd5b50506040805182815290516001600160a01b038416917fd77df63d9076d067d9fd7af16c3d67db48b84064c3314f5900ae919922d364a1919081900360200190a25050565b6001600160a01b0384166139c457600080fd5b6003546001600160a01b03166338ed173984846139df612b23565b88866040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015613a51578181015183820152602001613a39565b505050509050019650505050505050600060405180830381600087803b158015613a7a57600080fd5b505af1158015613a8e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613ab757600080fd5b8101908080516040519392919084640100000000821115613ad757600080fd5b908301906020820185811115613aec57600080fd5b8251866020820283011164010000000082111715613b0957600080fd5b82525081516020918201928201910280838360005b83811015613b36578181015183820152602001613b1e565b505050509050016040525050505050505050565b6001600160a01b0382166000908152600860205260408120805482919084908110613b7157fe5b6000918252602080832060408051610120810182526008909402909101805484526001810154928401929092526002820154908301526003810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015460ff808216151560e0840152610100918290041615159082015291507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000017f00000000000000000000000000000000000000000000000000000000000000000190428210613c625742613c64565b815b90506000613c758460200151613f13565b90506000613cbd613ca67f000000000000000000000000000000000000000000000000000000000000000084613687565b6020870151613cb69086906137ea565b875161401a565b9050613cd68560400151826137ea90919063ffffffff16565b98975050505050505050565b6000806000837f000000000000000000000000000000000000000000000000000000000000000011613d15576000613d3f565b613d3f7f0000000000000000000000000000000000000000000000000000000000000000856137ea565b905080613d53576000859250925050613d77565b613d5d85826138b2565b613d71613d6a87846138b2565b87906137ea565b92509250505b9250929050565b6001600160a01b03811660009081526008602052604090208054613da2575061292b565b60005b8154811015613ded576001828281548110613dbc57fe5b6000918252602090912060076008909202010180549115156101000261ff0019909216919091179055600101613da5565b505050565b6001600160a01b03811660009081526008602052604090208054613e16575061292b565b60005b8154811015613ded576000613e2e8483613b4a565b905042838381548110613e3d57fe5b906000526020600020906008020160030181905550613e8281848481548110613e6257fe5b90600052602060002090600802016002015461368790919063ffffffff16565b838381548110613e8e57fe5b600091825260209091206002600890920201015550600101613e19565b6001600160a01b03811660009081526008602052604090208054613ecf575061292b565b60005b8154811015613ded576001828281548110613ee957fe5b60009182526020909120600890910201600701805460ff1916911515919091179055600101613ed2565b60007f0000000000000000000000000000000000000000000000000000000000000000613f4257506000610bbe565b6000613f8e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613687565b90506000613f9c82856137ea565b90506202a300811015613fb457600092505050610bbe565b6203f480811015613fca57606492505050610bbe565b62054600811015613fe05760c892505050610bbe565b62069780811015613ff75761012c92505050610bbe565b6207e90081101561400e5761019092505050610bbe565b6101f492505050610bbe565b60006301e133808161403766038882915c40006305f5e10061372a565b9050600061404d61138861110685818a8c61372a565b905060006140646113886111068a6002880a61372a565b9050600061407d600661110c6002808c0a908d0a61372a565b905060006140a0600261110c8861110660028f0a8e61372a90919063ffffffff16565b905060006140b9600361110c6002808f0a908b0a61372a565b905060006140d3826140cd86818b8b613687565b90613687565b90506140e383611a1983886137ea565b90506140f38b611106838f61372a565b905061410d64e8d4a5100061110c60038b0a81858f61372a565b9c9b505050505050505050505050565b508054600082556002029060005260206000209081019061292b91905b8082111561415f5780546001600160a01b03191681556000600182015560020161413a565b509056fe303334302054686520706f6f6c206973206f6e6c7920544f544d2072657761726465724f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373303336302043616e277420656e6420706f6f6c206265666f726520746865206d617475726974792074696d65303331322043616e2774207374616b652061626f76652073697a6520616c6c6f636174696f6e3033373020746f74656d732063616e206e6f74206265207472616e736665726564303330302063616c6c6572206973206e6f74206120706f6f6c2063726561746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f773033383020746869732061646472657373206469646e2774207374616b6520696e207468697320706f6f6c3033313120416d6f756e742063616e2774206265206c657373207468616e20746865206d696e696d756d303336312057726170706564546f6b656e2052657761726473206e6f7420617661696c61626c65303335302043616e277420736574206d61747572696e67207072696365206265666f726520746865206d617475726974792074696d65a2646970667358221220f219269857c47c3bd976cc3c33097b4d3bad026611ee365ef2a7e4e6e75fece364736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getEstimatedWrappedTokenForUSD(uint256)": {
        "params": {
          "_amount": "Amount"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x260 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4A3D CODESIZE SUB DUP1 PUSH3 0x4A3D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x4A0 DUP2 LT ISZERO PUSH3 0x39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xBA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x152 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x19A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x460 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD DUP1 MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP2 SWAP6 PUSH2 0x100 DUP4 ADD SWAP6 PUSH2 0x260 DUP5 ADD SWAP6 PUSH2 0x360 SWAP1 SWAP5 ADD SWAP5 SWAP4 SWAP2 PUSH1 0x0 PUSH3 0x1F4 PUSH3 0x484 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND SWAP6 DUP4 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE TIMESTAMP DUP5 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD GT PUSH3 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x4A1C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x2E5 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP14 ADD SWAP1 PUSH3 0x4AA JUMP JUMPDEST POP DUP9 MLOAD PUSH3 0x2FB SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP13 ADD SWAP1 PUSH3 0x4AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP9 SWAP1 SHL AND PUSH1 0xA0 MSTORE DUP5 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x35F DUP6 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD PUSH3 0x488 JUMP JUMPDEST PUSH1 0x60 DUP6 DUP2 ADD MLOAD DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 SWAP1 DUP2 MSTORE DUP6 MLOAD PUSH1 0xE0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x120 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0x100 SWAP1 DUP2 MSTORE SWAP4 DUP9 ADD MLOAD PUSH2 0x140 SWAP1 DUP2 MSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x160 MSTORE PUSH1 0xA0 DUP10 ADD MLOAD PUSH2 0x180 MSTORE SWAP3 DUP9 ADD MLOAD PUSH2 0x1A0 MSTORE SWAP1 DUP8 ADD MLOAD PUSH2 0x200 MSTORE SWAP2 DUP7 ADD MLOAD PUSH2 0x220 MSTORE SWAP1 DUP6 ADD MLOAD PUSH2 0x1C0 MSTORE DUP5 ADD MLOAD PUSH2 0x1E0 MSTORE DUP1 ISZERO ISZERO PUSH1 0xF8 SHL PUSH2 0x240 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH3 0x473 JUMPI DUP3 DUP2 PUSH1 0x8 DUP2 LT PUSH3 0x3FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH3 0x40A JUMPI PUSH3 0x473 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 PUSH1 0x8 DUP2 LT PUSH3 0x424 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP5 PUSH1 0x8 DUP2 LT PUSH3 0x43B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH3 0x3E3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x556 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4E2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x52D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x4FD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x52D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x52D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x52D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x510 JUMP JUMPDEST POP PUSH3 0x53B SWAP3 SWAP2 POP PUSH3 0x53F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x53B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x540 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH1 0xF8 SHR PUSH2 0x4349 PUSH3 0x6D3 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x19C0 MSTORE DUP1 PUSH2 0x3F17 MSTORE POP DUP1 PUSH2 0xE53 MSTORE DUP1 PUSH2 0x33E8 MSTORE POP DUP1 PUSH2 0xE1D MSTORE DUP1 PUSH2 0xE7D MSTORE DUP1 PUSH2 0x33A0 MSTORE POP DUP1 PUSH2 0x1DBC MSTORE DUP1 PUSH2 0x20D3 MSTORE POP DUP1 PUSH2 0x1D98 MSTORE DUP1 PUSH2 0x3CEA MSTORE DUP1 PUSH2 0x3D1A MSTORE POP DUP1 PUSH2 0xD5F MSTORE DUP1 PUSH2 0x1295 MSTORE DUP1 PUSH2 0x1AB3 MSTORE DUP1 PUSH2 0x1E9E MSTORE DUP1 PUSH2 0x2EF5 MSTORE POP DUP1 PUSH2 0x1317 MSTORE DUP1 PUSH2 0x1EC2 MSTORE POP DUP1 PUSH2 0x2CE0 MSTORE DUP1 PUSH2 0x3C81 MSTORE POP DUP1 PUSH2 0x1C25 MSTORE DUP1 PUSH2 0x213C MSTORE DUP1 PUSH2 0x22AC MSTORE DUP1 PUSH2 0x26AF MSTORE POP DUP1 PUSH2 0xCBC MSTORE DUP1 PUSH2 0x1C01 MSTORE DUP1 PUSH2 0x2C15 MSTORE DUP1 PUSH2 0x3C34 MSTORE POP DUP1 PUSH2 0xA35 MSTORE DUP1 PUSH2 0xCDD MSTORE DUP1 PUSH2 0x2C36 MSTORE DUP1 PUSH2 0x3C12 MSTORE DUP1 PUSH2 0x3F6A MSTORE POP DUP1 PUSH2 0xCFE MSTORE DUP1 PUSH2 0x2009 MSTORE DUP1 PUSH2 0x2C57 MSTORE DUP1 PUSH2 0x3655 MSTORE DUP1 PUSH2 0x3BF1 MSTORE DUP1 PUSH2 0x3F49 MSTORE POP DUP1 PUSH2 0x2A75 MSTORE DUP1 PUSH2 0x2F21 MSTORE DUP1 PUSH2 0x35E8 MSTORE POP DUP1 PUSH2 0xA59 MSTORE DUP1 PUSH2 0x2DAD MSTORE DUP1 PUSH2 0x2E3C MSTORE POP DUP1 PUSH2 0x1CA2 MSTORE DUP1 PUSH2 0x2168 MSTORE DUP1 PUSH2 0x21F9 MSTORE DUP1 PUSH2 0x2341 MSTORE DUP1 PUSH2 0x2404 MSTORE DUP1 PUSH2 0x2433 MSTORE DUP1 PUSH2 0x2829 MSTORE DUP1 PUSH2 0x2D7E MSTORE DUP1 PUSH2 0x302A MSTORE DUP1 PUSH2 0x33C4 MSTORE POP PUSH2 0x4349 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A9920B7 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xBF852196 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xEB850AE1 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF3D9DC0D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xF8E829C3 EQ PUSH2 0xA06 JUMPI DUP1 PUSH4 0xF8EEED62 EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0xA16 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x995 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D0 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xD7EFB6B7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x97D JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x985 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xBF852196 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x92D JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xA150194B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xAA7BCB57 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x8FD JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xBECE7532 EQ PUSH2 0x90D JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xA150194B EQ PUSH2 0x870 JUMPI DUP1 PUSH4 0xA35EF3A7 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x8D0 JUMPI DUP1 PUSH4 0xA7A48681 EQ PUSH2 0x8D8 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x95C2BA47 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xA118C9A7 EQ PUSH2 0x851 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x8A9920B7 EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x831 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x4BC4EEB2 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x28D JUMPI DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x792 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x7A2 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0x78F4D413 EQ PUSH2 0x749 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x729 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x4C7C77FC EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0x4DDC1BDC EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x6DB JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x3299AC5F GT PUSH2 0x372 JUMPI DUP1 PUSH4 0x4026478E GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x661 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x3299AC5F EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x34381749 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x3AC58B9A EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x3FCDD82C EQ PUSH2 0x579 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x238A6C74 GT PUSH2 0x3AE JUMPI DUP1 PUSH4 0x238A6C74 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x31E244E5 EQ PUSH2 0x4EF JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x183521CC EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0x444 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x44C PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x48A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x402 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x139B JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x151B JUMP JUMPDEST PUSH2 0x5A6 PUSH2 0x157C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5D2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x629 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x611 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x44C PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2749 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x29C5 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x2A97 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2AA7 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x880 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0x2BAA JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2BBA JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2CDE JUMP JUMPDEST PUSH2 0x468 PUSH2 0x2D02 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0x402 PUSH2 0x317D JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x318C JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x32C5 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3341 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3350 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x3356 JUMP JUMPDEST PUSH2 0x95A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3366 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH2 0x339E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x33C2 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x33E6 JUMP JUMPDEST PUSH2 0x99D PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x348D JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x35CF JUMP JUMPDEST PUSH2 0x402 PUSH2 0x35D5 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x35E4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x95A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3677 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xAAE JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB73 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0xBB1 JUMPI PUSH2 0xBAE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB5E JUMP JUMPDEST POP SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC75 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41AD PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xD8B PUSH2 0x35E4 JUMP JUMPDEST PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42B7 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0xE1B JUMPI PUSH1 0xA SLOAD PUSH2 0xE1B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 PUSH2 0xE4B PUSH2 0x318C JUMP JUMPDEST SWAP1 POP PUSH2 0xE77 DUP2 PUSH32 0x0 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0xEA0 JUMPI PUSH32 0x0 PUSH1 0xD SSTORE JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xEB7 JUMPI PUSH1 0xA SLOAD PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF4B JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEDC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0xA DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xF13 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF2F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xEBF JUMP JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR AND PUSH1 0x1 PUSH1 0xB8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFBE PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x101F PUSH2 0x36EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6B6C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7530 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x445C DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 NOT DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x177 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC8 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x113F JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 EQ PUSH2 0x10BA JUMPI PUSH2 0x10B5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x10AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x10BC JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP9 GT PUSH2 0x10CD JUMPI DUP8 PUSH2 0x10CF JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x1119 PUSH2 0x1112 PUSH8 0xDE0B6B3A7640000 PUSH2 0x110C PUSH2 0x1F4 DUP2 PUSH3 0xF4240 PUSH2 0x1106 DUP13 DUP12 PUSH1 0x4 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP1 PUSH2 0x3783 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP4 POP DUP2 DUP9 GT PUSH2 0x1129 JUMPI POP POP PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1133 DUP9 DUP4 PUSH2 0x37EA JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x1 ADD PUSH2 0x107F JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1159 DUP7 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1164 DUP7 PUSH2 0x1180 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1173 DUP2 DUP5 PUSH2 0x3687 JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11A1 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x11D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x117B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x12BE SWAP1 PUSH2 0x110C PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x135E JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x12DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x1356 JUMPI PUSH1 0x0 PUSH2 0x130D DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x3847 JUMP JUMPDEST SWAP1 POP PUSH2 0x133C PUSH2 0x1112 PUSH32 0x0 DUP4 PUSH2 0x38B2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1352 PUSH2 0x134B DUP7 DUP4 PUSH2 0x38B2 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12C6 JUMP JUMPDEST POP PUSH1 0xD SLOAD ISZERO PUSH2 0x138F JUMPI PUSH1 0xD SLOAD PUSH2 0x1375 SWAP1 DUP4 SWAP1 PUSH2 0x38C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x138C PUSH1 0xD SLOAD DUP3 PUSH2 0x38C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x13BA PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x140F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x150B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152F PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101F PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1611 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x162E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1659 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1686 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16A4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1617 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16D5 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x172E JUMPI PUSH2 0x172E PUSH1 0xA PUSH1 0x0 PUSH2 0x411D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x1748 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x176A JUMPI PUSH2 0x17FC JUMP JUMPDEST PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x1783 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x17AB JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x1731 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x185D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4262 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x198A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1996 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x19B2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0xC SLOAD PUSH2 0x19FB DUP5 DUP5 PUSH2 0x37EA JUMP JUMPDEST GT PUSH2 0x1A08 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A1F SWAP1 PUSH2 0x1A19 DUP6 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A33 DUP5 DUP5 PUSH2 0x3687 JUMP JUMPDEST LT PUSH2 0x1A40 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1A1F PUSH2 0x1A4D DUP5 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6A PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4164 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1B63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220446561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH2 0xF9A JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC5 DUP2 DUP5 PUSH2 0x38EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD0 DUP5 PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BEA PUSH2 0x1BE3 DUP4 PUSH2 0x12C PUSH2 0x38B2 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF8 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x39B1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C5B PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1CA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41FF PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DE6 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DF7 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1F17 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1FC3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 PUSH2 0x1FDC DUP7 DUP4 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE8 DUP4 DUP3 PUSH2 0x3687 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x202B JUMPI POP PUSH32 0x0 TIMESTAMP GT JUMPDEST PUSH2 0x207C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033313320706F6F6C206973206E6F7420616374697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x2130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x428D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2162 PUSH1 0x64 PUSH2 0x110C PUSH32 0x0 PUSH1 0x5 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x2226 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x228D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x22A2 JUMPI PUSH2 0x229D DUP6 DUP4 PUSH2 0x38B2 JUMP JUMPDEST PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x22D1 PUSH32 0x0 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH2 0x22EA DUP3 PUSH2 0x1A19 DUP9 PUSH1 0xB SLOAD PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41D9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2333 DUP7 DUP5 PUSH2 0x3CE2 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x236E PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP6 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23FA SWAP1 POP DUP7 DUP4 PUSH2 0x37EA JUMP JUMPDEST SWAP6 POP DUP1 ISZERO PUSH2 0x2531 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x248A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2518 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x252E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x253E SWAP1 DUP8 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2559 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH1 0x0 PUSH2 0x2573 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x8 SWAP1 PUSH2 0x25D4 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH32 0x0 GT PUSH2 0x26DB JUMPI PUSH2 0x26DB PUSH2 0x36EC JUMP JUMPDEST PUSH2 0x26E3 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x280D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x69742773206E6F7420616E20656D657267656E6379 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x281F PUSH2 0x281A PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x292B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x285E PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E2 SWAP1 POP PUSH2 0x28DD PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3D7E JUMP JUMPDEST PUSH2 0x28EA PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2942 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2987 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2A66 JUMPI PUSH1 0x0 PUSH2 0x2A68 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ABB PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2B62 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2B8D JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BCE PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42DE PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD0 JUMPI PUSH1 0xC DUP2 SWAP1 SSTORE PUSH2 0x292B JUMP JUMPDEST PUSH2 0x2CD8 PUSH2 0x29D4 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D70 PUSH2 0x2D6B PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2ED1 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2ED1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2E71 PUSH2 0x36E8 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2EE1 PUSH2 0x2EDC PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3129 JUMPI PUSH32 0x0 ISZERO PUSH2 0x3013 JUMPI DUP1 ISZERO PUSH2 0x3003 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2F56 PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x3003 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3013 PUSH2 0x300E PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3020 PUSH2 0x281A PUSH2 0x36E8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x305F PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30DE SWAP1 POP PUSH2 0x28DD PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x30E6 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x3131 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x31A1 JUMPI POP PUSH1 0x0 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x32B6 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x31C2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x9 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x31F9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x3215 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x32AB SWAP2 PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x31A5 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A68 SWAP1 DUP3 SWAP1 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3324 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x345B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x349D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x34C3 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34D4 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4187 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x36E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3739 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3746 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x36E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4241 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x37D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x37E2 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3841 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x38A9 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3862 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0x38A1 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3887 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x384B JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E1 PUSH2 0x2710 PUSH2 0x110C DUP6 DUP6 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38D3 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x38DF JUMPI POP DUP2 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x36E1 PUSH2 0x134B DUP5 DUP5 PUSH2 0x38B2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x396C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x39C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x39DF PUSH2 0x2B23 JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A51 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A39 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3AEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B1E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x3B71 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x3C62 JUMPI TIMESTAMP PUSH2 0x3C64 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C75 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x3F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CBD PUSH2 0x3CA6 PUSH32 0x0 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3CB6 SWAP1 DUP7 SWAP1 PUSH2 0x37EA JUMP JUMPDEST DUP8 MLOAD PUSH2 0x401A JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD6 DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x37EA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x3D15 JUMPI PUSH1 0x0 PUSH2 0x3D3F JUMP JUMPDEST PUSH2 0x3D3F PUSH32 0x0 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D53 JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x3D77 JUMP JUMPDEST PUSH2 0x3D5D DUP6 DUP3 PUSH2 0x38B2 JUMP JUMPDEST PUSH2 0x3D71 PUSH2 0x3D6A DUP8 DUP5 PUSH2 0x38B2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3DA2 JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3DBC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E16 JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x0 PUSH2 0x3E2E DUP5 DUP4 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E3D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3E82 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3E62 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E8E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3ECF JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3EE9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3ED2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x3F42 JUMPI POP PUSH1 0x0 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8E PUSH32 0x0 PUSH32 0x0 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F9C DUP3 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x3FB4 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x3FCA JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x3FE0 JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x3FF7 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x400E JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x4037 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x404D PUSH2 0x1388 PUSH2 0x1106 DUP6 DUP2 DUP11 DUP13 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4064 PUSH2 0x1388 PUSH2 0x1106 DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x407D PUSH1 0x6 PUSH2 0x110C PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40A0 PUSH1 0x2 PUSH2 0x110C DUP9 PUSH2 0x1106 PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x372A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40B9 PUSH1 0x3 PUSH2 0x110C PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40CD DUP7 DUP2 DUP12 DUP12 PUSH2 0x3687 JUMP JUMPDEST SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E3 DUP4 PUSH2 0x1A19 DUP4 DUP9 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x40F3 DUP12 PUSH2 0x1106 DUP4 DUP16 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH2 0x410D PUSH5 0xE8D4A51000 PUSH2 0x110C PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x372A JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x292B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x415F JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x413A JUMP JUMPDEST POP SWAP1 JUMP INVALID ADDRESS CALLER CALLVALUE ADDRESS KECCAK256 SLOAD PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH16 0x6E6C7920544F544D2072657761726465 PUSH19 0x4F776E61626C653A206E6577206F776E657220 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303338302074 PUSH9 0x697320616464726573 PUSH20 0x206469646E2774207374616B6520696E20746869 PUSH20 0x20706F6F6C3033313120416D6F756E742063616E 0x27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333631205772 PUSH2 0x7070 PUSH6 0x64546F6B656E KECCAK256 MSTORE PUSH6 0x776172647320 PUSH15 0x6F7420617661696C61626C65303335 ADDRESS KECCAK256 NUMBER PUSH2 0x6E27 PUSH21 0x20736574206D61747572696E672070726963652062 PUSH6 0x666F72652074 PUSH9 0x65206D617475726974 PUSH26 0x2074696D65A2646970667358221220F219269857C47C3BD976CC EXTCODECOPY CALLER MULMOD PUSH28 0x4D3BAD026611EE365EF2A7E4E6E75FECE364736F6C63430007060033 ADDRESS CALLER ADDRESS BALANCE KECCAK256 PUSH13 0x61756E63682064617465206361 PUSH15 0x277420626520696E20706173740000 ",
      "sourceMap": "229:31975:17:-:0;;;3115:1797;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3115:1797:17;;;;;;;;;;-1:-1:-1;3115:1797:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3115:1797:17;;;;;;;;;;-1:-1:-1;3115:1797:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3115:1797:17;;;;;;;;;;;;;;;;;;;;;;;3555:9;;3566;;;;3577;;;;3512;;;;3115:1797;;-1:-1:-1;3115:1797:17;;-1:-1:-1;3115:1797:17;;;;;;;;;;;;;;;;;;3566:9;3562:1;887:12:1;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:1;-1:-1:-1;;;;;909:18:1;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:1;942:43;;909:6;;942:43;-1:-1:-1;478:9:11;:42;;-1:-1:-1;;;;;;478:42:11;;;-1:-1:-1;;;;;478:42:11;;;;;;;495:10:8;:48;;;;;;;;;;;;;;553:21;:43;;;;;;;;;;;;;;606:30;:60;;;;;;;;;;3624:13:17;;3640:15:::2;-1:-1:-1::0;3603:111:17::2;;;;-1:-1:-1::0;;;3603:111:17::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3725:40:::0;;::::2;::::0;:18:::2;::::0;:40:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;3775:20:17;;::::2;::::0;:8:::2;::::0;:20:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;3806:24:17;;;;;::::2;::::0;3840:30;;;;::::2;::::0;3897:9;;::::2;::::0;3880:14:::2;:26:::0;;-1:-1:-1;;;;;;3880:26:17;;::::2;-1:-1:-1::0;;;;;3880:26:17;;::::2;;::::0;;;3917:11:::2;:26:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;3897:9:::2;3966::::0;::::2;::::0;3954:22:::2;::::0;:11:::2;:22::i;:::-;4008:9:::0;;;::::2;::::0;3986:32;;-1:-1:-1;;3986:32:17;::::2;::::0;;;4084:13;;4071:26:::2;::::0;;;4008:9:::2;4123:13:::0;::::2;::::0;4108:28:::2;::::0;;;4157:13;;::::2;::::0;4146:24:::2;::::0;;;4198:13;;::::2;::::0;4181:30:::2;::::0;;;4232:13;;::::2;::::0;4221:24:::2;::::0;4278:13;;::::2;::::0;4264:27:::2;::::0;4318:13;;::::2;::::0;4301:30:::2;::::0;4365:13;;::::2;::::0;4341:37:::2;::::0;4409:13;;::::2;::::0;4388:34:::2;::::0;4492:13;;::::2;::::0;4477:28:::2;::::0;4536:14;::::2;::::0;4515:35:::2;::::0;4565:38;::::2;;;;;::::0;4095:1:::2;4615:291;4639:13;4635:1;:17;4615:291;;;4678:12;4691:1;4678:15;;;;;;;;;;::::0;4674:31:::2;;4700:5;;4674:31;4720:16;4759:122;;;;;;;;4803:6;4810:1;4803:9;;;;;;;;;;;4759:122;;;;4847:12;4860:1;4847:15;;;;;;;;::::0;;::::2;::::0;;;::::2;::::0;4759:122;;;4720:175;;::::2;::::0;;::::2;::::0;;-1:-1:-1;4720:175:17;;;;;;;;;::::2;::::0;;::::2;;::::0;;;;::::2;::::0;;;::::2;::::0;4654:3:::2;4615:291;;;;3115:1797:::0;;;;;;;;;;229:31975;;598:104:5;685:10;598:104;:::o;372:118:7:-;441:12;:42;;-1:-1:-1;;;;;;441:42:7;-1:-1:-1;;;;;441:42:7;;;;;;;;;;372:118::o;229:31975:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;229:31975:17;;;-1:-1:-1;229:31975:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {
        "2521": [
          {
            "length": 32,
            "start": 7330
          },
          {
            "length": 32,
            "start": 8552
          },
          {
            "length": 32,
            "start": 8697
          },
          {
            "length": 32,
            "start": 9025
          },
          {
            "length": 32,
            "start": 9220
          },
          {
            "length": 32,
            "start": 9267
          },
          {
            "length": 32,
            "start": 10281
          },
          {
            "length": 32,
            "start": 11646
          },
          {
            "length": 32,
            "start": 12330
          },
          {
            "length": 32,
            "start": 13252
          }
        ],
        "2523": [
          {
            "length": 32,
            "start": 2649
          },
          {
            "length": 32,
            "start": 11693
          },
          {
            "length": 32,
            "start": 11836
          }
        ],
        "2525": [
          {
            "length": 32,
            "start": 10869
          },
          {
            "length": 32,
            "start": 12065
          },
          {
            "length": 32,
            "start": 13800
          }
        ],
        "2531": [
          {
            "length": 32,
            "start": 3326
          },
          {
            "length": 32,
            "start": 8201
          },
          {
            "length": 32,
            "start": 11351
          },
          {
            "length": 32,
            "start": 13909
          },
          {
            "length": 32,
            "start": 15345
          },
          {
            "length": 32,
            "start": 16201
          }
        ],
        "2533": [
          {
            "length": 32,
            "start": 2613
          },
          {
            "length": 32,
            "start": 3293
          },
          {
            "length": 32,
            "start": 11318
          },
          {
            "length": 32,
            "start": 15378
          },
          {
            "length": 32,
            "start": 16234
          }
        ],
        "2535": [
          {
            "length": 32,
            "start": 3260
          },
          {
            "length": 32,
            "start": 7169
          },
          {
            "length": 32,
            "start": 11285
          },
          {
            "length": 32,
            "start": 15412
          }
        ],
        "2537": [
          {
            "length": 32,
            "start": 7205
          },
          {
            "length": 32,
            "start": 8508
          },
          {
            "length": 32,
            "start": 8876
          },
          {
            "length": 32,
            "start": 9903
          }
        ],
        "2539": [
          {
            "length": 32,
            "start": 11488
          },
          {
            "length": 32,
            "start": 15489
          }
        ],
        "2541": [
          {
            "length": 32,
            "start": 4887
          },
          {
            "length": 32,
            "start": 7874
          }
        ],
        "2543": [
          {
            "length": 32,
            "start": 3423
          },
          {
            "length": 32,
            "start": 4757
          },
          {
            "length": 32,
            "start": 6835
          },
          {
            "length": 32,
            "start": 7838
          },
          {
            "length": 32,
            "start": 12021
          }
        ],
        "2545": [
          {
            "length": 32,
            "start": 7576
          },
          {
            "length": 32,
            "start": 15594
          },
          {
            "length": 32,
            "start": 15642
          }
        ],
        "2547": [
          {
            "length": 32,
            "start": 7612
          },
          {
            "length": 32,
            "start": 8403
          }
        ],
        "2570": [
          {
            "length": 32,
            "start": 3613
          },
          {
            "length": 32,
            "start": 3709
          },
          {
            "length": 32,
            "start": 13216
          }
        ],
        "2572": [
          {
            "length": 32,
            "start": 3667
          },
          {
            "length": 32,
            "start": 13288
          }
        ],
        "2582": [
          {
            "length": 32,
            "start": 6592
          },
          {
            "length": 32,
            "start": 16151
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3DB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A9920B7 GT PUSH2 0x20A JUMPI DUP1 PUSH4 0xBF852196 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xEB850AE1 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xF3D9DC0D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF3D9DC0D EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0xF5E96FC9 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0xF8E829C3 EQ PUSH2 0xA06 JUMPI DUP1 PUSH4 0xF8EEED62 EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0xA16 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xEB850AE1 EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xF0141D84 EQ PUSH2 0x995 JUMPI DUP1 PUSH4 0xF1B17A8B EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D0 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xD7EFB6B7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xD7EFB6B7 EQ PUSH2 0x935 JUMPI DUP1 PUSH4 0xDE09EE20 EQ PUSH2 0x93D JUMPI DUP1 PUSH4 0xE425DF8C EQ PUSH2 0x97D JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x985 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xBF852196 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC1201054 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xC6C1DECD EQ PUSH2 0x925 JUMPI DUP1 PUSH4 0xD025188B EQ PUSH2 0x92D JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xA150194B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xAA7BCB57 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xAA7BCB57 EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xB1DD61B6 EQ PUSH2 0x8FD JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xBECE7532 EQ PUSH2 0x90D JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xA150194B EQ PUSH2 0x870 JUMPI DUP1 PUSH4 0xA35EF3A7 EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xA4E2D634 EQ PUSH2 0x8D0 JUMPI DUP1 PUSH4 0xA7A48681 EQ PUSH2 0x8D8 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x95C2BA47 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x95C2BA47 EQ PUSH2 0x839 JUMPI DUP1 PUSH4 0x996C6CC3 EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xA08B2C79 EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xA118C9A7 EQ PUSH2 0x851 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x8A9920B7 EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0x8BFBBCBE EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x829 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x831 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x4BC4EEB2 GT PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x28D JUMPI DUP1 PUSH4 0x7B0472F0 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0x7F2B6A0D EQ PUSH2 0x792 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0x850FA7CB EQ PUSH2 0x7A2 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0x73F31703 EQ PUSH2 0x739 JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0x78F4D413 EQ PUSH2 0x749 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x51EACBF0 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x51EACBF0 EQ PUSH2 0x6E3 JUMPI DUP1 PUSH4 0x5D2631E2 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x6847D0C5 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x6B036F45 EQ PUSH2 0x729 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x4BC4EEB2 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x4C7C77FC EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0x4DDC1BDC EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x4E8BFDAA EQ PUSH2 0x6DB JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x3299AC5F GT PUSH2 0x372 JUMPI DUP1 PUSH4 0x4026478E GT PUSH2 0x341 JUMPI DUP1 PUSH4 0x4026478E EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0x43352D61 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0x444A4902 EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x45E91319 EQ PUSH2 0x661 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x3299AC5F EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x34381749 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x3AC58B9A EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x3FCDD82C EQ PUSH2 0x579 JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0x238A6C74 GT PUSH2 0x3AE JUMPI DUP1 PUSH4 0x238A6C74 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x2D42CF7D EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x2E577D07 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x31E244E5 EQ PUSH2 0x4EF JUMPI PUSH2 0x3DB JUMP JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x183521CC EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x22F3E2D4 EQ PUSH2 0x444 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x44C PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x48A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4CF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0xC61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x402 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x139B JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x151B JUMP JUMPDEST PUSH2 0x5A6 PUSH2 0x157C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5D2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x629 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x611 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x640 DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 DUP2 ADD PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x182A JUMP JUMPDEST PUSH2 0x44C PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x1DDE JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1E9C JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x2733 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2749 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP9 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x120 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E5 PUSH2 0x27B7 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x29C5 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2A6E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x2A97 JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x867 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2AA7 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2B1E JUMP JUMPDEST PUSH2 0x880 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8A4 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH2 0x2BAA JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2BBA JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2CDE JUMP JUMPDEST PUSH2 0x468 PUSH2 0x2D02 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0x402 PUSH2 0x317D JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x318C JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x32C5 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3341 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3350 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x3356 JUMP JUMPDEST PUSH2 0x95A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3366 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH2 0x339E JUMP JUMPDEST PUSH2 0x402 PUSH2 0x33C2 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x33E6 JUMP JUMPDEST PUSH2 0x99D PUSH2 0x340A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x348D JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34BB JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x35CF JUMP JUMPDEST PUSH2 0x402 PUSH2 0x35D5 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x35E4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3653 JUMP JUMPDEST PUSH2 0x95A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3677 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xAAE JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xB5A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB73 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD PUSH2 0xBB1 JUMPI PUSH2 0xBAE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB5E JUMP JUMPDEST POP SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC75 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41AD PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xD8B PUSH2 0x35E4 JUMP JUMPDEST PUSH2 0xDC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42B7 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0xE1B JUMPI PUSH1 0xA SLOAD PUSH2 0xE1B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC0CCD8C88199A5C9CDD081CDA1BDD5B19081CDBDC9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xEA2 JUMPI PUSH1 0x0 PUSH2 0xE4B PUSH2 0x318C JUMP JUMPDEST SWAP1 POP PUSH2 0xE77 DUP2 PUSH32 0x0 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0xEA0 JUMPI PUSH32 0x0 PUSH1 0xD SSTORE JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x19 LT PUSH2 0xEB7 JUMPI PUSH1 0xA SLOAD PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x19 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF4B JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEDC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0xA DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xF13 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xF2F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH1 0x1 ADD PUSH2 0xEBF JUMP JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xB8 SHL NOT PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR AND PUSH1 0x1 PUSH1 0xB8 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE8EF7A17C92D025D9C1EAD1C6B3CA3B44D3283D0EE954F615C5C476911F629A5 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFBE PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH2 0x101F PUSH2 0x36EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x6B6C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7530 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x445C DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 NOT DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x177 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC8 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x113F JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 EQ PUSH2 0x10BA JUMPI PUSH2 0x10B5 PUSH8 0xDE0B6B3A7640000 DUP7 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x10AA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x10BC JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP9 GT PUSH2 0x10CD JUMPI DUP8 PUSH2 0x10CF JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x1119 PUSH2 0x1112 PUSH8 0xDE0B6B3A7640000 PUSH2 0x110C PUSH2 0x1F4 DUP2 PUSH3 0xF4240 PUSH2 0x1106 DUP13 DUP12 PUSH1 0x4 DUP2 LT PUSH2 0x10FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP1 PUSH2 0x3783 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP4 POP DUP2 DUP9 GT PUSH2 0x1129 JUMPI POP POP PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1133 DUP9 DUP4 PUSH2 0x37EA JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x1 ADD PUSH2 0x107F JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1159 DUP7 PUSH2 0x1EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1164 DUP7 PUSH2 0x1180 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1173 DUP2 DUP5 PUSH2 0x3687 JUMP JUMPDEST SWAP5 POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11A1 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x11D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x117B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x12BE SWAP1 PUSH2 0x110C PUSH32 0x0 PUSH4 0x5F5E100 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x135E JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x12DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 ADD MLOAD PUSH2 0x1356 JUMPI PUSH1 0x0 PUSH2 0x130D DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12FC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH2 0x3847 JUMP JUMPDEST SWAP1 POP PUSH2 0x133C PUSH2 0x1112 PUSH32 0x0 DUP4 PUSH2 0x38B2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1352 PUSH2 0x134B DUP7 DUP4 PUSH2 0x38B2 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12C6 JUMP JUMPDEST POP PUSH1 0xD SLOAD ISZERO PUSH2 0x138F JUMPI PUSH1 0xD SLOAD PUSH2 0x1375 SWAP1 DUP4 SWAP1 PUSH2 0x38C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x138C PUSH1 0xD SLOAD DUP3 PUSH2 0x38C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP5 PUSH2 0x13BA PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x140F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13F7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14D7 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x150B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152F PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101F PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x159D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15C7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1611 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x162E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1659 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1686 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16A4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1617 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16D5 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x172E JUMPI PUSH2 0x172E PUSH1 0xA PUSH1 0x0 PUSH2 0x411D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x19 DUP2 LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x19 DUP2 LT PUSH2 0x1748 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x176A JUMPI PUSH2 0x17FC JUMP JUMPDEST PUSH1 0xA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x1783 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x19 DUP2 LT PUSH2 0x17AB JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 ADD MLOAD SWAP1 DUP3 ADD SSTORE ADD PUSH2 0x1731 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x5C243CC6E4F210BF2DD86B8ECA0CA891D3F8AD2EB09FBF91735EB348BC199C7E SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x185D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4262 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0x198A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x30333831207468697320696E6465782065786365656473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1996 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x100 ADD MLOAD ISZERO PUSH2 0x19B2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0xC SLOAD PUSH2 0x19FB DUP5 DUP5 PUSH2 0x37EA JUMP JUMPDEST GT PUSH2 0x1A08 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A1F SWAP1 PUSH2 0x1A19 DUP6 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A33 DUP5 DUP5 PUSH2 0x3687 JUMP JUMPDEST LT PUSH2 0x1A40 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1A1F PUSH2 0x1A4D DUP5 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6A PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 GT PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4164 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1B63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033343120416D6F756E742063616E2774206265207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x1BAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3033343220446561646C696E65206973206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH2 0xF9A JUMP JUMPDEST SWAP1 POP PUSH2 0x1BC5 DUP2 DUP5 PUSH2 0x38EC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD0 DUP5 PUSH2 0x139B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BEA PUSH2 0x1BE3 DUP4 PUSH2 0x12C PUSH2 0x38B2 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF8 ADDRESS DUP7 DUP4 DUP8 PUSH2 0x39B1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C5B PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1CA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41FF PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD DUP6 SWAP3 DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1DE6 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DF7 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1F17 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1FC3 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 PUSH2 0x1FDC DUP7 DUP4 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1FE8 DUP4 DUP3 PUSH2 0x3687 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x202B JUMPI POP PUSH32 0x0 TIMESTAMP GT JUMPDEST PUSH2 0x207C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x3033313320706F6F6C206973206E6F7420616374697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0xC0CCC4C08141BDBDB081A5CC81B1BD8DAD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 LT ISZERO PUSH2 0x2130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x428D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2162 PUSH1 0x64 PUSH2 0x110C PUSH32 0x0 PUSH1 0x5 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x771A3A1D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xD1ECFC68 PUSH2 0x2226 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x228D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x22A2 JUMPI PUSH2 0x229D DUP6 DUP4 PUSH2 0x38B2 JUMP JUMPDEST PUSH2 0x22A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH2 0x22D1 PUSH32 0x0 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH2 0x22EA DUP3 PUSH2 0x1A19 DUP9 PUSH1 0xB SLOAD PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x41D9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2333 DUP7 DUP5 PUSH2 0x3CE2 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x23B872DD PUSH2 0x236E PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP10 DUP6 ADD PUSH1 0x44 DUP4 ADD MSTORE MLOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23FA SWAP1 POP DUP7 DUP4 PUSH2 0x37EA JUMP JUMPDEST SWAP6 POP DUP1 ISZERO PUSH2 0x2531 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4A5DB0A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x248A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2518 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x252E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x253E SWAP1 DUP8 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2559 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH1 0x0 PUSH2 0x2573 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SWAP4 MSTORE DUP5 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP8 SSTORE SWAP6 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE PUSH1 0x8 SWAP1 PUSH2 0x25D4 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP11 DUP2 MSTORE TIMESTAMP DUP2 DUP7 ADD DUP2 DUP2 MSTORE SWAP5 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP4 ADD DUP13 DUP2 MSTORE PUSH1 0x0 NOT PUSH1 0xA0 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0xE0 DUP7 ADD DUP9 DUP2 MSTORE PUSH2 0x100 DUP1 DUP9 ADD DUP11 DUP2 MSTORE DUP10 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP13 SSTORE SWAP11 DUP13 MSTORE SWAP13 SWAP1 SWAP11 KECCAK256 SWAP8 MLOAD PUSH1 0x8 SWAP1 SWAP13 MUL SWAP1 SWAP8 ADD SWAP11 DUP12 SSTORE SWAP9 MLOAD SWAP7 DUP11 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP10 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP9 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x7 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD PUSH1 0xFF NOT SWAP3 SWAP1 SWAP3 AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0xB SLOAD PUSH32 0x0 GT PUSH2 0x26DB JUMPI PUSH2 0x26DB PUSH2 0x36EC JUMP JUMPDEST PUSH2 0x26E3 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP2 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x280D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x69742773206E6F7420616E20656D657267656E6379 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x281F PUSH2 0x281A PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x292B JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x285E PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E2 SWAP1 POP PUSH2 0x28DD PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3D7E JUMP JUMPDEST PUSH2 0x28EA PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2942 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2987 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9331B2A38C658C57A39EA19B2709D928C28A12CC8FBB838D12B85148550F937D SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2A66 JUMPI PUSH1 0x0 PUSH2 0x2A68 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2ABB PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2B00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2B62 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x2B8D JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2BCE PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4220 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 ADD ADD TIMESTAMP LT ISZERO PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x42DE PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD0 JUMPI PUSH1 0xC DUP2 SWAP1 SSTORE PUSH2 0x292B JUMP JUMPDEST PUSH2 0x2CD8 PUSH2 0x29D4 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D70 PUSH2 0x2D6B PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x2ED1 JUMPI DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT PUSH2 0x2ED1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E103DC PUSH2 0x2E71 PUSH2 0x36E8 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x2EE1 PUSH2 0x2EDC PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3DF2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3129 JUMPI PUSH32 0x0 ISZERO PUSH2 0x3013 JUMPI DUP1 ISZERO PUSH2 0x3003 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x2F56 PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x3003 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x3033323 PUSH1 0xE4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3013 PUSH2 0x300E PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3020 PUSH2 0x281A PUSH2 0x36E8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x3127 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x305F PUSH2 0x36E8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30DE SWAP1 POP PUSH2 0x28DD PUSH2 0x36E8 JUMP JUMPDEST PUSH2 0x30E6 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH2 0x3131 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x31A1 JUMPI POP PUSH1 0x0 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x32B6 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x9 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x31C2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 PUSH1 0x9 DUP1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x31F9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x3215 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SWAP1 SWAP3 POP PUSH2 0x32AB SWAP2 PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x372A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x31A5 JUMP JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x2A68 SWAP1 DUP3 SWAP1 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3324 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x345B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x349D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST PUSH2 0x34C3 PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34D4 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x352F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4187 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x36E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2E136745550967F28B779CE8C395CA060A2F844EDFB5B06631FE677F66F9E305 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3739 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3746 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x36E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4241 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x37D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x37E2 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x3841 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x10 SLOAD DUP2 LT ISZERO PUSH2 0x38A9 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3862 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0x38A1 JUMPI PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3887 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x384B JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E1 PUSH2 0x2710 PUSH2 0x110C DUP6 DUP6 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x38D3 JUMPI POP PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x38DF JUMPI POP DUP2 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x36E1 PUSH2 0x134B DUP5 DUP5 PUSH2 0x38B2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x396C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xD77DF63D9076D067D9FD7AF16C3D67DB48B84064C3314F5900AE919922D364A1 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x39C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP5 DUP5 PUSH2 0x39DF PUSH2 0x2B23 JUMP JUMPDEST DUP9 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A51 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A39 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x3AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3AEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x3B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B36 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B1E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x3B71 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP2 POP PUSH32 0x0 PUSH32 0x0 ADD PUSH32 0x0 ADD SWAP1 TIMESTAMP DUP3 LT PUSH2 0x3C62 JUMPI TIMESTAMP PUSH2 0x3C64 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3C75 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x3F13 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3CBD PUSH2 0x3CA6 PUSH32 0x0 DUP5 PUSH2 0x3687 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3CB6 SWAP1 DUP7 SWAP1 PUSH2 0x37EA JUMP JUMPDEST DUP8 MLOAD PUSH2 0x401A JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD6 DUP6 PUSH1 0x40 ADD MLOAD DUP3 PUSH2 0x37EA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH32 0x0 GT PUSH2 0x3D15 JUMPI PUSH1 0x0 PUSH2 0x3D3F JUMP JUMPDEST PUSH2 0x3D3F PUSH32 0x0 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D53 JUMPI PUSH1 0x0 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x3D77 JUMP JUMPDEST PUSH2 0x3D5D DUP6 DUP3 PUSH2 0x38B2 JUMP JUMPDEST PUSH2 0x3D71 PUSH2 0x3D6A DUP8 DUP5 PUSH2 0x38B2 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x37EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3DA2 JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3DBC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3E16 JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x0 PUSH2 0x3E2E DUP5 DUP4 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E3D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3E82 DUP2 DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3E62 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x3687 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3E8E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SSTORE POP PUSH1 0x1 ADD PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x3ECF JUMPI POP PUSH2 0x292B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x3DED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3EE9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD PUSH1 0x7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x3ED2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x3F42 JUMPI POP PUSH1 0x0 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8E PUSH32 0x0 PUSH32 0x0 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F9C DUP3 DUP6 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH3 0x2A300 DUP2 LT ISZERO PUSH2 0x3FB4 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x3F480 DUP2 LT ISZERO PUSH2 0x3FCA JUMPI PUSH1 0x64 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x54600 DUP2 LT ISZERO PUSH2 0x3FE0 JUMPI PUSH1 0xC8 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x69780 DUP2 LT ISZERO PUSH2 0x3FF7 JUMPI PUSH2 0x12C SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH3 0x7E900 DUP2 LT ISZERO PUSH2 0x400E JUMPI PUSH2 0x190 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x1F4 SWAP3 POP POP POP PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1E13380 DUP2 PUSH2 0x4037 PUSH7 0x38882915C4000 PUSH4 0x5F5E100 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x404D PUSH2 0x1388 PUSH2 0x1106 DUP6 DUP2 DUP11 DUP13 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4064 PUSH2 0x1388 PUSH2 0x1106 DUP11 PUSH1 0x2 DUP9 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x407D PUSH1 0x6 PUSH2 0x110C PUSH1 0x2 DUP1 DUP13 EXP SWAP1 DUP14 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40A0 PUSH1 0x2 PUSH2 0x110C DUP9 PUSH2 0x1106 PUSH1 0x2 DUP16 EXP DUP15 PUSH2 0x372A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40B9 PUSH1 0x3 PUSH2 0x110C PUSH1 0x2 DUP1 DUP16 EXP SWAP1 DUP12 EXP PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x40D3 DUP3 PUSH2 0x40CD DUP7 DUP2 DUP12 DUP12 PUSH2 0x3687 JUMP JUMPDEST SWAP1 PUSH2 0x3687 JUMP JUMPDEST SWAP1 POP PUSH2 0x40E3 DUP4 PUSH2 0x1A19 DUP4 DUP9 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP PUSH2 0x40F3 DUP12 PUSH2 0x1106 DUP4 DUP16 PUSH2 0x372A JUMP JUMPDEST SWAP1 POP PUSH2 0x410D PUSH5 0xE8D4A51000 PUSH2 0x110C PUSH1 0x3 DUP12 EXP DUP2 DUP6 DUP16 PUSH2 0x372A JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x292B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x415F JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0x413A JUMP JUMPDEST POP SWAP1 JUMP INVALID ADDRESS CALLER CALLVALUE ADDRESS KECCAK256 SLOAD PUSH9 0x6520706F6F6C206973 KECCAK256 PUSH16 0x6E6C7920544F544D2072657761726465 PUSH19 0x4F776E61626C653A206E6577206F776E657220 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373303336302043616E277420656E642070 PUSH16 0x6F6C206265666F726520746865206D61 PUSH21 0x75726974792074696D65303331322043616E277420 PUSH20 0x74616B652061626F76652073697A6520616C6C6F PUSH4 0x6174696F PUSH15 0x3033373020746F74656D732063616E KECCAK256 PUSH15 0x6F74206265207472616E7366657265 PUSH5 0x3033303020 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206120706F6F6C2063726561 PUSH21 0x6F72536166654D6174683A206D756C7469706C6963 PUSH2 0x7469 PUSH16 0x6E206F766572666C6F77303338302074 PUSH9 0x697320616464726573 PUSH20 0x206469646E2774207374616B6520696E20746869 PUSH20 0x20706F6F6C3033313120416D6F756E742063616E 0x27 PUSH21 0x206265206C657373207468616E20746865206D696E PUSH10 0x6D756D30333631205772 PUSH2 0x7070 PUSH6 0x64546F6B656E KECCAK256 MSTORE PUSH6 0x776172647320 PUSH15 0x6F7420617661696C61626C65303335 ADDRESS KECCAK256 NUMBER PUSH2 0x6E27 PUSH21 0x20736574206D61747572696E672070726963652062 PUSH6 0x666F72652074 PUSH9 0x65206D617475726974 PUSH26 0x2074696D65A2646970667358221220F219269857C47C3BD976CC EXTCODECOPY CALLER MULMOD PUSH28 0x4D3BAD026611EE365EF2A7E4E6E75FECE364736F6C63430007060033 ",
      "sourceMapi;:::-;;;;;;;;;;;;;;;;1031:44;;;:::i;:::-;;;;-1:-1:-1;;;;;1031:44:17;;;;;;;;;;;;;;26822:561;;;;;;;;;;;;;;;;-1:-1:-1;26822:561:17;-1:-1:-1;;;;;26822:561:17;;:::i;2633:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1124:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14238:1670;;;:::i;:::-;;2044:98:8;;;:::i;31315:158:17:-;;;:::i;11709:901::-;;;;;;;;;;;;;;;;-1:-1:-1;11709:901:17;;:::i;28713:523::-;;;;;;;;;;;;;;;;-1:-1:-1;28713:523:17;-1:-1:-1;;;;;28713:523:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22643:1458;;;;;;;;;;;;;;;;-1:-1:-1;22643:1458:17;-1:-1:-1;;;;;22643:1458:17;;:::i;1332:398:8:-;;;;;;;;;;;;;;;;-1:-1:-1;1332:398:8;;:::i;13309:167:17:-;;;:::i;17144:439::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16494:644;;;;;;;;;;;;;;;;-1:-1:-1;16494:644:17;;;;:::i;30800:509::-;;;;;;;;;;;;;;;;-1:-1:-1;30800:509:17;;-1:-1:-1;;;;;30800:509:17;;;;;;:::i;2588:39::-;;;:::i;16027:461::-;;;;;;;;;;;;;;;;-1:-1:-1;16027:461:17;;;;;;;:::i;10464:1108::-;;;;;;;;;;;;;;;;-1:-1:-1;10464:1108:17;;;;;;;:::i;1271:37::-;;;:::i;1315:39::-;;;:::i;30334:357::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;30334:357:17;;;;;;;;;;;;;;;;;:::i;1604:37::-;;;:::i;1647:43::-;;;:::i;1700:145:1:-;;;:::i;1558:39:17:-;;;:::i;1400:36::-;;;:::i;19758:474::-;;;;;;;;;;;;;;;;-1:-1:-1;19758:474:17;-1:-1:-1;;;;;19758:474:17;;:::i;5070:2536::-;;;;;;;;;;;;;;;;-1:-1:-1;5070:2536:17;;;;;;;:::i;2685:21::-;;;:::i;1828:26::-;;;:::i;1697:60::-;;;;;;;;;;;;;;;;-1:-1:-1;1697:60:17;;-1:-1:-1;;;;;1697:60:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31479:557;;;:::i;15913:108::-;;;:::i;1068:85:1:-;;;:::i;800:174:11:-;;;:::i;2074:46:17:-;;;:::i;1081:36::-;;;:::i;2557:25::-;;;:::i;4918:146::-;;;;;;;;;;;;;;;;-1:-1:-1;4918:146:17;;;;:::i;2197:41::-;;;:::i;1736:248:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2659:20:17;;;:::i;13835:397::-;;;;;;;;;;;;;;;;-1:-1:-1;13835:397:17;;:::i;1360:33::-;;;:::i;1162:22::-;;;:::i;7612:1504::-;;;:::i;2521:29::-;;;:::i;12709:594::-;;;:::i;657:118:7:-;;;:::i;2489:26:17:-;;;:::i;1978:28::-;;;:::i;2712:21::-;;;:::i;1792:29::-;;;;;;;;;;;;;;;;-1:-1:-1;1792:29:17;;:::i;:::-;;;;-1:-1:-1;;;;;1792:29:17;;;;;;;;;;;;;;;;;;;;;;2245:46;;;:::i;896:38::-;;;:::i;2297:43::-;;;:::i;593:132:11:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2745:41:17;;;;;;;;;;;;;;;;-1:-1:-1;2745:41:17;;:::i;1994:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;1994:240:1;-1:-1:-1;;;;;1994:240:1;;:::i;2447:34:17:-;;;:::i;781:100:7:-;;;:::i;11578:125:17:-;;;:::i;1191:35::-;;;:::i;1763:23::-;;;;;;;;;;;;;;;;-1:-1:-1;1763:23:17;;:::i;1232:33::-;;;:::o;1031:44::-;;;:::o;26822:561::-;-1:-1:-1;;;;;26979:19:17;;26914:7;26979:19;;;:11;:19;;;;;;;;26937:61;;;;;;;;;;;;;;;;;26914:7;;;;26937:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27012:10;:17;27033:1;27012:22;27008:36;;;27043:1;27036:8;;;;;27008:36;27055:26;27100:9;27095:246;27119:10;:17;27115:1;:21;27095:246;;;27162:10;27173:1;27162:13;;;;;;;;;;;;;;:24;;;27157:174;;27227:89;27271:10;27282:1;27271:13;;;;;;;;;;;;;;:27;;;27227:18;:22;;:89;;;;:::i;:::-;27206:110;;27157:174;27138:3;;27095:246;;;-1:-1:-1;27358:18:17;-1:-1:-1;;26822:561:17;;;;:::o;2633:20::-;;;-1:-1:-1;;;2633:20:17;;;;;:::o;1124:32::-;;;;;;;;;;;;;;;-1:-1:-1;;1124:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14238:1670::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14356:12:::1;14345:8;14332:10;:21;:36;14313:15;:55;;14292:146;;;;-1:-1:-1::0;;;14292:146:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14624:14;:18:::0;14620:177:::1;;14683:24;:22;:24::i;:::-;14658:128;;;;-1:-1:-1::0;;;14658:128:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14811:7;:14:::0;:18;14807:155:::1;;14870:13;:20:::0;14845:106:::1;;;::::0;;-1:-1:-1;;;14845:106:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;14845:106:17;;;;;;;;;;;;;::::1;;15060:21;:25:::0;15056:403:::1;;15239:26;15268:27;:25;:27::i;:::-;15239:56;;15313:53;15327:18;15347;15313:13;:53::i;:::-;15309:140;;15413:21;15391:19;:43:::0;15309:140:::1;15056:403;;15483:13;:20:::0;15469:11:::1;::::0;15506:2:::1;-1:-1:-1::0;15483:53:17::1;;15516:13;:20:::0;15483:53:::1;;;15511:2;15483:53;15469:67;;15551:9;15546:155;15570:3;15566:1;:7;15546:155;;;15685:1;15689;15685:5;15594:11;:43;15606:13;15620:1;15606:16;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:30:::0;-1:-1:-1;;;;;15606:30:17::1;15594:43:::0;;;::::1;::::0;;;;;;;;15638:13:::1;:16:::0;;15652:1;;15638:16;::::1;;;;;;;;;;;;;;;:22;;;15594:67;;;;;;;;;::::0;;;::::1;::::0;;;:72:::1;:67;::::0;;::::1;;:72;:96:::0;15575:3:::1;;15546:155;;;-1:-1:-1::0;15831:8:17::1;:15:::0;;-1:-1:-1;;;;;;;;15831:15:17;;::::1;-1:-1:-1::0;;;15831:15:17::1;15856:16;-1:-1:-1::0;;;15856:16:17::1;::::0;;15888:13:::1;::::0;::::1;::::0;-1:-1:-1;;15888:13:17::1;32194:1;14238:1670::o:0;2044:98:8:-;2124:10;;-1:-1:-1;;;;;2124:10:8;2044:98;;:::o;31315:158:17:-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31398:8:::1;:16:::0;;-1:-1:-1;;;;31424:20:17;-1:-1:-1;;;31424:20:17::1;::::0;;31455:11:::1;:9;:11::i;:::-;31315:158::o:0;11709:901::-;11798:7;11821:23;:87;;;;;;;;11868:5;11821:87;;;;11876:5;11821:87;;;;11883:5;11821:87;;;;-1:-1:-1;;11821:87:17;;;;;11918:24;:57;;;;;;;;11954:4;11918:57;;;;11961:3;11918:57;;;;11966:3;11918:57;;;;11971:3;11918:57;;;;;11985:18;12023:9;12018:559;12042:12;12038:1;:16;12018:559;;;12075:18;12117:16;12112:21;;:53;;12145:20;12158:6;12145:5;12151:1;12145:8;;;;;;;;;;;;:12;:20::i;:::-;12112:53;;;12136:6;12112:53;12075:90;;12179:12;12203:10;12194:6;:19;:41;;12229:6;12194:41;;;12216:10;12194:41;12179:56;-1:-1:-1;12262:212:17;12393:67;12453:6;12393:55;12444:3;12393:55;12417:21;12393:19;12402:6;12409:1;12402:9;;;;;;;;;;;12393:4;;:8;:19::i;:::-;:23;;:46::i;:::-;:50;;:55::i;:67::-;12262:10;;:14;:212::i;:::-;12249:225;;12503:10;12493:6;:20;12489:31;;12515:5;;;;12489:31;12544:22;:6;12555:10;12544;:22::i;:::-;12535:31;-1:-1:-1;;;12056:3:17;;12018:559;;;-1:-1:-1;12593:10:17;11709:901;-1:-1:-1;;;;11709:901:17:o;28713:523::-;28798:7;28807;28963:19;28992:31;29033:21;29057:24;29074:6;29057:16;:24::i;:::-;29033:48;;29132:22;29147:6;29132:14;:22::i;:::-;29091:63;;-1:-1:-1;29091:63:17;-1:-1:-1;29173:30:17;:13;29091:63;29173:17;:30::i;:::-;29165:64;-1:-1:-1;29205:23:17;;-1:-1:-1;;;28713:523:17;;;;:::o;22643:1458::-;22835:9;;22728:7;;;;-1:-1:-1;;;22835:9:17;;;;22830:29;;-1:-1:-1;22854:1:17;;-1:-1:-1;22854:1:17;22846:13;;22830:29;-1:-1:-1;;;;;22912:19:17;;22870:39;22912:19;;;:11;:19;;;;;;;;22870:61;;;;;;;;;;;;;;;;;;;22912:19;;22870:61;:39;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23005:10;:17;23026:1;23005:22;23001:41;;;23037:1;23040;23029:13;;;;;;;23001:41;23151:13;;23053:39;;23107:58;;23108:37;:14;23127:17;23108:18;:37::i;23107:58::-;23053:112;;23176:14;23204:26;23250:9;23245:618;23269:10;:17;23265:1;:21;23245:618;;;23397:10;23408:1;23397:13;;;;;;;;;;;;;;:34;;;23392:461;;23452:16;23471:40;23492:10;23503:1;23492:13;;;;;;;;;;;;;;:18;;;23471:20;:40::i;:::-;23452:59;-1:-1:-1;23539:93:17;23579:27;:11;23452:59;23579:17;:27::i;23539:93::-;23530:102;-1:-1:-1;23672:158:17;23724:80;:31;23795:8;23724:70;:80::i;:::-;23672:18;;:22;:158::i;:::-;23651:179;;23392:461;;23288:3;;23245:618;;;-1:-1:-1;23877:19:17;;:23;23873:176;;23938:19;;23925:33;;:6;;:12;:33::i;:::-;23916:42;;23993:45;24018:19;;23993:18;:24;;:45;;;;:::i;:::-;23972:66;;23873:176;24067:6;;-1:-1:-1;24075:18:17;-1:-1:-1;;;22643:1458:17;;;:::o;1332:398:8:-;1507:10;;1434:7;;;;-1:-1:-1;;;;;1507:10:8;:24;1532:7;1541:29;:27;:29::i;:::-;1507:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:64:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1507:64:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:114;;1702:18;1721:1;1702:21;;;;;;;;;;;;;;1695:28;;;1332:398;;;:::o;13309:167:17:-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13458:11:::1;:9;:11::i;17144:439::-:0;17213:16;17231;17264:22;17303:7;:14;;;;17289:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17289:29:17;-1:-1:-1;17369:7:17;:14;17264:54;;-1:-1:-1;17328:24:17;;17355:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17355:29:17;;17328:56;;17400:9;17395:148;17419:7;:14;17415:18;;17395:148;;;17465:7;17473:1;17465:10;;;;;;;;;;;;;;;;;;;;;:24;17454:8;;-1:-1:-1;;;;;17465:24:17;;;;17454:8;;17460:1;;17454:8;;;;;;-1:-1:-1;;;;;17454:35:17;;;:8;;;;;;;;;;;:35;17516:7;:10;;17524:1;;17516:10;;;;;;;;;;;;;;;;:16;;;17503:7;17511:1;17503:10;;;;;;;;;;;;;;;;;:29;17435:3;;17395:148;;;-1:-1:-1;17561:5:17;;-1:-1:-1;17568:7:17;-1:-1:-1;17144:439:17;;:::o;16494:644::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16645:13:::1;:20:::0;:25;16642:75:::1;;16686:20;16693:13;;16686:20;:::i;:::-;16732:9;16727:377;16751:16;16747:1;:20;16727:377;;;16914:1;16890:9:::0;16900:1;16890:12:::1;::::0;::::1;;;;;;;;;-1:-1:-1::0;;;;;16890:12:17::1;:26;16886:37;;;16918:5;;16886:37;16938:13;16970:109;;;;;;;;17010:9;17020:1;17010:12;;;;;;;;::::0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;;;;17010:12:17::1;16970:109:::0;;::::1;17047:10:::0;17058:1;17047:13:::1;::::0;::::1;;;;;;::::0;;::::1;::::0;;;::::1;;16970:109:::0;;;16938:155;;::::1;::::0;;::::1;::::0;;-1:-1:-1;16938:155:17;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;16938:155:17::1;-1:-1:-1::0;;;;;16938:155:17;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;16769:3:::1;16727:377;;;-1:-1:-1::0;17119:12:17::1;::::0;::::1;::::0;;;::::1;16494:644:::0;;:::o;30800:509::-;-1:-1:-1;;;;;30938:19:17;;30880:4;30938:19;;;:11;:19;;;;;;;;30896:61;;;;;;;;;;;;;;;;;30880:4;;;;30896:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31009:1;30989:10;:17;:21;30968:111;;;;-1:-1:-1;;;30968:111:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31124:10;:17;31111:10;:30;31090:100;;;;;-1:-1:-1;;;31090:100:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;31210:10;31221;31210:22;;;;;;;;;;;;;;:33;;;31206:75;;;31266:4;31259:11;;;;;31206:75;31297:5;31290:12;;;30800:509;;;;;:::o;2588:39::-;;;:::o;16027:461::-;16131:7;16171:13;;16158:10;:26;16154:328;;;16230:13;;16204:22;:10;16219:6;16204:14;:22::i;:::-;:39;16200:120;;-1:-1:-1;16252:1:17;16245:8;;16200:120;16306:13;;16279:41;;:22;:10;16294:6;16279:14;:22::i;:::-;:26;;:41::i;:::-;16272:48;;;;16154:328;16381:13;;16355:22;:10;16370:6;16355:14;:22::i;:::-;:39;16351:120;;-1:-1:-1;16403:1:17;16396:8;;16351:120;16430:41;16448:22;:10;16463:6;16448:14;:22::i;:::-;16430:13;;;:17;:41::i;10464:1108::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10714:1:::1;10697:14;:18;10676:101;;;;-1:-1:-1::0;;;10676:101:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10829:1;10817:9;:13;10796:86;;;::::0;;-1:-1:-1;;;10796:86:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;10926:15;10914:8;:27;;10893:95;;;::::0;;-1:-1:-1;;;10893:95:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10893:95:17;;;;;;;;;;;;;::::1;;11046:25;11074:15;:13;:15::i;:::-;11046:43;;11099;11113:17;11132:9;11099:13;:43::i;:::-;11216:26;11245:41;11276:9;11245:30;:41::i;:::-;11216:70:::0;-1:-1:-1;11297:38:17::1;11350:53;11373:29;11216:70:::0;11398:3:::1;11373:24;:29::i;:::-;11350:18:::0;;:22:::1;:53::i;:::-;11297:106;;11414:151;11461:4;11480:9;11503:30;11547:8;11414:25;:151::i;:::-;32194:1;;;10464:1108:::0;;:::o;1271:37::-;;;:::o;1315:39::-;;;:::o;30334:357::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30517:10:::1;-1:-1:-1::0;;;;;30494:34:17;;::::1;::::0;;::::1;;;30473:115;;;;-1:-1:-1::0;;;30473:115:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30647:37;::::0;;-1:-1:-1;;;30647:37:17;;-1:-1:-1;;;;;30647:37:17;;::::1;;::::0;::::1;::::0;;;;;;;;;30625:11;;30647:19;::::1;::::0;-1:-1:-1;;30647:37:17;;;;;::::1;::::0;;;;;;;;-1:-1:-1;30647:19:17;:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;;30334:357:17:o;1604:37::-;;;:::o;1647:43::-;;;:::o;1700:145:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:1;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:1::1;::::0;;1700:145::o;1558:39:17:-;;;:::o;1400:36::-;;;:::o;19758:474::-;-1:-1:-1;;;;;19914:19:17;;19848:7;19914:19;;;:11;:19;;;;;;;;19872:61;;;;;;;;;;;;;;;;;19848:7;;;;19872:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19947:10;:17;19968:1;19947:22;19943:36;;;19978:1;19971:8;;;;;19943:36;19990:14;20023:9;20018:184;20042:10;:17;20038:1;:21;20018:184;;;20080:22;20105:36;20131:6;20139:1;20105:25;:36::i;:::-;20080:61;-1:-1:-1;20165:26:17;:6;20080:61;20165:10;:26::i;:::-;20156:35;-1:-1:-1;;20061:3:17;;20018:184;;5070:2536;5168:8;;-1:-1:-1;;;5168:8:17;;;;:40;;;;;5198:10;5180:15;:28;5168:40;5147:110;;;;;-1:-1:-1;;;5147:110:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;5289:8;;-1:-1:-1;;;5289:8:17;;;;5288:9;5267:76;;;;;-1:-1:-1;;;5267:76:17;;;;;;;;;;;;-1:-1:-1;;;5267:76:17;;;;;;;;;;;;;;;5385:18;5374:7;:29;;5353:119;;;;-1:-1:-1;;;5353:119:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5491:18;5512:47;5555:3;5512:38;:14;2119:1;5512:18;:38::i;:47::-;5491:68;;5569:15;5587:10;-1:-1:-1;;;;;5587:18:17;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5587:20:17;;-1:-1:-1;5617:11:17;5643:10;-1:-1:-1;;;;;5643:20:17;;5664:12;:10;:12::i;:::-;5643:34;;;;;;;;;;;;;-1:-1:-1;;;;;5643:34:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5643:34:17;:63;;5684:22;:7;5698;5684:13;:22::i;:::-;5643:63;;;5680:1;5643:63;5617:89;-1:-1:-1;5783:30:17;:14;5802:10;5783:18;:30::i;:::-;5746:33;5775:3;5746:24;5762:7;5746:11;;:15;;:24;;;;:::i;:33::-;:67;;5725:153;;;;-1:-1:-1;;;5725:153:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5898:22;6067:32;6082:7;6091;6067:14;:32::i;:::-;6039:60;-1:-1:-1;6039:60:17;-1:-1:-1;6110:10:17;-1:-1:-1;;;;;6110:23:17;;6147:12;:10;:12::i;:::-;6110:126;;;-1:-1:-1;6110:126:17;;;-1:-1:-1;;;;;;6110:126:17;;;-1:-1:-1;;;;;6110:126:17;;;;;;;;6181:4;6110:126;;;;6201:24;;;6110:126;;;;;;;;;;;;;;;;;;;-1:-1:-1;6110:126:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6330:16:17;;-1:-1:-1;6330:7:17;6342:3;6330:11;:16::i;:::-;6320:26;-1:-1:-1;6361:18:17;;6357:100;;6413:27;;;-1:-1:-1;;;6413:27:17;;;;-1:-1:-1;;;;;6393:10:17;:19;;;;;;6413:25;;:27;;;;;;;;;;;;;;6393:19;6413:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6413:27:17;6393:64;;;-1:-1:-1;6393:64:17;;;-1:-1:-1;;;;;;6393:64:17;;;-1:-1:-1;;;;;6393:64:17;;;;;;;;;;;;;;;;;;;6413:27;;6393:64;;;;;;;-1:-1:-1;6393:64:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6357:100:17;6482:11;;:24;;6498:7;6482:15;:24::i;:::-;6468:11;:38;;;;6581:7;6607:124;;;;;;;;6647:12;:10;:12::i;:::-;-1:-1:-1;;;;;6607:124:17;;;;;6684:11;:25;6696:12;:10;:12::i;:::-;-1:-1:-1;;;;;6684:25:17;;;;;;;;;;;;;;;;;-1:-1:-1;6684:25:17;;;:32;6607:124;;;6581:160;;-1:-1:-1;6581:160:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6581:160:17;;;;;;;;;;;;;;;;6752:11;;6764:12;:10;:12::i;:::-;-1:-1:-1;;;;;6752:25:17;;;;;;;;;;;;;;;-1:-1:-1;6752:25:17;;;6796:572;;;;;;;;;;6886:15;6796:572;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6796:572:17;;;;;;;;;;;;;;;;;;;;;;;;6752:626;;-1:-1:-1;6752:626:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6752:626:17;;;;;;;;;;;-1:-1:-1;;6752:626:17;;;;;;;;;;7393:11;;7408:14;-1:-1:-1;7389:149:17;;7516:11;:9;:11::i;:::-;7559:12;:10;:12::i;:::-;7553:46;;;;;;;;;;;;;;-1:-1:-1;;;;;7553:46:17;;;;;;;;;;;;;;;;5070:2536;;;;;;:::o;2685:21::-;;;-1:-1:-1;;;2685:21:17;;;;;:::o;1828:26::-;;;;:::o;1697:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1697:60:17;;-1:-1:-1;1697:60:17;;;;;;;;;;;;;;;;;:::o;31479:557::-;31547:13;;-1:-1:-1;;;31547:13:17;;;;31526:81;;;;;-1:-1:-1;;;31526:81:17;;;;;;;;;;;;-1:-1:-1;;;31526:81:17;;;;;;;;;;;;;;;31672:21;31696:35;31718:12;:10;:12::i;:::-;31696:21;:35::i;:::-;31672:59;-1:-1:-1;31745:17:17;;31741:289;;-1:-1:-1;;;;;31778:10:17;:19;;31798:12;:10;:12::i;:::-;31812:13;31778:48;;;;;;;;;;;;;-1:-1:-1;;;;;31778:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31927:36:17;;-1:-1:-1;31950:12:17;:10;:12::i;:::-;31927:22;:36::i;:::-;31991:12;:10;:12::i;:::-;31983:36;;;;;;;;-1:-1:-1;;;;;31983:36:17;;;;;;;;;;;;;;31741:289;31479:557;:::o;15913:108::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15970:9:::1;:16:::0;;-1:-1:-1;;;;15970:16:17::1;-1:-1:-1::0;;;15970:16:17::1;::::0;;16001:13:::1;::::0;::::1;::::0;-1:-1:-1;;16001:13:17::1;15913:108::o:0;1068:85:1:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:1;;1068:85::o;800:174:11:-;891:9;;:27;;;-1:-1:-1;;;891:27:11;;;;847:7;;;;-1:-1:-1;;;;;891:9:11;;;;:25;;:27;;;;;-1:-1:-1;;891:27:11;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;891:27:11;;;;-1:-1:-1;945:1:11;936:10;;;:31;;966:1;936:31;;;957:5;936:31;929:38;;;800:174;:::o;2074:46:17:-;2119:1;2074:46;:::o;1081:36::-;;;:::o;2557:25::-;;;-1:-1:-1;;;2557:25:17;;;;;:::o;4918:146::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5029:8:::1;:28:::0;;;::::1;;-1:-1:-1::0;;;5029:28:17::1;-1:-1:-1::0;;;;5029:28:17;;::::1;::::0;;;::::1;::::0;;4918:146::o;2197:41::-;2237:1;2197:41;:::o;1736:248:8:-;1848:16;;;1862:1;1848:16;;;1796;1848;;;;;1796;1824:21;;1848:16;1862:1;1848:16;;;;;;;;-1:-1:-1;;1884:21:8;;1874:7;;;;-1:-1:-1;;;;;;1884:21:8;;1874:7;;-1:-1:-1;1884:21:8;;1874:7;;;;-1:-1:-1;;;;;1874:31:8;;;:7;;;;;;;;;:31;1925:30;;1915:7;;1925:30;;;1915:7;;-1:-1:-1;;1915:7:8;;;;;;-1:-1:-1;;;;;1915:40:8;;;;:7;;;;;;;;;;;:40;1973:4;1736:248;-1:-1:-1;1736:248:8:o;2659:20:17:-;;;-1:-1:-1;;;2659:20:17;;;;;:::o;13835:397::-;32114:11;;-1:-1:-1;;;;;32114:11:17;32098:12;:10;:12::i;:::-;-1:-1:-1;;;;;32098:27:17;;32077:107;;;;-1:-1:-1;;;32077:107:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13979:12:::1;13968:8;13955:10;:21;:36;13936:15;:55;;13915:156;;;;-1:-1:-1::0;;;13915:156:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14086:14;::::0;-1:-1:-1;;;;;14086:14:17::1;14082:144;;14130:13;:22:::0;;;14082:144:::1;;;14199:16;:14;:16::i;:::-;14183:13;:32:::0;13835:397;:::o;1360:33::-;;;:::o;1162:22::-;;;;;;;;;;;;;;;-1:-1:-1;;1162:22:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7612:1504;7655:14;7671:26;7701:28;7716:12;:10;:12::i;:::-;7701:14;:28::i;:::-;7654:75;;-1:-1:-1;7654:75:17;-1:-1:-1;7744:10:17;;7740:269;;7774:44;;;-1:-1:-1;;;7774:44:17;;-1:-1:-1;;;;;7803:13:17;7774:44;;;;;;;;7822:6;;7774:10;:20;;;;:44;;;;;;;;;;;;;;:20;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7774:44:17;:54;7770:229;;-1:-1:-1;;;;;7938:13:17;:24;;7963:12;:10;:12::i;:::-;7977:6;7938:46;;;;;;;;;;;;;-1:-1:-1;;;;;7938:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7770:229;8109:36;8132:12;:10;:12::i;:::-;8109:22;:36::i;:::-;8253:9;;-1:-1:-1;;;8253:9:17;;;;8249:795;;;8283:14;:18;8279:301;;8325:22;;8321:100;;-1:-1:-1;;;;;8357:12:17;:21;;8379:12;:10;:12::i;:::-;8393:18;8357:55;;;;;;;;;;;;;-1:-1:-1;;;;;8357:55:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8357:55:17;8349:72;;;;;-1:-1:-1;;;8349:72:17;;;;;;;;;;;;;;;-1:-1:-1;;;8349:72:17;;;;;;;;;;;;;;;8531:34;8552:12;:10;:12::i;:::-;8531:20;:34::i;:::-;8652:21;8676:35;8698:12;:10;:12::i;8676:35::-;8652:59;-1:-1:-1;8729:17:17;;8725:309;;-1:-1:-1;;;;;8766:10:17;:19;;8786:12;:10;:12::i;:::-;8800:13;8766:48;;;;;;;;;;;;;-1:-1:-1;;;;;8766:48:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8923:36:17;;-1:-1:-1;8946:12:17;:10;:12::i;8923:36::-;8991:12;:10;:12::i;:::-;8983:36;;;;;;;;-1:-1:-1;;;;;8983:36:17;;;;;;;;;;;;;;8725:309;8249:795;;9068:12;:10;:12::i;:::-;9059:50;;;;;;;;;;;;;;-1:-1:-1;;;;;9059:50:17;;;;;;;;;;;;;;;;7612:1504;;:::o;2521:29::-;;;-1:-1:-1;;;;;2521:29:17;;:::o;12709:594::-;12767:7;12790:11;;12805:1;12790:16;12786:30;;;-1:-1:-1;12815:1:17;12808:8;;12786:30;12826:26;12872:9;12867:327;12891:7;:14;12887:18;;12867:327;;;12926:37;12982:11;:37;12994:7;13002:1;12994:10;;;;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;12994:24:17;12982:37;;;;;;;;;;;;13020:7;:10;;13028:1;;13020:10;;;;;;;;;;;;;;;;:16;;;12982:55;;;;;;;;;;;;;;;;;12926:111;;;;;;;;12982:55;;;;;;;12926:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13073:110:17;;13113:56;;12926:111;13113:30;:56::i;13073:110::-;13052:131;-1:-1:-1;;12907:3:17;;12867:327;;;-1:-1:-1;13248:11:17;;13225:35;;:18;;:22;:35::i;657:118:7:-;731:12;;:37;;;-1:-1:-1;;;731:37:7;;762:4;731:37;;;;;;-1:-1:-1;;;;;;;731:12:7;;-1:-1:-1;;731:37:7;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:37:7;;-1:-1:-1;657:118:7;:::o;2489:26:17:-;;;-1:-1:-1;;;;;2489:26:17;;:::o;1978:28::-;;;;:::o;2712:21::-;;;-1:-1:-1;;;2712:21:17;;;;;:::o;1792:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1792:29:17;;;;-1:-1:-1;1792:29:17;:::o;2245:46::-;;;:::o;896:38::-;;;:::o;2297:43::-;;;:::o;593:132:11:-;673:9;;:20;;;-1:-1:-1;;;673:20:11;;;;639:5;;;;-1:-1:-1;;;;;673:9:11;;;;:18;;:20;;;;;;;;;;;;;;;:9;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;673:20:11;;-1:-1:-1;;593:132:11;:::o;2745:41:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2745:41:17;:::o;1994:240:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2082:22:1;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:1;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:1::1;-1:-1:-1::0;;;;;2210:17:1;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2447:34:17:-;;;;:::o;781:100:7:-;861:12;;-1:-1:-1;;;;;861:12:7;;781:100::o;11578:125:17:-;11659:37;;;-1:-1:-1;;;11659:37:17;;11690:4;11659:37;;;;;;11633:7;;-1:-1:-1;;;;;11659:12:17;:22;;;;:37;;;;;;;;;;;;;;;:22;:37;;;;;;;;;;1191:35;;;:::o;1763:23::-;;;;;;;;;;;;2682:175:2;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:1;2682:175;-1:-1:-1;;;2682:175:2:o;598:104:5:-;685:10;598:104;:::o;13482:90:17:-;13522:8;:15;;-1:-1:-1;;;;13522:15:17;-1:-1:-1;;;13522:15:17;;;13553:12;;;;-1:-1:-1;;13553:12:17;13482:90::o;3530:215:2:-;3588:7;3611:6;3607:20;;-1:-1:-1;3626:1:2;3619:8;;3607:20;3649:5;;;3653:1;3649;:5;:1;3672:5;;;;;:10;3664:56;;;;-1:-1:-1;;;3664:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:150;4267:7;4298:1;4294;:5;4286:44;;;;;-1:-1:-1;;;4286:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;;4209:150;-1:-1:-1;;;4209:150:2:o;3128:155::-;3186:7;3218:1;3213;:6;;3205:49;;;;;-1:-1:-1;;;3205:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3271:5:2;;;3128:155::o;24107:327:17:-;24199:7;;24222:187;24246:16;:23;24242:27;;24222:187;;;24303:16;24320:1;24303:19;;;;;;;;;;;;;;;;;;:24;;;24294:5;:33;24290:109;;24354:16;24371:1;24354:19;;;;;;;;;;;;;;;;;;:30;;;24347:37;;;;;24290:109;24271:3;;24222:187;;;-1:-1:-1;24426:1:17;;24107:327;-1:-1:-1;;24107:327:17:o;227:125:6:-;290:7;316:29;215:5;316:11;:3;324:2;316:7;:11::i;540:184::-;603:7;626:8;622:22;;-1:-1:-1;643:1:6;636:8;;622:22;658:7;654:23;;-1:-1:-1;674:3:6;667:10;;654:23;694;702:14;708:3;713:2;702:5;:14::i;496:155:7:-;568:12;;:34;;;-1:-1:-1;;;568:34:7;;-1:-1:-1;;;;;568:34:7;;;;;;;;;;;;;;;:12;;;;;-1:-1:-1;;568:34:7;;;;;;;;;;;;;;-1:-1:-1;568:12:7;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:27:7;;;;;;;;-1:-1:-1;;;;;617:27:7;;;;;;;;;568:34;617:27;;;496:155;;:::o;821:460:8:-;-1:-1:-1;;;;;1002:17:8;;994:26;;;;;;1089:10;;-1:-1:-1;;;;;1089:10:8;:35;1138:10;1162:19;1195:29;:27;:29::i;:::-;1238:3;1255:9;1089:185;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1089:185:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1089:185:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1089:185:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:460;;;;:::o;17589:885:17:-;-1:-1:-1;;;;;17769:19:17;;17707:7;17769:19;;;:11;:19;;;;;:31;;17707:7;;17769:19;17789:10;;17769:31;;;;;;;;;;;;;;17730:70;;;;;;;;17769:31;;;;;;;17730:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17833:10:17;17846:8;17833:21;17857:12;17833:36;;17909:15;:30;-1:-1:-1;17909:63:17;;17957:15;17909:63;;;17942:12;17909:63;17880:92;;17983:19;18005:44;18028:9;:20;;;18005:22;:44::i;:::-;17983:66;-1:-1:-1;18183:22:17;18208:154;18240:25;:8;17983:66;18240:12;:25::i;:::-;18290:20;;;;18279:32;;:6;;:10;:32::i;:::-;18325:23;;18208:18;:154::i;:::-;18183:179;;18390:45;18409:9;:25;;;18390:14;:18;;:45;;;;:::i;:::-;18373:62;17589:885;-1:-1:-1;;;;;;;;17589:885:17:o;29875:453::-;29984:7;29993;30016:23;30069:12;30054;:27;:64;;30117:1;30054:64;;;30084:30;:12;30101;30084:16;:30::i;:::-;30016:102;-1:-1:-1;30132:20:17;30128:69;;30176:1;30179:6;30168:18;;;;;;;30128:69;30227:29;:6;30240:15;30227:12;:29::i;:::-;30270:41;30281:29;:6;30294:15;30281:12;:29::i;:::-;30270:6;;:10;:41::i;:::-;30206:115;;;;;29875:453;;;;;;:::o;28078:294::-;-1:-1:-1;;;;;28188:19:17;;28145:40;28188:19;;;:11;:19;;;;;28221:17;;28217:35;;28245:7;;;28217:35;28267:9;28262:104;28286:17;;28282:21;;28262:104;;;28351:4;28324:10;28335:1;28324:13;;;;;;;;;;;;;;;;:24;:13;;;;;:24;:31;;;;;;;-1:-1:-1;;28324:31:17;;;;;;;;;:24;28305:3;28262:104;;;;28078:294;;:::o;20780:514::-;-1:-1:-1;;;;;20890:19:17;;20847:40;20890:19;;;:11;:19;;;;;20923:17;;20919:35;;20947:7;;;20919:35;20969:9;20964:324;20988:17;;20984:21;;20964:324;;;21026:22;21051:36;21077:6;21085:1;21051:25;:36::i;:::-;21026:61;;21137:15;21102:10;21113:1;21102:13;;;;;;;;;;;;;;;;;;:32;;:50;;;;21198:79;21249:14;21198:10;21209:1;21198:13;;;;;;;;;;;;;;;;;;:29;;;:33;;:79;;;;:::i;:::-;21166:10;21177:1;21166:13;;;;;;;;;;;;;;;;:29;:13;;;;;:29;:111;-1:-1:-1;21007:3:17;;20964:324;;26099:302;-1:-1:-1;;;;;26207:19:17;;26164:40;26207:19;;;:11;:19;;;;;26240:17;;26236:35;;26264:7;;;26236:35;26286:9;26281:114;26305:17;;26301:21;;26281:114;;;26380:4;26343:10;26354:1;26343:13;;;;;;;;;;;;;;;;;;;;;:34;;:41;;-1:-1:-1;;26343:41:17;;;;;;;;;;-1:-1:-1;26324:3:17;26281:114;;21878:759;21977:7;22085:17;22080:57;;-1:-1:-1;22125:1:17;22118:8;;22080:57;22147:16;22166:24;:10;22181:8;22166:14;:24::i;:::-;22147:43;-1:-1:-1;22200:18:17;22221:24;22147:43;22234:10;22221:12;:24::i;:::-;22200:45;;22273:8;22260:10;:21;22256:375;;;22304:1;22297:8;;;;;;22256:375;22339:8;22326:10;:21;22322:309;;;22370:3;22363:10;;;;;;22322:309;22407:8;22394:10;:21;22390:241;;;22438:3;22431:10;;;;;;22390:241;22475:9;22462:10;:22;22458:173;;;22507:3;22500:10;;;;;;22458:173;22544:9;22531:10;:22;22527:104;;;22576:3;22569:10;;;;;;22527:104;22617:3;22610:10;;;;;;18480:1272;18632:7;18680:8;18632:7;18715:42;18716:16;18751:5;18715:35;:42::i;:::-;18699:58;-1:-1:-1;18768:14:17;18785:102;18882:4;18785:79;18850:13;18785:79;:12;18815:15;18785:29;:46::i;:102::-;18768:119;-1:-1:-1;18906:13:17;18922:73;18990:4;18922:50;:15;18970:1;18955:16;;18922:32;:50::i;:73::-;18906:89;-1:-1:-1;19006:13:17;19022:74;19094:1;19022:54;19074:1;19023:15;;;;19057:18;;19022:34;:54::i;:74::-;19006:90;;19107:13;19123:101;19222:1;19123:81;19190:13;19123:49;19170:1;19153:15;:18;19123:12;:29;;:49;;;;:::i;:101::-;19107:117;-1:-1:-1;19235:13:17;19251:75;19324:1;19251:55;19304:1;19252:18;;;;19289:16;;19251:37;:55::i;:75::-;19235:91;-1:-1:-1;19338:22:17;19363:39;19235:91;19363:28;19385:5;19363:28;:5;19373:6;19363:9;:17::i;:::-;:21;;:28::i;:39::-;19338:64;-1:-1:-1;19430:36:17;19460:5;19430:25;19338:64;19449:5;19430:18;:25::i;:36::-;19413:53;-1:-1:-1;19494:79:17;19560:12;19494:48;19413:53;19526:15;19494:31;:48::i;:79::-;19477:96;-1:-1:-1;19601:111:17;19705:6;19601:86;19685:1;19670:16;;19601:86;19477:96;19633:18;19601:31;:51::i;:111::-;19584:128;18480:1272;-1:-1:-1;;;;;;;;;;;;18480:1272:17:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "3445000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "claimReward()": "infinite",
        "collaborativeRange()": "infinite",
        "collaborativeReward()": "1064",
        "declareEmergency()": "infinite",
        "deletePool()": "infinite",
        "emergentWithdraw()": "infinite",
        "endPool()": "infinite",
        "getAveragePricePrediction()": "infinite",
        "getDecimals()": "infinite",
        "getDifference(uint256,uint256)": "infinite",
        "getEstimatedWrappedTokenForUSD(uint256)": "infinite",
        "getLatestPrice()": "infinite",
        "getPathForUSDToWrappedToken()": "infinite",
        "getPredictionRange(uint256)": "infinite",
        "getPrizeReward(address)": "infinite",
        "getStakers()": "infinite",
        "getStakingReward(address)": "infinite",
        "getTotalReward(address)": "infinite",
        "getTotalStakedBalance(address)": "infinite",
        "getUSDBalance()": "infinite",
        "getUSDToken()": "1125",
        "getWrappedTokenBalance()": "infinite",
        "getswapRouter()": "1151",
        "hasUnStaked(address,uint256)": "infinite",
        "isActive()": "1163",
        "isAnEmergency()": "1139",
        "isDeleted()": "1094",
        "isEnhancedEnabled()": "infinite",
        "isLocked()": "1139",
        "isMatured()": "1116",
        "launchDate()": "infinite",
        "lockPool()": "infinite",
        "lockTime()": "infinite",
        "maturingPrice()": "1132",
        "maturityTime()": "infinite",
        "minimumStakeAmount()": "infinite",
        "oracleContract()": "1170",
        "oracleDecimal()": "266",
        "owner()": "1150",
        "poolCreator()": "1149",
        "poolType()": "infinite",
        "potentialCollabReward()": "infinite",
        "predictions(address,uint256)": "8072",
        "prizeAmount()": "infinite",
        "prizeRewardRates(uint256)": "2898",
        "purchaseWrappedToken(uint256,uint256)": "infinite",
        "renounceOwnership()": "24323",
        "rewardManager()": "infinite",
        "setActivationStatus(bool)": "infinite",
        "setSortedStakers(address[25],uint256[25])": "infinite",
        "sizeAllocation()": "infinite",
        "sizeLimitRangeRate()": "266",
        "sortedStakers(uint256)": "2921",
        "stake(uint256,uint256)": "infinite",
        "stakeApr()": "infinite",
        "stakeTaxRate()": "infinite",
        "stakers(uint256)": "2986",
        "totalStaked()": "1109",
        "totemToken()": "infinite",
        "transferOwnership(address)": "infinite",
        "updateMaturingPrice(uint256)": "infinite",
        "usdPrizeAmount()": "infinite",
        "withdrawStuckTokens(address,uint256,address)": "infinite",
        "wrappedToken()": "infinite",
        "wrappedTokenSymbol()": "infinite"
      },
      "internal": {
        "_calcStakingReturn(uint256,uint256,uint256)": "infinite",
        "_getEnhancedRewardRate(uint256)": "infinite",
        "_getPercentageReward(uint256)": "infinite",
        "_getStakingRewardPerStake(address,uint256)": "infinite",
        "_getStakingTax(uint256,uint256)": "infinite",
        "_lockPool()": "21622",
        "_withdrawPrizeReward(address)": "infinite",
        "_withdrawStakedBalance(address)": "infinite",
        "_withdrawStakingReward(address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "claimReward()": "b88a802f",
      "collaborativeRange()": "eb850ae1",
      "collaborativeReward()": "f3d9dc0d",
      "declareEmergency()": "31e244e5",
      "deletePool()": "8bfbbcbe",
      "emergentWithdraw()": "8a9920b7",
      "endPool()": "2d42cf7d",
      "getAveragePricePrediction()": "bf852196",
      "getDecimals()": "f0141d84",
      "getDifference(uint256,uint256)": "4c7c77fc",
      "getEstimatedWrappedTokenForUSD(uint256)": "3fcdd82c",
      "getLatestPrice()": "8e15f473",
      "getPathForUSDToWrappedToken()": "a35ef3a7",
      "getPredictionRange(uint256)": "3299ac5f",
      "getPrizeReward(address)": "3ac58b9a",
      "getStakers()": "43352d61",
      "getStakingReward(address)": "78f4d413",
      "getTotalReward(address)": "34381749",
      "getTotalStakedBalance(address)": "183521cc",
      "getUSDBalance()": "c1201054",
      "getUSDToken()": "f5e96fc9",
      "getWrappedTokenBalance()": "f8e829c3",
      "getswapRouter()": "2e577d07",
      "hasUnStaked(address,uint256)": "45e91319",
      "isActive()": "22f3e2d4",
      "isAnEmergency()": "a08b2c79",
      "isDeleted()": "d7efb6b7",
      "isEnhancedEnabled()": "4bc4eeb2",
      "isLocked()": "a4e2d634",
      "isMatured()": "7f2b6a0d",
      "launchDate()": "f8eeed62",
      "lockPool()": "4026478e",
      "lockTime()": "0d668087",
      "maturingPrice()": "d025188b",
      "maturityTime()": "4e8bfdaa",
      "minimumStakeAmount()": "6b036f45",
      "oracleContract()": "bece7532",
      "oracleDecimal()": "a150194b",
      "owner()": "8da5cb5b",
      "poolCreator()": "c6c1decd",
      "poolType()": "b1dd61b6",
      "potentialCollabReward()": "e425df8c",
      "predictions(address,uint256)": "850fa7cb",
      "prizeAmount()": "785fa627",
      "prizeRewardRates(uint256)": "f1b17a8b",
      "purchaseWrappedToken(uint256,uint256)": "4ddc1bdc",
      "renounceOwnership()": "715018a6",
      "rewardManager()": "0f4ef8a6",
      "setActivationStatus(bool)": "a118c9a7",
      "setSortedStakers(address[25],uint256[25])": "444a4902",
      "sizeAllocation()": "51eacbf0",
      "sizeLimitRangeRate()": "95c2ba47",
      "sortedStakers(uint256)": "de09ee20",
      "stake(uint256,uint256)": "7b0472f0",
      "stakeApr()": "aa7bcb57",
      "stakeTaxRate()": "6847d0c5",
      "stakers(uint256)": "fd5e6dd1",
      "totalStaked()": "817b1cd2",
      "totemToken()": "e8153c93",
      "transferOwnership(address)": "f2fde38b",
      "updateMaturingPrice(uint256)": "a7a48681",
      "usdPrizeAmount()": "73f31703",
      "withdrawStuckTokens(address,uint256,address)": "5d2631e2",
      "wrappedToken()": "996c6cc3",
      "wrappedTokenSymbol()": "238a6c74"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_wrappedTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_poolType\",\"type\":\"string\"},{\"internalType\":\"contract TotemToken\",\"name\":\"_totemToken\",\"type\":\"address\"},{\"internalType\":\"contract RewardManager\",\"name\":\"_rewardManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolCreator\",\"type\":\"address\"},{\"internalType\":\"address[4]\",\"name\":\"_addrs\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[11]\",\"name\":\"_variables\",\"type\":\"uint256[11]\"},{\"internalType\":\"uint256[8]\",\"name\":\"_ranks\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[8]\",\"name\":\"_percentages\",\"type\":\"uint256[8]\"},{\"internalType\":\"bool\",\"name\":\"_isEnhancedEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ApproveTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributedBTC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolMatured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PoolSorted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wrappedTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaborativeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"declareEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deletePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAveragePricePrediction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prediction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_range\",\"type\":\"uint256\"}],\"name\":\"getDifference\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getEstimatedWrappedTokenForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPathForUSDToWrappedToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPredictionRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getPrizeReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getTotalStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"hasUnStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAnEmergency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnhancedEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMatured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potentialCollabReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithdrawalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePrediction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"difference\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prizeRewardWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"didUnstake\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prizeRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"purchaseWrappedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract RewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_activationStatus\",\"type\":\"bool\"}],\"name\":\"setActivationStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[25]\",\"name\":\"addrArray\",\"type\":\"address[25]\"},{\"internalType\":\"uint256[25]\",\"name\":\"indexArray\",\"type\":\"uint256[25]\"}],\"name\":\"setSortedStakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeLimitRangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sortedStakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePrediction\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeApr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totemToken\",\"outputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateMaturingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stuckToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedTokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getEstimatedWrappedTokenForUSD(uint256)\":{\"params\":{\"_amount\":\"Amount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDecimals()\":{\"notice\":\"Returns decimals for oracle contract\"},\"getLatestPrice()\":{\"notice\":\"Returns the latest price from oracle contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0x8344571960f250b1c03ba9f259c452b26b04370ac4723ef262969d822174bee6\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/USDRetriever.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract USDRetriever {\\n    IERC20 internal USDCContract;\\n\\n    event ReceivedTokens(address indexed from, uint256 amount);\\n    event TransferTokens(address indexed to, uint256 amount);\\n    event ApproveTokens(address indexed to, uint256 amount);\\n\\n    function setUSDToken(address _usdContractAddress) internal {\\n        USDCContract = IERC20(_usdContractAddress);\\n    }\\n\\n    function approveTokens(address _to, uint256 _amount) internal {\\n        USDCContract.approve(_to, _amount);\\n        emit ApproveTokens(_to, _amount);\\n    }\\n\\n    function getUSDBalance() external view returns (uint256) {\\n        return USDCContract.balanceOf(address(this));\\n    }\\n\\n    function getUSDToken() external view returns (address) {\\n        return address(USDCContract);\\n    }\\n}\\n\",\"keccak256\":\"0x5f65c50276ea5c113b1e51e0d646d7e91c9aa15d12214543ddd320769de308f2\",\"license\":\"UNLICENSED\"},\"contracts/Distribution/WrappedTokenDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../PancakeSwap/IPancakeRouter.sol\\\";\\n\\ncontract WrappedTokenDistributor {\\n    IPancakeRouter02 internal swapRouter;\\n    address internal BUSD_CONTRACT_ADDRESS;\\n    address internal WRAPPED_Token_CONTRACT_ADDRESS;\\n\\n    event DistributedBTC(address indexed to, uint256 amount);\\n\\n    constructor(\\n        address swapRouterAddress,\\n        address BUSDContractAddress,\\n        address WrappedTokenContractAddress\\n    ) {\\n        swapRouter = IPancakeRouter02(swapRouterAddress);\\n        BUSD_CONTRACT_ADDRESS = BUSDContractAddress;\\n        WRAPPED_Token_CONTRACT_ADDRESS = WrappedTokenContractAddress;\\n    }\\n\\n    /**\\n     * @param _to Reciever address\\n     * @param _usdAmount USD Amount\\n     * @param _wrappedTokenAmount Wrapped Token Amount\\n     */\\n    function transferTokensThroughSwap(\\n        address _to,\\n        uint256 _usdAmount,\\n        uint256 _wrappedTokenAmount,\\n        uint256 _deadline\\n    ) internal {\\n        require(_to != address(0));\\n        // Get max USD price we can spend for this amount.\\n        swapRouter.swapExactTokensForTokens(\\n            _usdAmount,\\n            _wrappedTokenAmount,\\n            getPathForUSDToWrappedToken(),\\n            _to,\\n            _deadline\\n        );\\n    }\\n\\n    /**\\n     * @param _amount Amount\\n     */\\n    function getEstimatedWrappedTokenForUSD(uint256 _amount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256[] memory wrappedTokenAmount =\\n            swapRouter.getAmountsOut(_amount, getPathForUSDToWrappedToken());\\n        // since in the path the wrappedToken is the second one, so we should retuen the second one also here    \\n        return wrappedTokenAmount[1];\\n    }\\n\\n    function getPathForUSDToWrappedToken() public view returns (address[] memory) {\\n        address[] memory path = new address[](2);\\n        path[0] = BUSD_CONTRACT_ADDRESS;\\n        path[1] = WRAPPED_Token_CONTRACT_ADDRESS;\\n\\n        return path;\\n    }\\n\\n    // the function should be rename to getSwapRouter\\n    function getswapRouter() public view returns (address) {\\n        return address(swapRouter);\\n    }\\n}\\n\",\"keccak256\":\"0x00375429519c6cec13e64267530e31d25b7d5d53790c570bf3e81e3285c0700e\",\"license\":\"UNLICENSED\"},\"contracts/ILocker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface ILocker {\\n    /**\\n     * @dev Fails if transaction is not allowed.\\n     * Return values can be ignored for AntiBot launches\\n     */\\n    function lockOrGetPenalty(address source, address dest)\\n        external\\n        returns (bool, uint256);\\n}\\n\\ninterface ILockerUser {\\n    function locker() external view returns (ILocker);\\n\\n    /**\\n     * @dev Emitted when setLocker is called.\\n     */\\n    event SetLocker(address indexed locker);\\n}\\n\\n\",\"keccak256\":\"0x51a18df7a6b1708e8d614f547eb09dd79e64093413bb0081dbb8f0f411ce0e96\",\"license\":\"UNLICENSED\"},\"contracts/PancakeSwap/IPancakeRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface IPancakeRouter01 {\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n}\\n\\ninterface IPancakeRouter02 is IPancakeRouter01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2b582633995bad7e354c4a36176081b0a41b234e75ed9458ac9ac53afd82e84e\",\"license\":\"UNLICENSED\"},\"contracts/Price/PriceConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceConsumer {\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * @param _oracle The chainlink node oracle address to send requests\\n     */\\n    constructor(address _oracle) {\\n        // commented for updatingMaturingPrice function in staking pool to work correctly\\n        // require(_oracle != address(0));\\n        priceFeed = AggregatorV3Interface(_oracle);\\n    }\\n\\n    /**\\n     * Returns decimals for oracle contract\\n     */\\n    function getDecimals() external view returns (uint8) {\\n        uint8 decimals = priceFeed.decimals();\\n        return decimals;\\n    }\\n\\n    /**\\n     * Returns the latest price from oracle contract\\n     */\\n    function getLatestPrice() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return price >= 0 ? uint256(price) : 0;\\n    }\\n\\n    // TODO: a function must be added to get the price on a specific timestamp\\n    // at the moment chainlink provide a function to get the price on a round ID\\n    // but all round IDs don't return a valid price and mapping the round IDs to\\n    // timestamps is not very well defined\\n}\\n\",\"keccak256\":\"0xd7ac173689dd7d69503b0708dad3ef2122e3f1f0eaaead1f7ceb2283fa887d0c\",\"license\":\"UNLICENSED\"},\"contracts/Role/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Operator is Context {\\n    using Roles for Roles.Role;\\n\\n    event OperatorAdded(address indexed account);\\n    event OperatorRemoved(address indexed account);\\n\\n    Roles.Role private _operators;\\n\\n    constructor() {\\n        if (!isOperator(_msgSender())) {\\n            _addOperator(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            isOperator(_msgSender()),\\n            \\\"OperatorRole: caller does not have the Operator role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator(address account) public view returns (bool) {\\n        return _operators.has(account);\\n    }\\n\\n    function addOperator(address account) public onlyOperator {\\n        _addOperator(account);\\n    }\\n\\n    function renounceOperator() public {\\n        _removeOperator(_msgSender());\\n    }\\n\\n    function _addOperator(address account) internal {\\n        _operators.add(account);\\n        emit OperatorAdded(account);\\n    }\\n\\n    function _removeOperator(address account) internal {\\n        _operators.remove(account);\\n        emit OperatorRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0xe3ed3896ec9e9cc477f1318e9e5f109704eac51255bca6caa36e20fed6965de9\",\"license\":\"UNLICENSED\"},\"contracts/Role/Rewarder.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Rewarder is Context {\\n    using Roles for Roles.Role;\\n\\n    event RewarderAdded(address indexed account);\\n    event RewarderRemoved(address indexed account);\\n\\n    Roles.Role private _rewarders;\\n\\n    constructor() {\\n        if (!isRewarder(_msgSender())) {\\n            _addRewarder(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyRewarder() {\\n        require(\\n            isRewarder(_msgSender()),\\n            \\\"RewarderRole: caller does not have the Rewarder role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isRewarder(address account) public view returns (bool) {\\n        return _rewarders.has(account);\\n    }\\n\\n    function addRewarder(address account) public onlyRewarder {\\n        _addRewarder(account);\\n    }\\n\\n    function renounceRewarder() public {\\n        _removeRewarder(_msgSender());\\n    }\\n\\n    function _addRewarder(address account) internal {\\n        _rewarders.add(account);\\n        emit RewarderAdded(account);\\n    }\\n\\n    function _removeRewarder(address account) internal {\\n        _rewarders.remove(account);\\n        emit RewarderRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x854556cd27f92d4f52e87247d947760942df133464e01f580d4716cc64fe4e5c\",\"license\":\"UNLICENSED\"},\"contracts/Role/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping(address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0x1156e37e7835772537d5dfb53649b1e39b1eff5791f6bd759664168fcc7c8462\",\"license\":\"UNLICENSED\"},\"contracts/Staking/RewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"../TotemToken.sol\\\";\\nimport \\\"../Role/Operator.sol\\\";\\nimport \\\"../Role/Rewarder.sol\\\";\\n\\ncontract RewardManager is Context, Ownable, Operator, Rewarder {\\n    TotemToken totemToken;\\n\\n    event SetOperator(address operator);\\n    event SetRewarder(address rewarder);\\n\\n    constructor(TotemToken _totemToken) {\\n        totemToken = _totemToken;\\n    }\\n\\n    function setOperator(address _newOperator) public onlyOwner {\\n        require(\\n            _newOperator != address(0),\\n            \\\"0200 New Operator address cannot be zero.\\\"\\n        );\\n\\n        addOperator(_newOperator);\\n        emit SetOperator(_newOperator);\\n    }\\n\\n    function addPool(address _poolAddress) public onlyOperator {\\n        require(\\n            _poolAddress != address(0),\\n            \\\"0210 Pool address cannot be zero.\\\"\\n        );\\n\\n        addRewarder(_poolAddress);\\n        emit SetRewarder(_poolAddress);\\n    }\\n\\n    function rewardUser(address _user, uint256 _amount) public onlyRewarder {\\n        require(_user != address(0), \\\"0230 User address cannot be zero.\\\");\\n\\n        require(totemToken.transfer(_user, _amount));\\n    }\\n}\",\"keccak256\":\"0x8022b860bf7f1c529cf76ea3c5cd6a9ea5a0ca663c40550effa98b6aa9d74d60\",\"license\":\"UNLICENSED\"},\"contracts/Staking/StakingPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"../Price/PriceConsumer.sol\\\";\\nimport \\\"../Distribution/USDRetriever.sol\\\";\\nimport \\\"./RewardManager.sol\\\";\\nimport \\\"../Distribution/WrappedTokenDistributor.sol\\\"; \\n\\ncontract StakingPool is\\n    Context,\\n    Ownable,\\n    PriceConsumer,\\n    USDRetriever,\\n    WrappedTokenDistributor\\n{\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    struct StakeWithPrediction {\\n        uint256 stakedBalance;\\n        uint256 stakedTime;\\n        uint256 amountWithdrawn;\\n        uint256 lastWithdrawalTime;\\n        uint256 pricePrediction;\\n        uint256 difference;\\n        uint256 rank;\\n        bool prizeRewardWithdrawn;\\n        bool didUnstake;\\n    }\\n\\n    struct Staker {\\n        address stakerAddress;\\n        uint256 index;\\n    }\\n\\n    struct PrizeRewardRate {\\n        uint256 rank;\\n        uint256 percentage;\\n    }\\n\\n    TotemToken public immutable totemToken;\\n\\n    // FIXME: change the following variables types to add more flexibilty to the contract\\n    RewardManager public immutable rewardManager;\\n    IERC20 public immutable wrappedToken;\\n\\n    string public wrappedTokenSymbol;\\n    string public poolType;\\n\\n    uint256 public immutable launchDate;\\n    uint256 public immutable lockTime;\\n    uint256 public immutable maturityTime;\\n\\n    uint256 public immutable sizeAllocation;\\n    uint256 public immutable stakeApr;\\n\\n    uint256 public immutable prizeAmount;\\n\\n    // usdPrizeAmount is the enabler of WrappedToken rewarder if it would be 0 then the pool is only TOTM rewarder\\n    uint256 public immutable usdPrizeAmount;\\n\\n    uint256 public immutable stakeTaxRate;\\n    uint256 public immutable minimumStakeAmount;\\n\\n    mapping(address => StakeWithPrediction[]) public predictions;\\n    Staker[] public stakers;\\n    Staker[] public sortedStakers;\\n\\n    uint256 public totalStaked;\\n\\n    // TODO: the maturing price is not the real maturity price and it depends on\\n    // the calling endPool function\\n    uint256 public maturingPrice;\\n\\n    // FIXME: change the sizeLimitRange to basisPoint format\\n    uint256 public constant sizeLimitRangeRate = 5;\\n    // TODO: implement a mechanism to get the decimals from the oracle\\n    uint256 public constant oracleDecimal = 8;\\n\\n    uint256 public immutable potentialCollabReward;\\n    uint256 public immutable collaborativeRange;\\n    // based on the white paper the collaborative reward can be 20% (2000), 25% (2500) or 35% (3500)\\n    uint256 public collaborativeReward; \\n\\n    address public poolCreator;\\n    address public oracleContract;\\n\\n    bool public isAnEmergency;\\n    bool public immutable isEnhancedEnabled;\\n    bool public isActive;\\n    bool public isLocked;\\n    bool public isMatured;\\n    bool public isDeleted;\\n    \\n\\n    PrizeRewardRate[] public prizeRewardRates;\\n\\n    event Stake(address indexed user, uint256 amount, uint256 pricePrediction);\\n    event Withdraw(address indexed user, uint256 amount, uint256 wrappedTokenAmount);\\n    event Unstake(address indexed user, uint256 amount);\\n    event PoolLocked();\\n    event PoolSorted();\\n    event PoolMatured();\\n    event PoolDeleted();\\n\\n    constructor(\\n        string memory _wrappedTokenSymbol,\\n        string memory _poolType,\\n        TotemToken _totemToken,\\n        RewardManager _rewardManager,\\n        address _poolCreator,\\n        address[4] memory _addrs,\\n\\n        uint256[11] memory _variables,\\n        uint256[8] memory _ranks,\\n        uint256[8] memory _percentages,\\n        bool _isEnhancedEnabled\\n    )\\n        PriceConsumer(_addrs[2])\\n        WrappedTokenDistributor(_addrs[0], _addrs[1], _addrs[3])\\n    {\\n\\n        require(\\n            _variables[0] > block.timestamp,\\n            \\\"0301 launch date can't be in past\\\"\\n        );\\n\\n        wrappedTokenSymbol = _wrappedTokenSymbol;\\n        poolType = _poolType;\\n\\n        totemToken = _totemToken;\\n        rewardManager = _rewardManager;\\n        oracleContract = _addrs[2];\\n\\n        poolCreator = _poolCreator;\\n\\n        setUSDToken(_addrs[1]);\\n        wrappedToken = IERC20(_addrs[3]);\\n\\n        // deployDate = block.timestamp;\\n\\n        launchDate = _variables[0];\\n\\n        maturityTime = _variables[1];\\n        lockTime = _variables[2];\\n\\n        sizeAllocation = _variables[3];\\n        stakeApr = _variables[4];\\n        \\n        prizeAmount = _variables[5];\\n        usdPrizeAmount = _variables[6];\\n        potentialCollabReward = _variables[7];\\n        collaborativeRange = _variables[8];\\n        // FIXME: _variables[8] is burnRate \\n        stakeTaxRate = _variables[9];\\n        minimumStakeAmount = _variables[10];   \\n\\n\\n        isEnhancedEnabled = _isEnhancedEnabled; \\n\\n        for (uint256 i = 0; i < _ranks.length; i++) {\\n\\n            if (_percentages[i] == 0) break;\\n\\n            prizeRewardRates.push(\\n                PrizeRewardRate({\\n                    rank: _ranks[i], \\n                    percentage: _percentages[i]\\n                })\\n            );\\n        }\\n    }\\n\\n    function setActivationStatus(bool _activationStatus) \\n        external \\n        onlyPoolCreator \\n    {\\n        isActive = _activationStatus;\\n    }\\n\\n    function stake(uint256 _amount, uint256 _pricePrediction) external {\\n        require(\\n            isActive && block.timestamp > launchDate,\\n            \\\"0313 pool is not active\\\"\\n        );\\n        require(\\n            !isLocked, \\n            \\\"0310 Pool is locked\\\"\\n        );\\n        require(\\n            _amount >= minimumStakeAmount, \\n            \\\"0311 Amount can't be less than the minimum\\\"\\n        );\\n        \\n        uint256 limitRange = sizeAllocation.mul(sizeLimitRangeRate).div(100);\\n        uint256 taxRate = totemToken.taxRate();\\n        uint256 tax =\\n            totemToken.taxExempt(_msgSender()) ? 0 : _amount.mulBP(taxRate);\\n        \\n        require(\\n            totalStaked.add(_amount).sub(tax) <= sizeAllocation.add(limitRange), \\n            \\\"0312 Can't stake above size allocation\\\"\\n        );\\n\\n        \\n        uint256 stakeTaxAmount;\\n        // now the stakeTaxAmount is the staking tax and the _amount is initial amount minus the staking tax\\n        (stakeTaxAmount, _amount) = _getStakingTax(_amount, taxRate);\\n\\n        totemToken.transferFrom(\\n            _msgSender(),\\n            address(this),\\n            (_amount + stakeTaxAmount)\\n        );\\n\\n        // This is to remove token tax (not staking tax) from the amount\\n        _amount = _amount.sub(tax);\\n\\n        if (stakeTaxAmount > 0)\\n            totemToken.transfer(totemToken.taxationWallet(), stakeTaxAmount);\\n\\n        totalStaked = totalStaked.add(_amount);\\n\\n        // FIXME: spilit the stake function into two functions \\n        stakers.push(\\n            Staker({\\n                stakerAddress: _msgSender(),\\n                index: predictions[_msgSender()].length\\n            })\\n        );\\n\\n        predictions[_msgSender()].push(\\n            StakeWithPrediction({\\n                stakedBalance: _amount,\\n                stakedTime: block.timestamp,\\n                amountWithdrawn: 0,\\n                lastWithdrawalTime: block.timestamp,\\n                pricePrediction: _pricePrediction,\\n                // maybe it's better to use the max number available for rank and differece\\n                // because the 0 is the best number\\n                difference: type(uint256).max,\\n                rank: type(uint256).max,\\n                prizeRewardWithdrawn: false,\\n                didUnstake: false\\n            })\\n        );\\n\\n        if (totalStaked >= sizeAllocation) {\\n            // if the staking pool has not anymore capacity then it is locked\\n            _lockPool();\\n        }\\n\\n        emit Stake(_msgSender(), _amount, _pricePrediction);\\n    }\\n\\n    function claimReward() external {\\n        (uint256 reward, uint256 wrappedTokenReward) = getTotalReward(_msgSender());\\n\\n        if (reward > 0) {\\n            if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n                // FIXME: all transfers should be in require, rewardUser is using require\\n                rewardManager.rewardUser(_msgSender(), reward);\\n            }\\n        }\\n        \\n        // _wthdraw don't withdraw actually, and only update the array in the map\\n        _withdrawStakingReward(_msgSender());\\n        \\n        //FIXME: withdraws must come before the actual transfers to prevent attacks\\n\\n        if (isMatured) {\\n\\n            if (usdPrizeAmount > 0) {\\n                if (wrappedTokenReward > 0) require(wrappedToken.transfer(_msgSender(), wrappedTokenReward), \\\"0320\\\");\\n\\n                // _withdraw don't withdraw actually, and only update the array in the map\\n                _withdrawPrizeReward(_msgSender());\\n            }\\n\\n            // Users can't unstake until the pool matures\\n            uint256 stakedBalance = getTotalStakedBalance(_msgSender());\\n            if (stakedBalance > 0) {\\n                totemToken.transfer(_msgSender(), stakedBalance);\\n\\n                // _wthdraw don't withdraw actually, and only update the array in the map\\n                _withdrawStakedBalance(_msgSender());\\n\\n                emit Unstake(_msgSender(), stakedBalance);\\n            }\\n        }\\n\\n        emit Withdraw(_msgSender(), reward, wrappedTokenReward);\\n    }\\n\\n\\n    // FIXME: uncomment it when proxy is applied\\n    // function indexedClaimReward(uint256 stakeIndex) external {\\n    //     (uint256 reward, uint256 wrappedTokenReward) = getIndexedReward(_msgSender(), stakeIndex);\\n\\n    //     if (reward > 0) {\\n    //         // Send the token reward only when the rewardManager has the enough fund\\n    //         if (totemToken.balanceOf(address(rewardManager)) >= reward) {\\n    //             rewardManager.rewardUser(_msgSender(), reward);\\n    //         }\\n    //     }\\n        \\n    //     _withdrawIndexedStakingReward(_msgSender(), stakeIndex);\\n        \\n\\n    //     if (isMatured) {\\n            \\n    //         if (usdPrizeAmount > 0) {\\n    //             if (wrappedTokenReward > 0) require(wrappedToken.transfer(_msgSender(), wrappedTokenReward), \\\"0330\\\");\\n\\n    //             _withdrawIndexedPrizeReward(_msgSender(), stakeIndex);\\n    //         }\\n\\n\\n    //         uint256 stakedBalance = getIndexedStakedBalance(_msgSender(), stakeIndex);\\n    //         if (stakedBalance > 0) {\\n    //             totemToken.transfer(_msgSender(), stakedBalance);\\n\\n    //             _withdrawIndexedStakedBalance(_msgSender(), stakeIndex);\\n\\n    //             emit Unstake(_msgSender(), stakedBalance);\\n    //         }\\n    //     }\\n\\n    //     emit Withdraw(_msgSender(), reward, wrappedTokenReward);\\n    // }\\n\\n    function purchaseWrappedToken(uint256 usdAmount, uint256 deadline)\\n        external\\n        onlyPoolCreator\\n    {\\n        //TODO: require usdAmount to be more than usdPrizeAmount, to have enough rewards!\\n        require(\\n            usdPrizeAmount > 0, \\n            \\\"0340 The pool is only TOTM rewarder\\\"\\n        );\\n        \\n        require(\\n            usdAmount > 0, \\n            \\\"0341 Amount can't be zero\\\"\\n        );\\n\\n        require(\\n            deadline >= block.timestamp, \\n            \\\"0342 Deadline is low\\\"\\n        );\\n\\n        // This approves tokens to swap router\\n        address swapRouterAddress = getswapRouter();\\n        approveTokens(swapRouterAddress, usdAmount);\\n        \\n        // Get equivalent USD amount for Wrapped Token\\n        uint256 wrappedTokenAmount = getEstimatedWrappedTokenForUSD(usdAmount);\\n\\n        uint256 wrappedTokenAmountWithSlippage =\\n            wrappedTokenAmount.sub(wrappedTokenAmount.mulBP(300));\\n\\n        transferTokensThroughSwap(\\n            address(this),\\n            usdAmount,\\n            wrappedTokenAmountWithSlippage,\\n            deadline\\n        );\\n    }\\n\\n    function getWrappedTokenBalance() public view returns (uint256) {\\n        return wrappedToken.balanceOf(address(this));\\n    }\\n\\n    function getPredictionRange(uint256 amount)\\n        public\\n        pure\\n        returns (uint256)\\n    {\\n        uint256[4] memory steps =\\n            [uint256(27500), 30000, 17500, type(uint256).max];\\n        uint256[4] memory ranges = [uint256(1000), 700, 375, 200];\\n        uint256 totalRange = 0;\\n\\n        for (uint256 i = 0; i < steps.length; i++) {\\n            uint256 stepAmount =\\n                i == steps.length - 1 ? amount : steps[i].mul(10**18);\\n            uint256 step = amount > stepAmount ? stepAmount : amount;\\n            totalRange = totalRange.add(\\n                // the use of oracleDecimal -2 is because of ranges element (100 = 1 dollar range)\\n                step.mul(ranges[i]).mul(10**(oracleDecimal-2)).div(500).div(10**18)\\n            );\\n\\n            if (amount <= stepAmount) break;\\n\\n            amount = amount.sub(stepAmount);\\n        }\\n        return totalRange;\\n    }\\n\\n    // This function is to get the avg price prediction for calculating collaborative reward\\n    function getAveragePricePrediction() public view returns (uint256) {\\n        if (totalStaked == 0) return 0;\\n        uint256 avgPricePrediction = 0;\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            StakeWithPrediction memory prediction =\\n                predictions[stakers[i].stakerAddress][stakers[i].index];\\n\\n            avgPricePrediction = avgPricePrediction.add(\\n                prediction.pricePrediction.mul(prediction.stakedBalance)\\n            );\\n        }\\n\\n        avgPricePrediction = avgPricePrediction.div(totalStaked);\\n\\n        return avgPricePrediction;\\n    }\\n\\n    function lockPool() public onlyPoolCreator {\\n        //FIXME: add a require to prevent locking a pool before locktime or max size allocation\\n        _lockPool();\\n    }\\n\\n    function _lockPool() internal {\\n        isLocked = true;\\n\\n        emit PoolLocked();\\n    }\\n\\n    // If oracle is not zero address, then _price is ignored\\n    // When there is no oracle, _price is the maturingPrice and is set manually by the pool creator\\n    //FIXME: add a function to set oracle to zero in case it was given incorrectly by the owner\\n    function updateMaturingPrice(uint256 _price) external onlyPoolCreator {\\n        require(\\n            block.timestamp >= launchDate + lockTime + maturityTime,\\n            \\\"0350 Can't set maturing price before the maturity time\\\"\\n        );\\n\\n        if (oracleContract == address(0)) {\\n            maturingPrice = _price;\\n        } else {\\n            maturingPrice = getLatestPrice();\\n        }\\n    }\\n\\n    function endPool() external onlyPoolCreator {\\n        require(\\n            block.timestamp >= launchDate + lockTime + maturityTime,\\n            \\\"0360 Can't end pool before the maturity time\\\"\\n        );\\n        //TODO: check to see if there is enough USD to buy the wrapped token with, the mimimum USD\\n        // must be usdPrizeAmount, if there is not, do not allow endPool\\n        if (usdPrizeAmount > 0) {\\n            require(\\n                getWrappedTokenBalance() != 0, \\n                \\\"0361 WrappedToken Rewards not available\\\"\\n            );\\n        }\\n\\n        if (stakers.length > 0) {\\n            require(\\n                sortedStakers.length != 0,\\n                \\\"0362 first should sort\\\"\\n            );\\n        }\\n\\n        // potentialCollabReward allows the admin to set the collaborateive reward \\n        if (potentialCollabReward > 0) {\\n            // the collaborative reward only gave to the pools that the average price predicted with \\n            // the accuracy of 25 $\\n            uint256 avgPricePrediction = getAveragePricePrediction();\\n            if (getDifference(avgPricePrediction, collaborativeRange) == 0) {\\n                collaborativeReward = potentialCollabReward;\\n            }\\n        }\\n\\n        uint256 max = sortedStakers.length > 25 ? 25 : sortedStakers.length;\\n        for (uint256 i = 0; i < max; i++) {\\n            predictions[sortedStakers[i].stakerAddress][sortedStakers[i].index].rank =\\n                i + 1;\\n        }\\n\\n        // there is possibility that the size allocation is not reached \\n        // and the isLocked is not set to ture\\n        isLocked = true;\\n        isMatured = true;\\n\\n        emit PoolMatured();\\n    }\\n    function deletePool() external onlyPoolCreator {\\n        isDeleted = true;\\n        emit PoolDeleted();\\n    }\\n\\n    function getDifference(uint256 prediction, uint256 _range)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        if (prediction > maturingPrice) {\\n            if (prediction.sub(_range) <= maturingPrice) return 0;\\n            else return prediction.sub(_range).sub(maturingPrice);\\n        } else {\\n            if (prediction.add(_range) >= maturingPrice) return 0;\\n            else return maturingPrice.sub(prediction.add(_range));\\n        }\\n    }\\n\\n    function setSortedStakers(address[25] calldata addrArray, uint256[25] calldata indexArray)\\n        external \\n        onlyPoolCreator \\n    {\\n        if(sortedStakers.length != 0) {\\n            delete sortedStakers;\\n        }\\n\\n        for (uint256 i = 0; i < addrArray.length; i++) {\\n\\n            // the first 0 address means the other addresses are also 0 so they won't be checked\\n            if (addrArray[i] == address(0)) break;\\n\\n            sortedStakers.push(\\n            Staker({\\n                stakerAddress: addrArray[i],\\n                index: indexArray[i]\\n                })\\n            );\\n        }\\n\\n        emit PoolSorted();\\n    }\\n\\n    function getStakers() \\n        public \\n        view \\n        returns(address[] memory, uint256[] memory) \\n    {\\n        address[] memory addrs = new address[](stakers.length);\\n        uint256[] memory indexes = new uint256[](stakers.length);\\n\\n        for (uint256 i = 0; i < stakers.length; i++) {\\n            addrs[i] = stakers[i].stakerAddress;\\n            indexes[i] = stakers[i].index;\\n        }\\n\\n        return (addrs, indexes);\\n    }\\n\\n    function _getStakingRewardPerStake(address staker, uint256 stakeIndex)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction memory userStake = predictions[staker][stakeIndex];\\n        uint256 maturityDate = launchDate + lockTime + maturityTime;\\n\\n        uint256 timeTo =\\n            block.timestamp > maturityDate ? maturityDate : block.timestamp;\\n\\n        uint256 enhancedApr = _getEnhancedRewardRate(userStake.stakedTime);\\n\\n        // the reward formula is ((1 + stakeAPR +enhancedReward)^((MaturingDate - StakingDate)/365) - 1) * StakingBalance\\n\\n        uint256 rewardPerStake = _calcStakingReturn(\\n            stakeApr.add(enhancedApr),\\n            timeTo.sub(userStake.stakedTime),\\n            userStake.stakedBalance\\n            );\\n\\n        rewardPerStake = rewardPerStake.sub(userStake.amountWithdrawn);\\n\\n        return rewardPerStake;\\n    }\\n\\n    function _calcStakingReturn(uint256 totalRewardRate, uint256 timeDuration, uint256 totalStakedBalance) \\n        internal \\n        pure\\n        returns (uint256) \\n    {\\n        uint256 yearInSeconds = 365 days;\\n\\n        uint256 first = (yearInSeconds**2)\\n            .mul(10**8);\\n\\n        uint256 second = timeDuration\\n            .mul(totalRewardRate) \\n            .mul(yearInSeconds)\\n            .mul(5000);\\n        \\n        uint256 third = totalRewardRate\\n            .mul(yearInSeconds**2)\\n            .mul(5000);\\n\\n        uint256 forth = (timeDuration**2)\\n            .mul(totalRewardRate**2)\\n            .div(6);\\n\\n        uint256 fifth = timeDuration\\n            .mul(totalRewardRate**2)\\n            .mul(yearInSeconds)\\n            .div(2);\\n\\n        uint256 sixth = (totalRewardRate**2)\\n            .mul(yearInSeconds**2)\\n            .div(3);\\n \\n        uint256 rewardPerStake = first.add(second).add(forth).add(sixth);\\n\\n        rewardPerStake = rewardPerStake.sub(third).sub(fifth);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalRewardRate)\\n            .mul(timeDuration);\\n\\n        rewardPerStake = rewardPerStake\\n            .mul(totalStakedBalance)\\n            .div(yearInSeconds**3)\\n            .div(10**12);\\n\\n        return rewardPerStake; \\n    }\\n\\n    function getStakingReward(address staker) \\n        public \\n        view \\n        returns (uint256) \\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 reward = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            reward = reward.add(rewardPerStake);\\n        }\\n\\n        return reward;\\n    }\\n\\n    // function getIndexedStakingReward(address staker, uint256 stakeIndex) \\n    //     public \\n    //     view \\n    //     returns (uint256) \\n    // {\\n    //     StakeWithPrediction[] memory userStakes = predictions[staker];\\n    //     if (userStakes.length == 0) return 0;\\n    //     if (stakeIndex >= userStakes.length) return 0;\\n\\n    //     uint256 reward = 0;\\n        \\n    //     uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n    //     reward = reward.add(rewardPerStake);\\n\\n    //     return reward;\\n    // }\\n\\n    function _withdrawStakingReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            uint256 rewardPerStake = _getStakingRewardPerStake(staker, i);\\n\\n            userStakes[i].lastWithdrawalTime = block.timestamp;\\n            userStakes[i].amountWithdrawn = userStakes[i].amountWithdrawn.add(\\n                rewardPerStake\\n            );\\n        }\\n    }\\n\\n    // function _withdrawIndexedStakingReward(address staker, uint256 stakeIndex) internal {\\n    //     StakeWithPrediction[] storage userStakes = predictions[staker];\\n    //     if (userStakes.length == 0) return;\\n    //     if (stakeIndex >= userStakes.length) return;\\n\\n    //     uint256 rewardPerStake = _getStakingRewardPerStake(staker, stakeIndex);\\n\\n    //     userStakes[stakeIndex].lastWithdrawalTime = block.timestamp;\\n    //     userStakes[stakeIndex].amountWithdrawn = userStakes[stakeIndex].amountWithdrawn.add(\\n    //         rewardPerStake\\n    //     );\\n    // }\\n\\n    function _getEnhancedRewardRate(uint256 stakedTime)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n\\n        // if the enhanced reward is not enabled so consider enhanced raward 0\\n        if (!isEnhancedEnabled) {\\n            return 0;\\n        }\\n\\n        uint256 lockDate = launchDate.add(lockTime);\\n        uint256 difference = lockDate.sub(stakedTime);\\n\\n        if (difference < 48 hours) {\\n            return 0;\\n        } else if (difference < 72 hours) {\\n            return 100;\\n        } else if (difference < 96 hours) {\\n            return 200;\\n        } else if (difference < 120 hours) {\\n            return 300;\\n        } else if (difference < 144 hours) {\\n            return 400;\\n        } else {\\n            return 500;\\n        }\\n    }\\n\\n    function getPrizeReward(address staker)\\n        public\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // wihtout the maturing price calculating prize is impossible\\n        if (!isMatured) return (0, 0);\\n\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        // users that don't stake don't get any prize also\\n        if (userStakes.length == 0) return (0, 0);\\n\\n        uint256 maturingWrappedTokenPrizeAmount =\\n            (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n        uint256 reward = 0;\\n        uint256 wrappedTokenReward = 0;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            // only calculate the prize amount for stakes that are not withdrawn yet\\n            if (!userStakes[i].prizeRewardWithdrawn) {\\n\\n                uint256 _percent = _getPercentageReward(userStakes[i].rank);\\n\\n                reward = reward.add(\\n                            prizeAmount.mulBP(_percent)\\n                        );\\n\\n                wrappedTokenReward = wrappedTokenReward.add(\\n                            maturingWrappedTokenPrizeAmount\\n                                .mulBP(_percent)\\n                        );        \\n            }\\n        }\\n\\n        if (collaborativeReward > 0) {\\n            reward = reward.addBP(collaborativeReward);\\n            wrappedTokenReward = wrappedTokenReward.addBP(collaborativeReward);\\n        }\\n\\n        return (reward, wrappedTokenReward);\\n    }\\n\\n    function _getPercentageReward(uint256 _rank)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        for (uint256 i = 0; i < prizeRewardRates.length; i++) {\\n            if (_rank <= prizeRewardRates[i].rank) {\\n                return prizeRewardRates[i].percentage;\\n            }\\n        }\\n\\n        return 0;\\n    }        \\n\\n    // function getIndexedPrizeReward(address staker, uint256 stakeIndex)\\n    //     public\\n    //     view\\n    //     returns (uint256, uint256)\\n    // {\\n    //     // wihtout the maturing price calculating prize is impossible\\n    //     if (!isMatured) return (0, 0);\\n\\n    //     StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n    //     // users that don't stake don't get any prize also\\n    //     if (userStakes.length == 0) return (0, 0);\\n\\n    //     // the prize reward considered 0 if stakeIndex exceeds\\n    //     if (stakeIndex >= userStakes.length) return (0,0);\\n\\n    //     // If the first prize reward is withdrawn, we can assume that all the prize/collaborative rewards are withdrawn\\n    //     if (userStakes[stakeIndex].prizeRewardWithdrawn) return (0, 0);\\n\\n    //     uint256 maturingWrappedTokenPrizeAmount =\\n    //         (usdPrizeAmount.mul(10**oracleDecimal)).div(maturingPrice);\\n\\n    //     uint256 reward = 0;\\n    //     uint256 wrappedTokenReward = 0;\\n\\n    //     uint256 _percent = _getPercentageReward(userStakes[stakeIndex].rank);\\n\\n    //     reward = reward.add(\\n    //                     prizeAmount.mulBP(_percent)\\n    //                 );\\n\\n    //     wrappedTokenReward = wrappedTokenReward.add(\\n    //                     maturingWrappedTokenPrizeAmount\\n    //                         .mulBP(_percent)\\n    //                 );            \\n\\n    //     if (collaborativeReward > 0) {\\n    //         reward = reward.addBP(collaborativeReward);\\n    //         wrappedTokenReward = wrappedTokenReward.addBP(collaborativeReward);\\n    //     }\\n\\n    //     return (reward, wrappedTokenReward);\\n    // }\\n\\n\\n\\n    function _withdrawPrizeReward(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].prizeRewardWithdrawn = true;\\n        }\\n    }\\n\\n    // function _withdrawIndexedPrizeReward(address staker, uint256 stakeIndex) internal {\\n    //     StakeWithPrediction[] storage userStakes = predictions[staker];\\n    //     if (userStakes.length == 0) return;\\n    //     if (userStakes[stakeIndex].prizeRewardWithdrawn) return;\\n\\n    //     userStakes[stakeIndex].prizeRewardWithdrawn = true;\\n    // }\\n\\n    // getTotalStakedBalance return remained staked balance\\n    function getTotalStakedBalance(address staker)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n        if (userStakes.length == 0) return 0;\\n\\n        uint256 totalStakedBalance = 0;\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            if (!userStakes[i].didUnstake) {\\n                totalStakedBalance = totalStakedBalance.add(\\n                    userStakes[i].stakedBalance\\n                );\\n            }\\n        }\\n\\n        return totalStakedBalance;\\n    }\\n\\n    // getIndexedStakedBalance return the remained staked amount\\n    // function getIndexedStakedBalance(address staker, uint256 stakeIndex)\\n    //     public\\n    //     view\\n    //     returns (uint256)\\n    // {\\n    //     StakeWithPrediction[] memory userStakes = predictions[staker];\\n    //     if (userStakes.length == 0) return 0;\\n    //     if (stakeIndex >= userStakes.length) return 0; \\n\\n    //     uint256 totalStakedBalance = 0;\\n\\n    //     if (!userStakes[stakeIndex].didUnstake) {\\n    //         totalStakedBalance = totalStakedBalance.add(\\n    //             userStakes[stakeIndex].stakedBalance\\n    //         );\\n    //     }\\n\\n    //     return totalStakedBalance;\\n    // }\\n\\n    function _withdrawStakedBalance(address staker) internal {\\n        StakeWithPrediction[] storage userStakes = predictions[staker];\\n        if (userStakes.length == 0) return;\\n\\n        for (uint256 i = 0; i < userStakes.length; i++) {\\n            userStakes[i].didUnstake = true;\\n        }\\n    }\\n\\n    // function _withdrawIndexedStakedBalance(address staker, uint256 stakeIndex) internal {\\n    //     StakeWithPrediction[] storage userStakes = predictions[staker];\\n    //     if (userStakes.length == 0) return;\\n    //     if (stakeIndex >= userStakes.length) return;\\n\\n    //     userStakes[stakeIndex].didUnstake = true;\\n    // }\\n\\n    function getTotalReward(address staker)\\n        public\\n        view\\n        returns (uint256, uint256)\\n    {\\n        // since in the getPrizeReward function the maturingPrice is used\\n        // so we got error if it would not be maturityDate\\n        uint256 prizeReward;\\n        uint256 wrappedTokenPrizeReward;\\n        uint256 stakingReward = getStakingReward(staker);\\n        (prizeReward, wrappedTokenPrizeReward) = getPrizeReward(staker);\\n\\n        return (stakingReward.add(prizeReward), wrappedTokenPrizeReward);\\n    }\\n\\n    \\n    // function getIndexedReward(address staker, uint256 stakeIndex)\\n    //     public\\n    //     view\\n    //     returns (uint256, uint256)\\n    // {\\n    //     // since in the getPrizeReward function the maturingPrice is used\\n    //     // so we got error if it would not be maturityDate\\n    //     uint256 prizeReward;\\n    //     uint256 wrappedTokenPrizeReward;\\n    //     uint256 stakingReward = getIndexedStakingReward(staker, stakeIndex);\\n    //     (prizeReward, wrappedTokenPrizeReward) = getIndexedPrizeReward(staker, stakeIndex);\\n\\n    //     return (stakingReward.add(prizeReward), wrappedTokenPrizeReward);\\n    // }\\n\\n    function _getStakingTax(uint256 amount, uint256 tokenTaxRate)\\n        internal\\n        view\\n        returns (uint256, uint256)\\n    {\\n        uint256 newStakeTaxRate =\\n            stakeTaxRate > tokenTaxRate ? stakeTaxRate.sub(tokenTaxRate) : 0;\\n        if (newStakeTaxRate == 0) {\\n            return (0, amount);\\n        }\\n        return (\\n            amount.mulBP(newStakeTaxRate),\\n            amount.sub(amount.mulBP(newStakeTaxRate))\\n        );\\n    }\\n\\n    function withdrawStuckTokens(address _stuckToken, uint256 amount, address receiver)\\n        external\\n        onlyPoolCreator\\n    {\\n        require(\\n            _stuckToken != address(totemToken), \\n            \\\"0370 totems can not be transfered\\\"\\n        );\\n        IERC20 stuckToken = IERC20(_stuckToken);\\n        stuckToken.transfer(receiver, amount);\\n    }\\n\\n\\t// hasUnStaked return true if the user staked in the pool and then has unStaked it (in claim usecase)\\n    function hasUnStaked(address staker, uint256 stakeIndex) external view returns (bool) {\\n        StakeWithPrediction[] memory userStakes = predictions[staker];\\n\\n        require(\\n            userStakes.length > 0,\\n            \\\"0380 this address didn't stake in this pool\\\"\\n        );\\n\\n        require(\\n            stakeIndex < userStakes.length,\\n            \\\"0381 this index exceeds\\\"\\n        );\\n    \\n\\n        if (userStakes[stakeIndex].didUnstake) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function declareEmergency()\\n        external\\n        onlyPoolCreator\\n    {\\n        isActive = false;\\n        isAnEmergency = true;\\n\\n        _lockPool();\\n    }\\n\\n    function emergentWithdraw() external {\\n        require(\\n            isAnEmergency,\\n            \\\"it's not an emergency\\\"\\n        );\\n\\n        // Users can't unstake until the pool matures\\n        uint256 stakedBalance = getTotalStakedBalance(_msgSender());\\n        if (stakedBalance > 0) {\\n            totemToken.transfer(_msgSender(), stakedBalance);\\n\\n            // _wthdraw don't withdraw actually, and only update the array in the map\\n            _withdrawStakedBalance(_msgSender());\\n\\n            emit Unstake(_msgSender(), stakedBalance);\\n        }\\n    }\\n\\n    modifier onlyPoolCreator {\\n        require(\\n            _msgSender() == poolCreator,\\n            \\\"0300 caller is not a pool creator\\\"\\n        );\\n        _;\\n    }\\n}\",\"keccak256\":\"0xf8333561e485602a9f396c0c252f8553fdebda0058ecf27abf8908e89b4f20a3\",\"license\":\"UNLICENSED\"},\"contracts/TotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"./ILocker.sol\\\";\\nimport \\\"./BasisPoints.sol\\\";\\n\\ncontract TotemToken is ILockerUser, Context, ERC20, Ownable {\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    string public constant NAME = \\\"Totem Token\\\";\\n    string public constant SYMBOL = \\\"TOTM\\\";\\n    uint8 public constant DECIMALS = 18;\\n    uint256 public constant INITIAL_SUPPLY = 10000000 * (10**uint256(DECIMALS));\\n\\n    address public CommunityDevelopmentAddr;\\n    address public StakingRewardsAddr;\\n    address public LiquidityPoolAddr;\\n    address public PublicSaleAddr;\\n    address public AdvisorsAddr;\\n    address public SeedInvestmentAddr;\\n    address public PrivateSaleAddr;\\n    address public TeamAllocationAddr;\\n    address public StrategicRoundAddr;\\n\\n    uint256 public constant COMMUNITY_DEVELOPMENT =\\n        1000000 * (10**uint256(DECIMALS)); // 10% for Community development\\n    uint256 public constant STAKING_REWARDS = 1650000 * (10**uint256(DECIMALS)); // 16.5% for Staking Revawards\\n    uint256 public constant LIQUIDITY_POOL = 600000 * (10**uint256(DECIMALS)); // 6% for Liquidity pool\\n    uint256 public constant ADVISORS = 850000 * (10**uint256(DECIMALS)); // 8.5% for Advisors\\n    uint256 public constant SEED_INVESTMENT = 450000 * (10**uint256(DECIMALS)); // 4.5% for Seed investment\\n    uint256 public constant PRIVATE_SALE = 2000000 * (10**uint256(DECIMALS)); // 20% for Private Sale\\n    uint256 public constant TEAM_ALLOCATION = 1500000 * (10**uint256(DECIMALS)); // 15% for Team allocation\\n\\n    uint256 public constant LAUNCH_POOL =\\n        5882352941 * (10**uint256(DECIMALS - 5)); // 58823.52941 for LaunchPool\\n    uint256 public constant PUBLIC_SALE =\\n        450000 * (10**uint256(DECIMALS)) + LAUNCH_POOL; // 4.5% for Public Sale\\n    uint256 public constant STRATEGIC_ROUND =\\n        1500000 * (10**uint256(DECIMALS)) - LAUNCH_POOL; // 15% for Strategic Round\\n    uint256 public taxRate = 300;\\n    address public taxationWallet;\\n\\n    bool private _isDistributionComplete = false;\\n\\n    mapping(address => bool) public taxExempt;\\n\\n    ILocker public override locker;\\n\\n    constructor() ERC20(NAME, SYMBOL) {\\n        taxationWallet = _msgSender();\\n\\n        _mint(address(this), INITIAL_SUPPLY);\\n    }\\n\\n    function setLocker(address _locker) external onlyOwner() {\\n        require(_locker != address(0), \\\"_locker cannot be address(0)\\\");\\n        locker = ILocker(_locker);\\n        emit SetLocker(_locker);\\n    }\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) public onlyOwner {\\n        require(!_isDistributionComplete);\\n\\n        require(_CommunityDevelopmentAddr != address(0));\\n        require(_StakingRewardsAddr != address(0));\\n        require(_LiquidityPoolAddr != address(0));\\n        require(_PublicSaleAddr != address(0));\\n        require(_AdvisorsAddr != address(0));\\n        require(_SeedInvestmentAddr != address(0));\\n        require(_PrivateSaleAddr != address(0));\\n        require(_TeamAllocationAddr != address(0));\\n        require(_StrategicRoundAddr != address(0));\\n        // set parnters addresses\\n        CommunityDevelopmentAddr = _CommunityDevelopmentAddr;\\n        StakingRewardsAddr = _StakingRewardsAddr;\\n        LiquidityPoolAddr = _LiquidityPoolAddr;\\n        PublicSaleAddr = _PublicSaleAddr;\\n        AdvisorsAddr = _AdvisorsAddr;\\n        SeedInvestmentAddr = _SeedInvestmentAddr;\\n        PrivateSaleAddr = _PrivateSaleAddr;\\n        TeamAllocationAddr = _TeamAllocationAddr;\\n        StrategicRoundAddr = _StrategicRoundAddr;\\n    }\\n\\n    function distributeTokens() public onlyOwner {\\n        require((!_isDistributionComplete));\\n\\n        _transfer(\\n            address(this),\\n            CommunityDevelopmentAddr,\\n            COMMUNITY_DEVELOPMENT\\n        );\\n        _transfer(address(this), StakingRewardsAddr, STAKING_REWARDS);\\n        _transfer(address(this), LiquidityPoolAddr, LIQUIDITY_POOL);\\n        _transfer(address(this), PublicSaleAddr, PUBLIC_SALE);\\n        _transfer(address(this), AdvisorsAddr, ADVISORS);\\n        _transfer(address(this), SeedInvestmentAddr, SEED_INVESTMENT);\\n        _transfer(address(this), PrivateSaleAddr, PRIVATE_SALE);\\n        _transfer(address(this), TeamAllocationAddr, TEAM_ALLOCATION);\\n        _transfer(address(this), StrategicRoundAddr, STRATEGIC_ROUND);\\n\\n        // Whitelist these addresses as tex exempt\\n        setTaxExemptStatus(CommunityDevelopmentAddr, true);\\n        setTaxExemptStatus(StakingRewardsAddr, true);\\n        setTaxExemptStatus(LiquidityPoolAddr, true);\\n        setTaxExemptStatus(PublicSaleAddr, true);\\n        setTaxExemptStatus(AdvisorsAddr, true);\\n        setTaxExemptStatus(SeedInvestmentAddr, true);\\n        setTaxExemptStatus(PrivateSaleAddr, true);\\n        setTaxExemptStatus(TeamAllocationAddr, true);\\n        setTaxExemptStatus(StrategicRoundAddr, true);\\n\\n        _isDistributionComplete = true;\\n    }\\n\\n    function setTaxRate(uint256 newTaxRate) public onlyOwner {\\n        require(newTaxRate < 10000, \\\"Tax connot be over 100% (10000 BP)\\\");\\n        taxRate = newTaxRate;\\n    }\\n\\n    function setTaxExemptStatus(address account, bool status) public onlyOwner {\\n        require(account != address(0));\\n        taxExempt[account] = status;\\n    }\\n\\n    function setTaxationWallet(address newTaxationWallet) public onlyOwner {\\n        require(newTaxationWallet != address(0));\\n        taxationWallet = newTaxationWallet;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        if (address(locker) != address(0)) {\\n            locker.lockOrGetPenalty(sender, recipient);\\n        }\\n        ERC20._transfer(sender, recipient, amount);\\n    }\\n\\n    function _transferWithTax(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(sender != recipient, \\\"Cannot self transfer\\\");\\n\\n        uint256 tax = amount.mulBP(taxRate);\\n        uint256 tokensToTransfer = amount.sub(tax);\\n\\n        _transfer(sender, taxationWallet, tax);\\n        _transfer(sender, recipient, tokensToTransfer);\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        require(_msgSender() != recipient, \\\"ERC20: cannot self transfer\\\");\\n        !taxExempt[_msgSender()]\\n            ? _transferWithTax(_msgSender(), recipient, amount)\\n            : _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        !taxExempt[sender]\\n            ? _transferWithTax(sender, recipient, amount)\\n            : _transfer(sender, recipient, amount);\\n\\n        approve(\\n            _msgSender(),\\n            allowance(sender, _msgSender()).sub(\\n                amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xfa21ba84a53a411dd96bf813d4c25a1168b631e1e5d098bb892c7e46a5e83ab0\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1873,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1232,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "USDCContract",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)1091"
      },
      {
        "astId": 1313,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "swapRouter",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IPancakeRouter02)1868"
      },
      {
        "astId": 1315,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "BUSD_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1317,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "WRAPPED_Token_CONTRACT_ADDRESS",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 2527,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "wrappedTokenSymbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 2529,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "poolType",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 2552,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "predictions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)2509_storage)dyn_storage)"
      },
      {
        "astId": 2555,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "stakers",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_struct(Staker)2514_storage)dyn_storage"
      },
      {
        "astId": 2558,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "sortedStakers",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_struct(Staker)2514_storage)dyn_storage"
      },
      {
        "astId": 2560,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "totalStaked",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2562,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "maturingPrice",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2574,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "collaborativeReward",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2576,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "poolCreator",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 2578,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "oracleContract",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 2580,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isAnEmergency",
        "offset": 20,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 2584,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isActive",
        "offset": 21,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 2586,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isLocked",
        "offset": 22,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 2588,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isMatured",
        "offset": 23,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 2590,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "isDeleted",
        "offset": 24,
        "slot": "15",
        "type": "t_bool"
      },
      {
        "astId": 2593,
        "contract": "contracts/Staking/StakingPool.sol:StakingPool",
        "label": "prizeRewardRates",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_struct(PrizeRewardRate)2519_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(PrizeRewardRate)2519_storage)dyn_storage": {
        "base": "t_struct(PrizeRewardRate)2519_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.PrizeRewardRate[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StakeWithPrediction)2509_storage)dyn_storage": {
        "base": "t_struct(StakeWithPrediction)2509_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.StakeWithPrediction[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Staker)2514_storage)dyn_storage": {
        "base": "t_struct(Staker)2514_storage",
        "encoding": "dynamic_array",
        "label": "struct StakingPool.Staker[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1091": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPancakeRouter02)1868": {
        "encoding": "inplace",
        "label": "contract IPancakeRouter02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(StakeWithPrediction)2509_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPool.StakeWithPrediction[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(StakeWithPrediction)2509_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PrizeRewardRate)2519_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.PrizeRewardRate",
        "members": [
          {
            "astId": 2516,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "rank",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2518,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "percentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(StakeWithPrediction)2509_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.StakeWithPrediction",
        "members": [
          {
            "astId": 2492,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakedBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2494,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakedTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2496,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2498,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "lastWithdrawalTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2500,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "pricePrediction",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2502,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "difference",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2504,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "rank",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 2506,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "prizeRewardWithdrawn",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 2508,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "didUnstake",
            "offset": 1,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Staker)2514_storage": {
        "encoding": "inplace",
        "label": "struct StakingPool.Staker",
        "members": [
          {
            "astId": 2511,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "stakerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2513,
            "contract": "contracts/Staking/StakingPool.sol:StakingPool",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getDecimals()": {
        "notice": "Returns decimals for oracle contract"
      },
      "getLatestPrice()": {
        "notice": "Returns the latest price from oracle contract"
      }
    },
    "version": 1
  }
}