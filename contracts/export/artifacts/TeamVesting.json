{
  "contractName": "TeamVesting",
  "sourceName": "contracts/TotemVesting/TeamVesting.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract TotemToken",
          "name": "_totemToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "StartTimeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registeredAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "VestingScheduleRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registeredAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LOCK_PERIODS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELEASE_PERIODS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAW_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalAmount",
          "type": "uint256"
        }
      ],
      "name": "addRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStartTimeSet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "recipients",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releasePeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newStartTime",
          "type": "uint256"
        }
      ],
      "name": "setStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totemToken",
      "outputs": [
        {
          "internalType": "contract TotemToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unallocatedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "vested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountVested",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051610dcb380380610dcb8339818101604052602081101561003357600080fd5b5051806a013da329b633647180000062278d00600c6006600061005461010a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600084116100ab57600080fd5b600083116100b857600080fd5b600082116100c557600080fd5b600980546001600160a01b0319166001600160a01b0396909616959095179094556007839055600892909255600455600555600655506003805460ff1916905561010e565b3390565b610cae8061011d6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b8578063e8153c931161007c578063e8153c9314610234578063eb8203121461023c578063f2fde38b1461027b578063f361c59b146102a1578063f57c8cdf146102bd578063f7982243146102c557610136565b8063715018a6146101d257806378e97925146101da5780638da5cb5b146101e2578063a2d7f5e314610206578063ce513b6f1461020e57610136565b80633ccfd60b116100ff5780633ccfd60b146101755780633e0a322d1461017f578063494051a01461019c5780634afe5bf3146101a45780637102b728146101ac57610136565b8062ad3a231461013b578063162075d8146101555780631a39d8ef1461015d5780632509e0861461016557806330c6b5eb1461016d575b600080fd5b6101436102f1565b60408051918252519081900360200190f35b6101436102f6565b6101436102fc565b610143610302565b610143610308565b61017d61030f565b005b61017d6004803603602081101561019557600080fd5b5035610460565b610143610532565b610143610537565b610143600480360360208110156101c257600080fd5b50356001600160a01b031661053d565b61017d6106d1565b61014361077d565b6101ea610783565b604080516001600160a01b039092168252519081900360200190f35b610143610792565b6101436004803603602081101561022457600080fd5b50356001600160a01b03166107a1565b6101ea6107d6565b6102626004803603602081101561025257600080fd5b50356001600160a01b03166107e5565b6040805192835260208301919091528051918290030190f35b61017d6004803603602081101561029157600080fd5b50356001600160a01b03166107fe565b6102a9610900565b604080519115158252519081900360200190f35b610143610909565b61017d600480360360408110156102db57600080fd5b506001600160a01b03813516906020013561090f565b600c81565b60045481565b60075481565b60065481565b62278d0081565b60006001600061031d610a8f565b6001600160a01b0316815260208101919091526040016000208054909150610345575061045e565b6000610357610352610a8f565b61053d565b9050600061036b610366610a8f565b6107a1565b600184018390559050801561045a576009546001600160a01b031663a9059cbb610393610a8f565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b505050506040513d602081101561040457600080fd5b505161040f57600080fd5b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364610438610a8f565b604080516001600160a01b039092168252602082018490528051918290030190a15b5050505b565b610468610a8f565b6001600160a01b0316610479610783565b6001600160a01b0316146104c2576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b60035460ff1615806104d5575042600254115b6104de57600080fd5b4281116104ea57600080fd5b60028190556003805460ff191660011790556040805182815290517faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec29181900360200190a150565b600681565b60085481565b6001600160a01b0381166000908152600160208181526040808420815180830190925280548252909201549082015260035460ff16158061057d57508051155b8061059357506006541580156105935750600554155b8061059f575060025442105b156105ae5760009150506106cc565b60006105c7600654600454610a9390919063ffffffff16565b6002549091506105d79082610af3565b4210156105e9576000925050506106cc565b600061060e610605600554600654610af390919063ffffffff16565b60045490610a93565b60025490915061061e9082610af3565b421061062e5750505190506106cc565b600061065160045461064b60025442610b4d90919063ffffffff16565b90610baa565b6001019050600654811161066c5760009450505050506106cc565b60055460065461067b91610af3565b811061068e575050905191506106cc9050565b60055484516000916106a09190610baa565b905060006106c3826106bd60065486610b4d90919063ffffffff16565b90610a93565b96505050505050505b919050565b6106d9610a8f565b6001600160a01b03166106ea610783565b6001600160a01b031614610733576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60025481565b6000546001600160a01b031690565b6a013da329b633647180000081565b6001600160a01b0381166000908152600160208190526040822001546107d0906107ca8461053d565b90610b4d565b92915050565b6009546001600160a01b031681565b6001602081905260009182526040909120805491015482565b610806610a8f565b6001600160a01b0316610817610783565b6001600160a01b031614610860576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b6001600160a01b0381166108a55760405162461bcd60e51b8152600401808060200182810382526026815260200180610c126026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60035460ff1681565b60055481565b610917610a8f565b6001600160a01b0316610928610783565b6001600160a01b031614610971576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b60035460ff161580610984575042600254115b61098d57600080fd5b6001600160a01b0382166109a057600080fd5b6001600160a01b038216600090815260016020526040902054156109e7576001600160a01b0382166000908152600160205260409020546008546109e391610af3565b6008555b6000811180156109f957506008548111155b610a0257600080fd5b604080518082018252828152600060208083018281526001600160a01b038716835260019182905293909120915182559151910155600854610a449082610b4d565b600855604080516001600160a01b03841681526020810183905281517f16e42921daee38136dc17f8420c371163ec8299e5299fb480d7aeff85cfac3eb929181900390910190a15050565b3390565b600082610aa2575060006107d0565b82820282848281610aaf57fe5b0414610aec5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c386021913960400191505060405180910390fd5b9392505050565b600082820183811015610aec576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115610ba4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211610c00576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610c0957fe5b04939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122014f59a1c5983e8b6de6394e5acdd2ffd70c854c810c082489298eac82f635fb864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b8578063e8153c931161007c578063e8153c9314610234578063eb8203121461023c578063f2fde38b1461027b578063f361c59b146102a1578063f57c8cdf146102bd578063f7982243146102c557610136565b8063715018a6146101d257806378e97925146101da5780638da5cb5b146101e2578063a2d7f5e314610206578063ce513b6f1461020e57610136565b80633ccfd60b116100ff5780633ccfd60b146101755780633e0a322d1461017f578063494051a01461019c5780634afe5bf3146101a45780637102b728146101ac57610136565b8062ad3a231461013b578063162075d8146101555780631a39d8ef1461015d5780632509e0861461016557806330c6b5eb1461016d575b600080fd5b6101436102f1565b60408051918252519081900360200190f35b6101436102f6565b6101436102fc565b610143610302565b610143610308565b61017d61030f565b005b61017d6004803603602081101561019557600080fd5b5035610460565b610143610532565b610143610537565b610143600480360360208110156101c257600080fd5b50356001600160a01b031661053d565b61017d6106d1565b61014361077d565b6101ea610783565b604080516001600160a01b039092168252519081900360200190f35b610143610792565b6101436004803603602081101561022457600080fd5b50356001600160a01b03166107a1565b6101ea6107d6565b6102626004803603602081101561025257600080fd5b50356001600160a01b03166107e5565b6040805192835260208301919091528051918290030190f35b61017d6004803603602081101561029157600080fd5b50356001600160a01b03166107fe565b6102a9610900565b604080519115158252519081900360200190f35b610143610909565b61017d600480360360408110156102db57600080fd5b506001600160a01b03813516906020013561090f565b600c81565b60045481565b60075481565b60065481565b62278d0081565b60006001600061031d610a8f565b6001600160a01b0316815260208101919091526040016000208054909150610345575061045e565b6000610357610352610a8f565b61053d565b9050600061036b610366610a8f565b6107a1565b600184018390559050801561045a576009546001600160a01b031663a9059cbb610393610a8f565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b505050506040513d602081101561040457600080fd5b505161040f57600080fd5b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364610438610a8f565b604080516001600160a01b039092168252602082018490528051918290030190a15b5050505b565b610468610a8f565b6001600160a01b0316610479610783565b6001600160a01b0316146104c2576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b60035460ff1615806104d5575042600254115b6104de57600080fd5b4281116104ea57600080fd5b60028190556003805460ff191660011790556040805182815290517faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec29181900360200190a150565b600681565b60085481565b6001600160a01b0381166000908152600160208181526040808420815180830190925280548252909201549082015260035460ff16158061057d57508051155b8061059357506006541580156105935750600554155b8061059f575060025442105b156105ae5760009150506106cc565b60006105c7600654600454610a9390919063ffffffff16565b6002549091506105d79082610af3565b4210156105e9576000925050506106cc565b600061060e610605600554600654610af390919063ffffffff16565b60045490610a93565b60025490915061061e9082610af3565b421061062e5750505190506106cc565b600061065160045461064b60025442610b4d90919063ffffffff16565b90610baa565b6001019050600654811161066c5760009450505050506106cc565b60055460065461067b91610af3565b811061068e575050905191506106cc9050565b60055484516000916106a09190610baa565b905060006106c3826106bd60065486610b4d90919063ffffffff16565b90610a93565b96505050505050505b919050565b6106d9610a8f565b6001600160a01b03166106ea610783565b6001600160a01b031614610733576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60025481565b6000546001600160a01b031690565b6a013da329b633647180000081565b6001600160a01b0381166000908152600160208190526040822001546107d0906107ca8461053d565b90610b4d565b92915050565b6009546001600160a01b031681565b6001602081905260009182526040909120805491015482565b610806610a8f565b6001600160a01b0316610817610783565b6001600160a01b031614610860576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b6001600160a01b0381166108a55760405162461bcd60e51b8152600401808060200182810382526026815260200180610c126026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60035460ff1681565b60055481565b610917610a8f565b6001600160a01b0316610928610783565b6001600160a01b031614610971576040805162461bcd60e51b81526020600482018190526024820152600080516020610c59833981519152604482015290519081900360640190fd5b60035460ff161580610984575042600254115b61098d57600080fd5b6001600160a01b0382166109a057600080fd5b6001600160a01b038216600090815260016020526040902054156109e7576001600160a01b0382166000908152600160205260409020546008546109e391610af3565b6008555b6000811180156109f957506008548111155b610a0257600080fd5b604080518082018252828152600060208083018281526001600160a01b038716835260019182905293909120915182559151910155600854610a449082610b4d565b600855604080516001600160a01b03841681526020810183905281517f16e42921daee38136dc17f8420c371163ec8299e5299fb480d7aeff85cfac3eb929181900390910190a15050565b3390565b600082610aa2575060006107d0565b82820282848281610aaf57fe5b0414610aec5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c386021913960400191505060405180910390fd5b9392505050565b600082820183811015610aec576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115610ba4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211610c00576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610c0957fe5b04939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122014f59a1c5983e8b6de6394e5acdd2ffd70c854c810c082489298eac82f635fb864736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDCB CODESIZE SUB DUP1 PUSH2 0xDCB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH11 0x13DA329B6336471800000 PUSH3 0x278D00 PUSH1 0xC PUSH1 0x6 PUSH1 0x0 PUSH2 0x54 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x0 DUP5 GT PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x7 DUP4 SWAP1 SSTORE PUSH1 0x8 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x10E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0xCAE DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE8153C93 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xEB820312 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF361C59B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xF57C8CDF EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF7982243 EQ PUSH2 0x2C5 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xA2D7F5E3 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xCE513B6F EQ PUSH2 0x20E JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x494051A0 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x4AFE5BF3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7102B728 EQ PUSH2 0x1AC JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH3 0xAD3A23 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x162075D8 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2509E086 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x30C6B5EB EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x143 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x460 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x53D JUMP JUMPDEST PUSH2 0x17D PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x90F JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x31D PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x345 JUMPI POP PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357 PUSH2 0x352 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36B PUSH2 0x366 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD DUP4 SWAP1 SSTORE SWAP1 POP DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x393 PUSH2 0xA8F JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 PUSH2 0x438 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x468 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x479 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x4D5 JUMPI POP TIMESTAMP PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE SWAP1 SWAP3 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x57D JUMPI POP DUP1 MLOAD ISZERO JUMPDEST DUP1 PUSH2 0x593 JUMPI POP PUSH1 0x6 SLOAD ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI POP PUSH1 0x5 SLOAD ISZERO JUMPDEST DUP1 PUSH2 0x59F JUMPI POP PUSH1 0x2 SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 PUSH1 0x6 SLOAD PUSH1 0x4 SLOAD PUSH2 0xA93 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x5D7 SWAP1 DUP3 PUSH2 0xAF3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60E PUSH2 0x605 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0xAF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x61E SWAP1 DUP3 PUSH2 0xAF3 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x62E JUMPI POP POP MLOAD SWAP1 POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 PUSH1 0x4 SLOAD PUSH2 0x64B PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x66C JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x67B SWAP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 LT PUSH2 0x68E JUMPI POP POP SWAP1 MLOAD SWAP2 POP PUSH2 0x6CC SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xBAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C3 DUP3 PUSH2 0x6BD PUSH1 0x6 SLOAD DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6EA PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x733 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH11 0x13DA329B6336471800000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x7CA DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x806 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x817 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x860 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC12 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x917 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x928 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x984 JUMPI POP TIMESTAMP PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH2 0x9E3 SWAP2 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9F9 JUMPI POP PUSH1 0x8 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE SWAP2 MLOAD SWAP2 ADD SSTORE PUSH1 0x8 SLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x16E42921DAEE38136DC17F8420C371163EC8299E5299FB480D7AEFF85CFAC3EB SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAA2 JUMPI POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xAAF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC38 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xC00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xC09 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CREATE2 SWAP11 SHR MSIZE DUP4 0xE8 0xB6 0xDE PUSH4 0x94E5ACDD 0x2F REVERT PUSH17 0xC854C810C082489298EAC82F635FB86473 PUSH16 0x6C634300070600330000000000000000 ",
      "sourceMap": "93:472:27:-:0;;;353:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;353:210:27;;175:18;243:7;298:2;345:1;867:17:1;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:1;-1:-1:-1;;;;;909:18:1;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:1;942:43;;909:6;;942:43;842:150;1465:1:28;1450:12;:16;1442:25;;;;;;1505:1;1485:17;:21;1477:30;;;;;;1543:1;1525:15;:19;1517:28;;;;;;1556:10;:24;;-1:-1:-1;;;;;;1556:24:28;-1:-1:-1;;;;;1556:24:28;;;;;;;;;;;1591:11;:26;;;1627:17;:32;;;;1669:16;:36;-1:-1:-1;1715:32:28;1757:11;:26;-1:-1:-1;;1794:22:28;;-1:-1:-1;;1794:22:28;;;93:472:27;;598:104:5;685:10;598:104;:::o;93:472:27:-;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xE8153C93 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE8153C93 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xEB820312 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xF361C59B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xF57C8CDF EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF7982243 EQ PUSH2 0x2C5 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xA2D7F5E3 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xCE513B6F EQ PUSH2 0x20E JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x494051A0 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x4AFE5BF3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7102B728 EQ PUSH2 0x1AC JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH3 0xAD3A23 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x162075D8 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2509E086 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x30C6B5EB EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x143 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x460 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x53D JUMP JUMPDEST PUSH2 0x17D PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x792 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x90F JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x31D PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x345 JUMPI POP PUSH2 0x45E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357 PUSH2 0x352 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36B PUSH2 0x366 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD DUP4 SWAP1 SSTORE SWAP1 POP DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x393 PUSH2 0xA8F JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 PUSH2 0x438 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 JUMPDEST POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x468 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x479 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x4D5 JUMPI POP TIMESTAMP PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 GT PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE SWAP1 SWAP3 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x57D JUMPI POP DUP1 MLOAD ISZERO JUMPDEST DUP1 PUSH2 0x593 JUMPI POP PUSH1 0x6 SLOAD ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI POP PUSH1 0x5 SLOAD ISZERO JUMPDEST DUP1 PUSH2 0x59F JUMPI POP PUSH1 0x2 SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 PUSH1 0x6 SLOAD PUSH1 0x4 SLOAD PUSH2 0xA93 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x5D7 SWAP1 DUP3 PUSH2 0xAF3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60E PUSH2 0x605 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0xAF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x61E SWAP1 DUP3 PUSH2 0xAF3 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x62E JUMPI POP POP MLOAD SWAP1 POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 PUSH1 0x4 SLOAD PUSH2 0x64B PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x66C JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x67B SWAP2 PUSH2 0xAF3 JUMP JUMPDEST DUP2 LT PUSH2 0x68E JUMPI POP POP SWAP1 MLOAD SWAP2 POP PUSH2 0x6CC SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP5 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0xBAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6C3 DUP3 PUSH2 0x6BD PUSH1 0x6 SLOAD DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6EA PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x733 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH11 0x13DA329B6336471800000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x7CA DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH2 0xB4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x806 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x817 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x860 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC12 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x917 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x928 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC59 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x984 JUMPI POP TIMESTAMP PUSH1 0x2 SLOAD GT JUMPDEST PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH2 0x9E3 SWAP2 PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9F9 JUMPI POP PUSH1 0x8 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP2 MLOAD DUP3 SSTORE SWAP2 MLOAD SWAP2 ADD SSTORE PUSH1 0x8 SLOAD PUSH2 0xA44 SWAP1 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x16E42921DAEE38136DC17F8420C371163EC8299E5299FB480D7AEFF85CFAC3EB SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAA2 JUMPI POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xAAF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC38 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xC00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xC09 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CREATE2 SWAP11 SHR MSIZE DUP4 0xE8 0xB6 0xDE PUSH4 0x94E5ACDD 0x2F REVERT PUSH17 0xC854C810C082489298EAC82F635FB86473 PUSH16 0x6C634300070600330000000000000000 ",
      "sourceMap": "93:472:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:44;;;:::i;:::-;;;;;;;;;;;;;;;;576:31:28;;;:::i;833:26::-;;;:::i;757:::-;;;:::i;199:51:27:-;;;:::i;4650:495:28:-;;;:::i;:::-;;2769:364;;;;;;;;;;;;;;;;-1:-1:-1;2769:364:28;;:::i;306:40:27:-;;;:::i;905:32:28:-;;;:::i;3192:1250::-;;;;;;;;;;;;;;;;-1:-1:-1;3192:1250:28;-1:-1:-1;;;;;3192:1250:28;;:::i;1700:145:1:-;;;:::i;514:24:28:-;;;:::i;1068:85:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1068:85:1;;;;;;;;;;;;;;136:57:27;;;:::i;4448:196:28:-;;;;;;;;;;;;;;;;-1:-1:-1;4448:196:28;-1:-1:-1;;;;;4448:196:28;;:::i;996:28::-;;;:::i;454:53::-;;;;;;;;;;;;;;;;-1:-1:-1;454:53:28;-1:-1:-1;;;;;454:53:28;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1994:240:1;;;;;;;;;;;;;;;;-1:-1:-1;1994:240:1;-1:-1:-1;;;;;1994:240:1;;:::i;544:26:28:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;670:29;;;:::i;1829:934::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1829:934:28;;;;;;;;:::i;256:44:27:-;298:2;256:44;:::o;576:31:28:-;;;;:::o;833:26::-;;;;:::o;757:::-;;;;:::o;199:51:27:-;243:7;199:51;:::o;4650:495:28:-;4687:39;4729:10;:24;4740:12;:10;:12::i;:::-;-1:-1:-1;;;;;4729:24:28;;;;;;;;;;;;-1:-1:-1;4729:24:28;4767:27;;4729:24;;-1:-1:-1;4763:45:28;;4801:7;;;4763:45;4818:15;4836:20;4843:12;:10;:12::i;:::-;4836:6;:20::i;:::-;4818:38;;4866:21;4890:26;4903:12;:10;:12::i;:::-;4890;:26::i;:::-;4926:31;;;:41;;;4866:50;-1:-1:-1;4982:17:28;;4978:161;;5023:10;;-1:-1:-1;;;;;5023:10:28;:19;5043:12;:10;:12::i;:::-;5057:13;5023:48;;;;;;;;;;;;;-1:-1:-1;;;;;5023:48:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5023:48:28;5015:57;;;;;;5091:37;5100:12;:10;:12::i;:::-;5091:37;;;-1:-1:-1;;;;;5091:37:28;;;;;;;;;;;;;;;;;;;;4978:161;4650:495;;;;:::o;2769:364::-;1291:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1272:68:1;;;;;;;;;;;;;;;2920:14:28::1;::::0;::::1;;2919:15;::::0;:46:::1;;;2950:15;2938:9;;:27;2919:46;2911:55;;;::::0;::::1;;3000:15;2984:13;:31;2976:40;;;::::0;::::1;;3027:9;:25:::0;;;3062:14:::1;:21:::0;;-1:-1:-1;;3062:21:28::1;3079:4;3062:21;::::0;;3099:27:::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;2769:364:::0;:::o;306:40:27:-;345:1;306:40;:::o;905:32:28:-;;;;:::o;3192:1250::-;-1:-1:-1;;;;;3369:23:28;;3290:21;3369:23;;;:10;:23;;;;;;;;3327:65;;;;;;;;;;;;;;;;;;;;3420:14;;;;3419:15;;:66;;-1:-1:-1;3451:28:28;;:33;3419:66;:123;;;-1:-1:-1;3502:11:28;;:16;:39;;;;-1:-1:-1;3522:14:28;;:19;3502:39;3419:168;;;;3577:9;;3559:15;:27;3419:168;3402:229;;;3619:1;3612:8;;;;;3402:229;3641:15;3659:33;3680:11;;3659:16;;:20;;:33;;;;:::i;:::-;3724:9;;3641:51;;-1:-1:-1;3724:22:28;;3641:51;3724:13;:22::i;:::-;3706:15;:40;3702:79;;;3769:1;3762:8;;;;;;3702:79;3791:12;3806:53;3827:31;3843:14;;3827:11;;:15;;:31;;;;:::i;:::-;3806:16;;;:20;:53::i;:::-;3892:9;;3791:68;;-1:-1:-1;3892:19:28;;3791:68;3892:13;:19::i;:::-;3873:15;:38;3869:104;;-1:-1:-1;;3934:28:28;;-1:-1:-1;3927:35:28;;3869:104;3983:14;4012:52;4047:16;;4012:30;4032:9;;4012:15;:19;;:30;;;;:::i;:::-;:34;;:52::i;:::-;4067:1;4012:56;3983:85;;4092:11;;4082:6;:21;4078:60;;4126:1;4119:8;;;;;;;;4078:60;4177:14;;4161:11;;:31;;:15;:31::i;:::-;4151:6;:41;4147:107;;-1:-1:-1;;4215:28:28;;;-1:-1:-1;4208:35:28;;-1:-1:-1;4208:35:28;4147:107;4318:14;;4285:28;;4264:18;;4285:48;;:28;:32;:48::i;:::-;4264:69;;4344:20;4367:39;4395:10;4367:23;4378:11;;4367:6;:10;;:23;;;;:::i;:::-;:27;;:39::i;:::-;4344:62;-1:-1:-1;;;;;;;3192:1250:28;;;;:::o;1700:145:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1272:68:1;;;;;;;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:1;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:1::1;::::0;;1700:145::o;514:24:28:-;;;;:::o;1068:85:1:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:1;1068:85;:::o;136:57:27:-;175:18;136:57;:::o;4448:196:28:-;-1:-1:-1;;;;;4597:23:28;;4536:14;4597:23;;;:10;:23;;;;;;;:39;;4573:64;;:19;4608:11;4573:6;:19::i;:::-;:23;;:64::i;:::-;4566:71;4448:196;-1:-1:-1;;4448:196:28:o;996:28::-;;;-1:-1:-1;;;;;996:28:28;;:::o;454:53::-;;;;;;;;;;;;;;;;;;;;:::o;1994:240:1:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1272:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2082:22:1;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:1;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:1::1;-1:-1:-1::0;;;;;2210:17:1;;;::::1;::::0;;;::::1;::::0;;1994:240::o;544:26:28:-;;;;;;:::o;670:29::-;;;;:::o;1829:934::-;1291:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:1;;1272:68;;;;;-1:-1:-1;;;1272:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1272:68:1;;;;;;;;;;;;;;;2018:14:28::1;::::0;::::1;;2017:15;::::0;:46:::1;;;2048:15;2036:9;;:27;2017:46;2009:55;;;::::0;::::1;;-1:-1:-1::0;;;;;2083:27:28;::::1;2075:36;;;::::0;::::1;;-1:-1:-1::0;;;;;2235:25:28;::::1;2275:1;2235:25:::0;;;:10:::1;:25;::::0;;;;:37;:41;2231:182:::1;;-1:-1:-1::0;;;;;2351:25:28;::::1;;::::0;;;:10:::1;:25;::::0;;;;:37;2312:17:::1;::::0;:90:::1;::::0;:21:::1;:90::i;:::-;2292:17;:110:::0;2231:182:::1;2445:1;2430:12;:16;:53;;;;;2466:17;;2450:12;:33;;2430:53;2422:62;;;::::0;::::1;;2523:98;::::0;;;;::::1;::::0;;;;;-1:-1:-1;2523:98:28::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;2495:25:28;::::1;::::0;;:10:::1;:25:::0;;;;;;;;:126;;;;;;;::::1;::::0;2651:17:::1;::::0;:35:::1;::::0;2566:12;2651:21:::1;:35::i;:::-;2631:17;:55:::0;2702:54:::1;::::0;;-1:-1:-1;;;;;2702:54:28;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;1829:934:::0;;:::o;598:104:5:-;685:10;598:104;:::o;3530:215:2:-;3588:7;3611:6;3607:20;;-1:-1:-1;3626:1:2;3619:8;;3607:20;3649:5;;;3653:1;3649;:5;:1;3672:5;;;;;:10;3664:56;;;;-1:-1:-1;;;3664:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3737:1;3530:215;-1:-1:-1;;;3530:215:2:o;2682:175::-;2740:7;2771:5;;;2794:6;;;;2786:46;;;;;-1:-1:-1;;;2786:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:155;3186:7;3218:1;3213;:6;;3205:49;;;;;-1:-1:-1;;;3205:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3271:5:2;;;3128:155::o;4209:150::-;4267:7;4298:1;4294;:5;4286:44;;;;;-1:-1:-1;;;4286:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4351:1;4347;:5;;;;;;;4209:150;-1:-1:-1;;;4209:150:2:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "649200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "LOCK_PERIODS()": "265",
        "RELEASE_PERIODS()": "222",
        "TOTAL_AMOUNT()": "287",
        "WITHDRAW_INTERVAL()": "310",
        "addRecipient(address,uint256)": "infinite",
        "isStartTimeSet()": "1098",
        "lockPeriods()": "1088",
        "owner()": "1104",
        "recipients(address)": "2010",
        "releasePeriods()": "1108",
        "renounceOwnership()": "infinite",
        "setStartTime(uint256)": "infinite",
        "startTime()": "1043",
        "totalAmount()": "1066",
        "totemToken()": "1059",
        "transferOwnership(address)": "infinite",
        "unallocatedAmount()": "1087",
        "vested(address)": "infinite",
        "withdraw()": "infinite",
        "withdrawInterval()": "1044",
        "withdrawable(address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "LOCK_PERIODS()": "494051a0",
      "RELEASE_PERIODS()": "00ad3a23",
      "TOTAL_AMOUNT()": "a2d7f5e3",
      "WITHDRAW_INTERVAL()": "30c6b5eb",
      "addRecipient(address,uint256)": "f7982243",
      "isStartTimeSet()": "f361c59b",
      "lockPeriods()": "2509e086",
      "owner()": "8da5cb5b",
      "recipients(address)": "eb820312",
      "releasePeriods()": "f57c8cdf",
      "renounceOwnership()": "715018a6",
      "setStartTime(uint256)": "3e0a322d",
      "startTime()": "78e97925",
      "totalAmount()": "1a39d8ef",
      "totemToken()": "e8153c93",
      "transferOwnership(address)": "f2fde38b",
      "unallocatedAmount()": "4afe5bf3",
      "vested(address)": "7102b728",
      "withdraw()": "3ccfd60b",
      "withdrawInterval()": "162075d8",
      "withdrawable(address)": "ce513b6f"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"_totemToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"StartTimeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registeredAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"VestingScheduleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registeredAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LOCK_PERIODS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELEASE_PERIODS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"}],\"name\":\"addRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStartTimeSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recipients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasePeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newStartTime\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totemToken\",\"outputs\":[{\"internalType\":\"contract TotemToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unallocatedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"vested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountVested\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TotemVesting/TeamVesting.sol\":\"TeamVesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/BasisPoints.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nlibrary BasisPoints {\\n    using SafeMath for uint256;\\n\\n    uint256 private constant BASIS_POINTS = 10000;\\n\\n    function mulBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        return amt.mul(bp).div(BASIS_POINTS);\\n    }\\n\\n    function divBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        require(bp > 0, \\\"Cannot divide by zero.\\\");\\n        return amt.mul(BASIS_POINTS).div(bp);\\n    }\\n\\n    function addBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.add(mulBP(amt, bp));\\n    }\\n\\n    function subBP(uint256 amt, uint256 bp) internal pure returns (uint256) {\\n        if (amt == 0) return 0;\\n        if (bp == 0) return amt;\\n        return amt.sub(mulBP(amt, bp));\\n    }\\n}\\n\",\"keccak256\":\"0x8344571960f250b1c03ba9f259c452b26b04370ac4723ef262969d822174bee6\",\"license\":\"UNLICENSED\"},\"contracts/ILocker.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\ninterface ILocker {\\n    /**\\n     * @dev Fails if transaction is not allowed.\\n     * Return values can be ignored for AntiBot launches\\n     */\\n    function lockOrGetPenalty(address source, address dest)\\n        external\\n        returns (bool, uint256);\\n}\\n\\ninterface ILockerUser {\\n    function locker() external view returns (ILocker);\\n\\n    /**\\n     * @dev Emitted when setLocker is called.\\n     */\\n    event SetLocker(address indexed locker);\\n}\\n\\n\",\"keccak256\":\"0x51a18df7a6b1708e8d614f547eb09dd79e64093413bb0081dbb8f0f411ce0e96\",\"license\":\"UNLICENSED\"},\"contracts/TotemToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"./ILocker.sol\\\";\\nimport \\\"./BasisPoints.sol\\\";\\n\\ncontract TotemToken is ILockerUser, Context, ERC20, Ownable {\\n    using BasisPoints for uint256;\\n    using SafeMath for uint256;\\n\\n    string public constant NAME = \\\"Totem Token\\\";\\n    string public constant SYMBOL = \\\"TOTM\\\";\\n    uint8 public constant DECIMALS = 18;\\n    uint256 public constant INITIAL_SUPPLY = 10000000 * (10**uint256(DECIMALS));\\n\\n    address public CommunityDevelopmentAddr;\\n    address public StakingRewardsAddr;\\n    address public LiquidityPoolAddr;\\n    address public PublicSaleAddr;\\n    address public AdvisorsAddr;\\n    address public SeedInvestmentAddr;\\n    address public PrivateSaleAddr;\\n    address public TeamAllocationAddr;\\n    address public StrategicRoundAddr;\\n\\n    uint256 public constant COMMUNITY_DEVELOPMENT =\\n        1000000 * (10**uint256(DECIMALS)); // 10% for Community development\\n    uint256 public constant STAKING_REWARDS = 1650000 * (10**uint256(DECIMALS)); // 16.5% for Staking Revawards\\n    uint256 public constant LIQUIDITY_POOL = 600000 * (10**uint256(DECIMALS)); // 6% for Liquidity pool\\n    uint256 public constant ADVISORS = 850000 * (10**uint256(DECIMALS)); // 8.5% for Advisors\\n    uint256 public constant SEED_INVESTMENT = 450000 * (10**uint256(DECIMALS)); // 4.5% for Seed investment\\n    uint256 public constant PRIVATE_SALE = 2000000 * (10**uint256(DECIMALS)); // 20% for Private Sale\\n    uint256 public constant TEAM_ALLOCATION = 1500000 * (10**uint256(DECIMALS)); // 15% for Team allocation\\n\\n    uint256 public constant LAUNCH_POOL =\\n        5882352941 * (10**uint256(DECIMALS - 5)); // 58823.52941 for LaunchPool\\n    uint256 public constant PUBLIC_SALE =\\n        450000 * (10**uint256(DECIMALS)) + LAUNCH_POOL; // 4.5% for Public Sale\\n    uint256 public constant STRATEGIC_ROUND =\\n        1500000 * (10**uint256(DECIMALS)) - LAUNCH_POOL; // 15% for Strategic Round\\n    uint256 public taxRate = 300;\\n    address public taxationWallet;\\n\\n    bool private _isDistributionComplete = false;\\n\\n    mapping(address => bool) public taxExempt;\\n\\n    ILocker public override locker;\\n\\n    constructor() ERC20(NAME, SYMBOL) {\\n        taxationWallet = _msgSender();\\n\\n        _mint(address(this), INITIAL_SUPPLY);\\n    }\\n\\n    function setLocker(address _locker) external onlyOwner() {\\n        require(_locker != address(0), \\\"_locker cannot be address(0)\\\");\\n        locker = ILocker(_locker);\\n        emit SetLocker(_locker);\\n    }\\n\\n    function setDistributionTeamsAddresses(\\n        address _CommunityDevelopmentAddr,\\n        address _StakingRewardsAddr,\\n        address _LiquidityPoolAddr,\\n        address _PublicSaleAddr,\\n        address _AdvisorsAddr,\\n        address _SeedInvestmentAddr,\\n        address _PrivateSaleAddr,\\n        address _TeamAllocationAddr,\\n        address _StrategicRoundAddr\\n    ) public onlyOwner {\\n        require(!_isDistributionComplete);\\n\\n        require(_CommunityDevelopmentAddr != address(0));\\n        require(_StakingRewardsAddr != address(0));\\n        require(_LiquidityPoolAddr != address(0));\\n        require(_PublicSaleAddr != address(0));\\n        require(_AdvisorsAddr != address(0));\\n        require(_SeedInvestmentAddr != address(0));\\n        require(_PrivateSaleAddr != address(0));\\n        require(_TeamAllocationAddr != address(0));\\n        require(_StrategicRoundAddr != address(0));\\n        // set parnters addresses\\n        CommunityDevelopmentAddr = _CommunityDevelopmentAddr;\\n        StakingRewardsAddr = _StakingRewardsAddr;\\n        LiquidityPoolAddr = _LiquidityPoolAddr;\\n        PublicSaleAddr = _PublicSaleAddr;\\n        AdvisorsAddr = _AdvisorsAddr;\\n        SeedInvestmentAddr = _SeedInvestmentAddr;\\n        PrivateSaleAddr = _PrivateSaleAddr;\\n        TeamAllocationAddr = _TeamAllocationAddr;\\n        StrategicRoundAddr = _StrategicRoundAddr;\\n    }\\n\\n    function distributeTokens() public onlyOwner {\\n        require((!_isDistributionComplete));\\n\\n        _transfer(\\n            address(this),\\n            CommunityDevelopmentAddr,\\n            COMMUNITY_DEVELOPMENT\\n        );\\n        _transfer(address(this), StakingRewardsAddr, STAKING_REWARDS);\\n        _transfer(address(this), LiquidityPoolAddr, LIQUIDITY_POOL);\\n        _transfer(address(this), PublicSaleAddr, PUBLIC_SALE);\\n        _transfer(address(this), AdvisorsAddr, ADVISORS);\\n        _transfer(address(this), SeedInvestmentAddr, SEED_INVESTMENT);\\n        _transfer(address(this), PrivateSaleAddr, PRIVATE_SALE);\\n        _transfer(address(this), TeamAllocationAddr, TEAM_ALLOCATION);\\n        _transfer(address(this), StrategicRoundAddr, STRATEGIC_ROUND);\\n\\n        // Whitelist these addresses as tex exempt\\n        setTaxExemptStatus(CommunityDevelopmentAddr, true);\\n        setTaxExemptStatus(StakingRewardsAddr, true);\\n        setTaxExemptStatus(LiquidityPoolAddr, true);\\n        setTaxExemptStatus(PublicSaleAddr, true);\\n        setTaxExemptStatus(AdvisorsAddr, true);\\n        setTaxExemptStatus(SeedInvestmentAddr, true);\\n        setTaxExemptStatus(PrivateSaleAddr, true);\\n        setTaxExemptStatus(TeamAllocationAddr, true);\\n        setTaxExemptStatus(StrategicRoundAddr, true);\\n\\n        _isDistributionComplete = true;\\n    }\\n\\n    function setTaxRate(uint256 newTaxRate) public onlyOwner {\\n        require(newTaxRate < 10000, \\\"Tax connot be over 100% (10000 BP)\\\");\\n        taxRate = newTaxRate;\\n    }\\n\\n    function setTaxExemptStatus(address account, bool status) public onlyOwner {\\n        require(account != address(0));\\n        taxExempt[account] = status;\\n    }\\n\\n    function setTaxationWallet(address newTaxationWallet) public onlyOwner {\\n        require(newTaxationWallet != address(0));\\n        taxationWallet = newTaxationWallet;\\n    }\\n\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        if (address(locker) != address(0)) {\\n            locker.lockOrGetPenalty(sender, recipient);\\n        }\\n        ERC20._transfer(sender, recipient, amount);\\n    }\\n\\n    function _transferWithTax(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        require(sender != recipient, \\\"Cannot self transfer\\\");\\n\\n        uint256 tax = amount.mulBP(taxRate);\\n        uint256 tokensToTransfer = amount.sub(tax);\\n\\n        _transfer(sender, taxationWallet, tax);\\n        _transfer(sender, recipient, tokensToTransfer);\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        require(_msgSender() != recipient, \\\"ERC20: cannot self transfer\\\");\\n        !taxExempt[_msgSender()]\\n            ? _transferWithTax(_msgSender(), recipient, amount)\\n            : _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        !taxExempt[sender]\\n            ? _transferWithTax(sender, recipient, amount)\\n            : _transfer(sender, recipient, amount);\\n\\n        approve(\\n            _msgSender(),\\n            allowance(sender, _msgSender()).sub(\\n                amount,\\n                \\\"Transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xfa21ba84a53a411dd96bf813d4c25a1168b631e1e5d098bb892c7e46a5e83ab0\",\"license\":\"UNLICENSED\"},\"contracts/TotemVesting/TeamVesting.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"./TotemVesting.sol\\\";\\n\\ncontract TeamVesting is TotemVesting {\\n    uint256 public constant TOTAL_AMOUNT = 1500000 * (10**18);\\n    uint256 public constant WITHDRAW_INTERVAL = 30 days;\\n    uint256 public constant RELEASE_PERIODS = 12;\\n    uint256 public constant LOCK_PERIODS = 6;\\n\\n    constructor(TotemToken _totemToken)\\n        TotemVesting(\\n            _totemToken,\\n            TOTAL_AMOUNT,\\n            WITHDRAW_INTERVAL,\\n            RELEASE_PERIODS,\\n            LOCK_PERIODS\\n        )\\n    {}\\n}\\n\",\"keccak256\":\"0x18b0f2ff4b3ad8eaabd253ee6740aed98792ef5f73c2f6f8e84575c0024cd642\",\"license\":\"UNLICENSED\"},\"contracts/TotemVesting/TotemVesting.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"../TotemToken.sol\\\";\\n\\ncontract TotemVesting is Context, Ownable {\\n    using SafeMath for uint256;\\n\\n    struct VestingSchedule {\\n        uint256 totalAmount; // Total amount of tokens to be vested.\\n        uint256 amountWithdrawn; // The amount that has been withdrawn.\\n    }\\n\\n    mapping(address => VestingSchedule) public recipients;\\n\\n    uint256 public startTime;\\n    bool public isStartTimeSet;\\n    uint256 public withdrawInterval; // Amount of time in seconds between withdrawal periods.\\n    uint256 public releasePeriods; // Number of periods from start release until done.\\n    uint256 public lockPeriods; // Number of periods before start release.\\n\\n    uint256 public totalAmount; // Total amount of tokens to be vested.\\n    uint256 public unallocatedAmount; // The amount of tokens that are not allocated yet.\\n\\n    TotemToken public totemToken;\\n\\n    event VestingScheduleRegistered(\\n        address registeredAddress,\\n        uint256 totalAmount\\n    );\\n    event Withdraw(address registeredAddress, uint256 amountWithdrawn);\\n    event StartTimeSet(uint256 startTime);\\n\\n    constructor(\\n        TotemToken _totemToken,\\n        uint256 _totalAmount,\\n        uint256 _withdrawInterval,\\n        uint256 _releasePeriods,\\n        uint256 _lockPeriods\\n    ) {\\n        require(_totalAmount > 0);\\n        require(_withdrawInterval > 0);\\n        require(_releasePeriods > 0);\\n\\n        totemToken = _totemToken;\\n\\n        totalAmount = _totalAmount;\\n        unallocatedAmount = _totalAmount;\\n        withdrawInterval = _withdrawInterval;\\n        releasePeriods = _releasePeriods;\\n        lockPeriods = _lockPeriods;\\n\\n        isStartTimeSet = false;\\n    }\\n\\n    function addRecipient(address _newRecipient, uint256 _totalAmount)\\n        public\\n        onlyOwner\\n    {\\n        // Only allow to add recipient before the counting starts\\n        require(!isStartTimeSet || startTime > block.timestamp);\\n\\n        require(_newRecipient != address(0));\\n\\n        // If the vesting amount for the recipient was already set, remove it and update with the new amount\\n        if (recipients[_newRecipient].totalAmount > 0) {\\n            unallocatedAmount = unallocatedAmount.add(\\n                recipients[_newRecipient].totalAmount\\n            );\\n        }\\n        require(_totalAmount > 0 && _totalAmount <= unallocatedAmount);\\n\\n        recipients[_newRecipient] = VestingSchedule({\\n            totalAmount: _totalAmount,\\n            amountWithdrawn: 0\\n        });\\n        unallocatedAmount = unallocatedAmount.sub(_totalAmount);\\n\\n        emit VestingScheduleRegistered(_newRecipient, _totalAmount);\\n    }\\n\\n    function setStartTime(uint256 _newStartTime) public onlyOwner {\\n        // Only allow to change start time before the counting starts\\n        require(!isStartTimeSet || startTime > block.timestamp);\\n        require(_newStartTime > block.timestamp);\\n\\n        startTime = _newStartTime;\\n        isStartTimeSet = true;\\n\\n        emit StartTimeSet(_newStartTime);\\n    }\\n\\n    // Returns the amount of tokens you can withdraw\\n    function vested(address beneficiary)\\n        public\\n        view\\n        virtual\\n        returns (uint256 _amountVested)\\n    {\\n        VestingSchedule memory _vestingSchedule = recipients[beneficiary];\\n        if (\\n            !isStartTimeSet ||\\n            (_vestingSchedule.totalAmount == 0) ||\\n            (lockPeriods == 0 && releasePeriods == 0) ||\\n            (block.timestamp < startTime)\\n        ) {\\n            return 0;\\n        }\\n\\n        uint256 endLock = withdrawInterval.mul(lockPeriods);\\n        if (block.timestamp < startTime.add(endLock)) {\\n            return 0;\\n        }\\n\\n        uint256 _end = withdrawInterval.mul(lockPeriods.add(releasePeriods));\\n        if (block.timestamp >= startTime.add(_end)) {\\n            return _vestingSchedule.totalAmount;\\n        }\\n\\n        uint256 period =\\n            block.timestamp.sub(startTime).div(withdrawInterval) + 1;\\n        if (period <= lockPeriods) {\\n            return 0;\\n        }\\n        if (period >= lockPeriods.add(releasePeriods)) {\\n            return _vestingSchedule.totalAmount;\\n        }\\n\\n        uint256 lockAmount = _vestingSchedule.totalAmount.div(releasePeriods);\\n\\n        uint256 vestedAmount = period.sub(lockPeriods).mul(lockAmount);\\n        return vestedAmount;\\n    }\\n\\n    function withdrawable(address beneficiary)\\n        public\\n        view\\n        returns (uint256 amount)\\n    {\\n        return vested(beneficiary).sub(recipients[beneficiary].amountWithdrawn);\\n    }\\n\\n    function withdraw() public {\\n        VestingSchedule storage vestingSchedule = recipients[_msgSender()];\\n        if (vestingSchedule.totalAmount == 0) return;\\n\\n        uint256 _vested = vested(_msgSender());\\n        uint256 _withdrawable = withdrawable(_msgSender());\\n        vestingSchedule.amountWithdrawn = _vested;\\n\\n        if (_withdrawable > 0) {\\n            require(totemToken.transfer(_msgSender(), _withdrawable));\\n            emit Withdraw(_msgSender(), _withdrawable);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5df485ac7e03fd5099fe058cb144bb0076ebebe6c4caf223b8305e254bf9490f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6417,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "recipients",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(VestingSchedule)6413_storage)"
      },
      {
        "astId": 6419,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "startTime",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 6421,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "isStartTimeSet",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 6423,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "withdrawInterval",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 6425,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "releasePeriods",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 6427,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "lockPeriods",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 6429,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "totalAmount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 6431,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "unallocatedAmount",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 6433,
        "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
        "label": "totemToken",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(TotemToken)5743"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(TotemToken)5743": {
        "encoding": "inplace",
        "label": "contract TotemToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(VestingSchedule)6413_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct TotemVesting.VestingSchedule)",
        "numberOfBytes": "32",
        "value": "t_struct(VestingSchedule)6413_storage"
      },
      "t_struct(VestingSchedule)6413_storage": {
        "encoding": "inplace",
        "label": "struct TotemVesting.VestingSchedule",
        "members": [
          {
            "astId": 6410,
            "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
            "label": "totalAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6412,
            "contract": "contracts/TotemVesting/TeamVesting.sol:TeamVesting",
            "label": "amountWithdrawn",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}